import test from 'ava'

import geom3 from '../geometries/geom3'

import { geodesicSphere } from './index'

import comparePolygonsAsPoints from '../../test/helpers/comparePolygonsAsPoints'

test('geodesicSphere (defaults)', (t) => {
  const obs = geodesicSphere()
  const pts = geom3.toPoints(obs)
  t.is(pts.length, 20)
})

test('geodesicSphere (options)', (t) => {
  // test radius
  let obs = geodesicSphere({ radius: 5 })
  let pts = geom3.toPoints(obs)
  const exp = [
    [[4.253254557317035, 0, 2.628654726407001], [2.628654726407001, -4.253254557317035, 0], [4.253254557317035, 0, -2.628654726407001]],
    [[4.253254557317035, 0, -2.628654726407001], [2.628654726407001, 4.253254557317035, 0], [4.253254557317035, 0, 2.628654726407001]],
    [[4.253254557317035, 0, -2.628654726407001], [0, -2.628654726407001, -4.253254557317035], [0, 2.628654726407001, -4.253254557317035]],
    [[4.253254557317035, 0, -2.628654726407001], [0, 2.628654726407001, -4.253254557317035], [2.628654726407001, 4.253254557317035, 0]],
    [[4.253254557317035, 0, -2.628654726407001], [2.628654726407001, -4.253254557317035, 0], [0, -2.628654726407001, -4.253254557317035]],
    [[0, -2.628654726407001, 4.253254557317035], [4.253254557317035, 0, 2.628654726407001], [0, 2.628654726407001, 4.253254557317035]],
    [[2.628654726407001, -4.253254557317035, 0], [4.253254557317035, 0, 2.628654726407001], [0, -2.628654726407001, 4.253254557317035]],
    [[4.253254557317035, 0, 2.628654726407001], [2.628654726407001, 4.253254557317035, 0], [0, 2.628654726407001, 4.253254557317035]],
    [[-4.253254557317035, 0, -2.628654726407001], [-2.628654726407001, -4.253254557317035, 0], [-4.253254557317035, 0, 2.628654726407001]],
    [[-4.253254557317035, 0, 2.628654726407001], [-2.628654726407001, 4.253254557317035, 0], [-4.253254557317035, 0, -2.628654726407001]],
    [[0, -2.628654726407001, 4.253254557317035], [0, 2.628654726407001, 4.253254557317035], [-4.253254557317035, 0, 2.628654726407001]],
    [[-4.253254557317035, 0, 2.628654726407001], [-2.628654726407001, -4.253254557317035, 0], [0, -2.628654726407001, 4.253254557317035]],
    [[0, 2.628654726407001, 4.253254557317035], [-2.628654726407001, 4.253254557317035, 0], [-4.253254557317035, 0, 2.628654726407001]],
    [[0, 2.628654726407001, -4.253254557317035], [0, -2.628654726407001, -4.253254557317035], [-4.253254557317035, 0, -2.628654726407001]],
    [[-4.253254557317035, 0, -2.628654726407001], [-2.628654726407001, 4.253254557317035, 0], [0, 2.628654726407001, -4.253254557317035]],
    [[-4.253254557317035, 0, -2.628654726407001], [0, -2.628654726407001, -4.253254557317035], [-2.628654726407001, -4.253254557317035, 0]],
    [[0, -2.628654726407001, 4.253254557317035], [-2.628654726407001, -4.253254557317035, 0], [2.628654726407001, -4.253254557317035, 0]],
    [[0, 2.628654726407001, 4.253254557317035], [2.628654726407001, 4.253254557317035, 0], [-2.628654726407001, 4.253254557317035, 0]],
    [[0, 2.628654726407001, -4.253254557317035], [-2.628654726407001, 4.253254557317035, 0], [2.628654726407001, 4.253254557317035, 0]],
    [[0, -2.628654726407001, -4.253254557317035], [2.628654726407001, -4.253254557317035, 0], [-2.628654726407001, -4.253254557317035, 0]]
  ]

  t.is(pts.length, 20)
  t.true(comparePolygonsAsPoints(pts, exp))

  // test frequency
  obs = geodesicSphere({ radius: 5, frequency: 18 })
  pts = geom3.toPoints(obs)

  t.is(pts.length, 180)
})
