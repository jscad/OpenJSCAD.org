(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.jscadModeling = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
const cssColors=require("./cssColors"),colorNameToRgb=o=>cssColors[o.toLowerCase()];module.exports=colorNameToRgb;

},{"./cssColors":3}],2:[function(require,module,exports){
const flatten=require("../utils/flatten"),geom2=require("../geometries/geom2"),geom3=require("../geometries/geom3"),path2=require("../geometries/path2"),poly3=require("../geometries/poly3"),colorGeom2=(o,e)=>{const r=geom2.create(geom2.toSides(e));return r.color=o,r},colorGeom3=(o,e)=>{const r=geom3.create(geom3.toPolygons(e));return r.color=o,r},colorPath2=(o,e)=>{const r=path2.clone(e);return r.color=o,r},colorPoly3=(o,e)=>{const r=poly3.clone(e);return r.color=o,r},colorize=(o,...e)=>{if(!Array.isArray(o))throw new Error("color must be an array");if(o.length<3)throw new Error("color must contain R, G and B values");if(3===o.length&&(o=[o[0],o[1],o[2],1]),0===(e=flatten(e)).length)throw new Error("wrong number of arguments");const r=e.map(e=>geom2.isA(e)?colorGeom2(o,e):geom3.isA(e)?colorGeom3(o,e):path2.isA(e)?colorPath2(o,e):poly3.isA(e)?colorPoly3(o,e):(e.color=o,e));return 1===r.length?r[0]:r};module.exports=colorize;

},{"../geometries/geom2":22,"../geometries/geom3":36,"../geometries/path2":57,"../geometries/poly3":73,"../utils/flatten":356}],3:[function(require,module,exports){
const cssColors={black:[0,0,0],silver:[192/255,192/255,192/255],gray:[128/255,128/255,128/255],white:[1,1,1],maroon:[128/255,0,0],red:[1,0,0],purple:[128/255,0,128/255],fuchsia:[1,0,1],green:[0,128/255,0],lime:[0,1,0],olive:[128/255,128/255,0],yellow:[1,1,0],navy:[0,0,128/255],blue:[0,0,1],teal:[0,128/255,128/255],aqua:[0,1,1],aliceblue:[240/255,248/255,1],antiquewhite:[250/255,235/255,215/255],aquamarine:[127/255,1,212/255],azure:[240/255,1,1],beige:[245/255,245/255,220/255],bisque:[1,228/255,196/255],blanchedalmond:[1,235/255,205/255],blueviolet:[138/255,43/255,226/255],brown:[165/255,42/255,42/255],burlywood:[222/255,184/255,135/255],cadetblue:[95/255,158/255,160/255],chartreuse:[127/255,1,0],chocolate:[210/255,105/255,30/255],coral:[1,127/255,80/255],cornflowerblue:[100/255,149/255,237/255],cornsilk:[1,248/255,220/255],crimson:[220/255,20/255,60/255],cyan:[0,1,1],darkblue:[0,0,139/255],darkcyan:[0,139/255,139/255],darkgoldenrod:[184/255,134/255,11/255],darkgray:[169/255,169/255,169/255],darkgreen:[0,100/255,0],darkgrey:[169/255,169/255,169/255],darkkhaki:[189/255,183/255,107/255],darkmagenta:[139/255,0,139/255],darkolivegreen:[85/255,107/255,47/255],darkorange:[1,140/255,0],darkorchid:[.6,50/255,.8],darkred:[139/255,0,0],darksalmon:[233/255,150/255,122/255],darkseagreen:[143/255,188/255,143/255],darkslateblue:[72/255,61/255,139/255],darkslategray:[47/255,79/255,79/255],darkslategrey:[47/255,79/255,79/255],darkturquoise:[0,206/255,209/255],darkviolet:[148/255,0,211/255],deeppink:[1,20/255,147/255],deepskyblue:[0,191/255,1],dimgray:[105/255,105/255,105/255],dimgrey:[105/255,105/255,105/255],dodgerblue:[30/255,144/255,1],firebrick:[178/255,34/255,34/255],floralwhite:[1,250/255,240/255],forestgreen:[34/255,139/255,34/255],gainsboro:[220/255,220/255,220/255],ghostwhite:[248/255,248/255,1],gold:[1,215/255,0],goldenrod:[218/255,165/255,32/255],greenyellow:[173/255,1,47/255],grey:[128/255,128/255,128/255],honeydew:[240/255,1,240/255],hotpink:[1,105/255,180/255],indianred:[205/255,92/255,92/255],indigo:[75/255,0,130/255],ivory:[1,1,240/255],khaki:[240/255,230/255,140/255],lavender:[230/255,230/255,250/255],lavenderblush:[1,240/255,245/255],lawngreen:[124/255,252/255,0],lemonchiffon:[1,250/255,205/255],lightblue:[173/255,216/255,230/255],lightcoral:[240/255,128/255,128/255],lightcyan:[224/255,1,1],lightgoldenrodyellow:[250/255,250/255,210/255],lightgray:[211/255,211/255,211/255],lightgreen:[144/255,238/255,144/255],lightgrey:[211/255,211/255,211/255],lightpink:[1,182/255,193/255],lightsalmon:[1,160/255,122/255],lightseagreen:[32/255,178/255,170/255],lightskyblue:[135/255,206/255,250/255],lightslategray:[119/255,136/255,.6],lightslategrey:[119/255,136/255,.6],lightsteelblue:[176/255,196/255,222/255],lightyellow:[1,1,224/255],limegreen:[50/255,205/255,50/255],linen:[250/255,240/255,230/255],magenta:[1,0,1],mediumaquamarine:[.4,205/255,170/255],mediumblue:[0,0,205/255],mediumorchid:[186/255,85/255,211/255],mediumpurple:[147/255,112/255,219/255],mediumseagreen:[60/255,179/255,113/255],mediumslateblue:[123/255,104/255,238/255],mediumspringgreen:[0,250/255,154/255],mediumturquoise:[72/255,209/255,.8],mediumvioletred:[199/255,21/255,133/255],midnightblue:[25/255,25/255,112/255],mintcream:[245/255,1,250/255],mistyrose:[1,228/255,225/255],moccasin:[1,228/255,181/255],navajowhite:[1,222/255,173/255],oldlace:[253/255,245/255,230/255],olivedrab:[107/255,142/255,35/255],orange:[1,165/255,0],orangered:[1,69/255,0],orchid:[218/255,112/255,214/255],palegoldenrod:[238/255,232/255,170/255],palegreen:[152/255,251/255,152/255],paleturquoise:[175/255,238/255,238/255],palevioletred:[219/255,112/255,147/255],papayawhip:[1,239/255,213/255],peachpuff:[1,218/255,185/255],peru:[205/255,133/255,63/255],pink:[1,192/255,203/255],plum:[221/255,160/255,221/255],powderblue:[176/255,224/255,230/255],rosybrown:[188/255,143/255,143/255],royalblue:[65/255,105/255,225/255],saddlebrown:[139/255,69/255,19/255],salmon:[250/255,128/255,114/255],sandybrown:[244/255,164/255,96/255],seagreen:[46/255,139/255,87/255],seashell:[1,245/255,238/255],sienna:[160/255,82/255,45/255],skyblue:[135/255,206/255,235/255],slateblue:[106/255,90/255,205/255],slategray:[112/255,128/255,144/255],slategrey:[112/255,128/255,144/255],snow:[1,250/255,250/255],springgreen:[0,1,127/255],steelblue:[70/255,130/255,180/255],tan:[210/255,180/255,140/255],thistle:[216/255,191/255,216/255],tomato:[1,99/255,71/255],turquoise:[64/255,224/255,208/255],violet:[238/255,130/255,238/255],wheat:[245/255,222/255,179/255],whitesmoke:[245/255,245/255,245/255],yellowgreen:[154/255,205/255,50/255]};module.exports=cssColors;

},{}],4:[function(require,module,exports){
const hexToRgb=t=>{if((t=t.replace("#","")).length<6)throw new Error("the given notation must contain 3 or more hex values");const e=parseInt(t.substring(0,2),16)/255,n=parseInt(t.substring(2,4),16)/255,r=parseInt(t.substring(4,6),16)/255;if(t.length>=8){return[e,n,r,parseInt(t.substring(6,8),16)/255]}return[e,n,r]};module.exports=hexToRgb;

},{}],5:[function(require,module,exports){
const flatten=require("../utils/flatten"),hueToColorComponent=require("./hueToColorComponent"),hslToRgb=(...o)=>{if((o=flatten(o)).length<3)throw new Error("values must contain H, S and L values");const e=o[0],n=o[1],t=o[2];let r=t,l=t,u=t;if(0!==n){const o=t<.5?t*(1+n):t+n-t*n,h=2*t-o;r=hueToColorComponent(h,o,e+1/3),l=hueToColorComponent(h,o,e),u=hueToColorComponent(h,o,e-1/3)}if(o.length>3){return[r,l,u,o[3]]}return[r,l,u]};module.exports=hslToRgb;

},{"../utils/flatten":356,"./hueToColorComponent":7}],6:[function(require,module,exports){
const flatten=require("../utils/flatten"),hsvToRgb=(...e)=>{if((e=flatten(e)).length<3)throw new Error("values must contain H, S and V values");const t=e[0],a=e[1],r=e[2];let s=0,n=0,o=0;const c=Math.floor(6*t),l=6*t-c,u=r*(1-a),b=r*(1-l*a),h=r*(1-(1-l)*a);switch(c%6){case 0:s=r,n=h,o=u;break;case 1:s=b,n=r,o=u;break;case 2:s=u,n=r,o=h;break;case 3:s=u,n=b,o=r;break;case 4:s=h,n=u,o=r;break;case 5:s=r,n=u,o=b}if(e.length>3){return[s,n,o,e[3]]}return[s,n,o]};module.exports=hsvToRgb;

},{"../utils/flatten":356}],7:[function(require,module,exports){
const hueToColorComponent=(o,e,n)=>(n<0&&(n+=1),n>1&&(n-=1),n<1/6?o+6*(e-o)*n:n<.5?e:n<2/3?o+(e-o)*(2/3-n)*6:o);module.exports=hueToColorComponent;

},{}],8:[function(require,module,exports){
module.exports={colorize:require("./colorize"),colorNameToRgb:require("./colorNameToRgb"),cssColors:require("./cssColors"),hexToRgb:require("./hexToRgb"),hslToRgb:require("./hslToRgb"),hsvToRgb:require("./hsvToRgb"),hueToColorComponent:require("./hueToColorComponent"),rgbToHex:require("./rgbToHex"),rgbToHsl:require("./rgbToHsl"),rgbToHsv:require("./rgbToHsv")};

},{"./colorNameToRgb":1,"./colorize":2,"./cssColors":3,"./hexToRgb":4,"./hslToRgb":5,"./hsvToRgb":6,"./hueToColorComponent":7,"./rgbToHex":9,"./rgbToHsl":10,"./rgbToHsv":11}],9:[function(require,module,exports){
const flatten=require("../utils/flatten"),rgbToHex=(...t)=>{if((t=flatten(t)).length<3)throw new Error("values must contain R, G and B values");const e=255*t[0],r=255*t[1],n=255*t[2];let o=`#${Number(16777216+65536*e+256*r+n).toString(16).substring(1,7)}`;return t.length>3&&(o+=Number(255*t[3]).toString(16)),o};module.exports=rgbToHex;

},{"../utils/flatten":356}],10:[function(require,module,exports){
const flatten=require("../utils/flatten"),rgbToHsl=(...t)=>{if((t=flatten(t)).length<3)throw new Error("values must contain R, G and B values");const e=t[0],n=t[1],s=t[2],a=Math.max(e,n,s),r=Math.min(e,n,s);let l,o;const c=(a+r)/2;if(a===r)l=o=0;else{const t=a-r;switch(o=c>.5?t/(2-a-r):t/(a+r),a){case e:l=(n-s)/t+(n<s?6:0);break;case n:l=(s-e)/t+2;break;case s:l=(e-n)/t+4}l/=6}if(t.length>3){return[l,o,c,t[3]]}return[l,o,c]};module.exports=rgbToHsl;

},{"../utils/flatten":356}],11:[function(require,module,exports){
const flatten=require("../utils/flatten"),rgbToHsv=(...e)=>{if((e=flatten(e)).length<3)throw new Error("values must contain R, G and B values");const t=e[0],a=e[1],n=e[2],r=Math.max(t,a,n),s=Math.min(t,a,n);let l;const o=r,c=r-s,i=0===r?0:c/r;if(r===s)l=0;else{switch(r){case t:l=(a-n)/c+(a<n?6:0);break;case a:l=(n-t)/c+2;break;case n:l=(t-a)/c+4}l/=6}if(e.length>3){return[l,i,o,e[3]]}return[l,i,o]};module.exports=rgbToHsv;

},{"../utils/flatten":356}],12:[function(require,module,exports){
const create=e=>{if(!Array.isArray(e))throw new Error("Bezier points must be a valid array/");if(e.length<2)throw new Error("Bezier points must contain at least 2 values.");const r=getPointType(e);return{points:e,pointType:r,dimensions:"float_single"===r?0:e[0].length,permutations:getPermutations(e.length-1),tangentPermutations:getPermutations(e.length-2)}},getPointType=function(e){let r=null;return e.forEach(e=>{let t="";if(Number.isFinite(e))t="float_single";else{if(!Array.isArray(e))throw new Error("Bezier points must all be numbers or arrays of number.");e.forEach(e=>{if(!Number.isFinite(e))throw new Error("Bezier point values must all be numbers.")}),t="float_"+e.length}if(null==r)r=t;else if(r!==t)throw new Error("Bezier points must be either all numbers or all arrays of numbers of the same size.")}),r},getPermutations=function(e){const r=[];for(let t=0;t<=e;t++)r.push(factorial(e)/(factorial(t)*factorial(e-t)));return r},factorial=function(e){let r=1;for(let t=2;t<=e;t++)r*=t;return r};module.exports=create;

},{}],13:[function(require,module,exports){
module.exports={create:require("./create"),valueAt:require("./valueAt"),tangentAt:require("./tangentAt")};

},{"./create":12,"./tangentAt":14,"./valueAt":15}],14:[function(require,module,exports){
const tangentAt=(t,n)=>{if(t<0||t>1)throw new Error("Bezier tangentAt() input must be between 0 and 1");if("float_single"===n.pointType)return bezierTangent(n,n.points,t);{const e=[];for(let o=0;o<n.dimensions;o++){const r=[];for(let t=0;t<n.points.length;t++)r.push(n.points[t][o]);e.push(bezierTangent(n,r,t))}return e}},bezierTangent=function(t,n,e){const o=n.length-1;let r=0;for(let i=0;i<o;i++){const s=o*(n[i+1]-n[i]);r+=t.tangentPermutations[i]*Math.pow(1-e,o-1-i)*Math.pow(e,i)*s}return r};module.exports=tangentAt;

},{}],15:[function(require,module,exports){
const valueAt=(t,e)=>{if(t<0||t>1)throw new Error("Bezier valueAt() input must be between 0 and 1");if("float_single"===e.pointType)return bezierFunction(e,e.points,t);{const n=[];for(let o=0;o<e.dimensions;o++){const i=[];for(let t=0;t<e.points.length;t++)i.push(e.points[t][o]);n.push(bezierFunction(e,i,t))}return n}},bezierFunction=function(t,e,n){const o=e.length-1;let i=0;for(let r=0;r<=o;r++)i+=t.permutations[r]*Math.pow(1-n,o-r)*Math.pow(n,r)*e[r];return i};module.exports=valueAt;

},{}],16:[function(require,module,exports){
module.exports={bezier:require("./bezier")};

},{"./bezier":13}],17:[function(require,module,exports){
const mat4=require("../../maths/mat4"),vec2=require("../../maths/vec2"),applyTransforms=r=>mat4.equals(r.transforms,mat4.identity())?r:(r.sides=r.sides.map(s=>{return[vec2.transform(r.transforms,s[0]),vec2.transform(r.transforms,s[1])]}),mat4.identity(r.transforms),r);module.exports=applyTransforms;

},{"../../maths/mat4":133,"../../maths/vec2":179}],18:[function(require,module,exports){
const mat4=require("../../maths/mat4"),vec2=require("../../maths/vec2"),create=require("./create"),clone=e=>{const r=create();return r.sides=e.sides.map(e=>[vec2.clone(e[0]),vec2.clone(e[1])]),r.transforms=mat4.clone(e.transforms),r};module.exports=clone;

},{"../../maths/mat4":133,"../../maths/vec2":179,"./create":19}],19:[function(require,module,exports){
const mat4=require("../../maths/mat4"),create=t=>(void 0===t&&(t=[]),{sides:t,transforms:mat4.identity()});module.exports=create;

},{"../../maths/mat4":133}],20:[function(require,module,exports){
const mat4=require("../../maths/mat4"),vec2=require("../../maths/vec2"),create=require("./create"),fromCompactBinary=e=>{if(0!==e[0])throw new Error("invalid compact binary data");const r=create();r.transforms=mat4.clone(e.slice(1,17));for(let t=21;t<e.length;t+=4){const a=vec2.fromValues(e[t+0],e[t+1]),o=vec2.fromValues(e[t+2],e[t+3]);r.sides.push([a,o])}return e[17]>=0&&(r.color=[e[17],e[18],e[19],e[20]]),r};module.exports=fromCompactBinary;

},{"../../maths/mat4":133,"../../maths/vec2":179,"./create":19}],21:[function(require,module,exports){
const vec2=require("../../maths/vec2"),create=require("./create"),fromPoints=e=>{if(!Array.isArray(e))throw new Error("the given points must be an array");let r=e.length;if(r<3)throw new Error("the given points must define a closed geometry with three or more points");vec2.equals(e[0],e[r-1])&&--r;const t=[];let o=e[r-1];for(let n=0;n<r;n++){const r=e[n];t.push([vec2.fromArray(o),vec2.fromArray(r)]),o=r}return create(t)};module.exports=fromPoints;

},{"../../maths/vec2":179,"./create":19}],22:[function(require,module,exports){
module.exports={clone:require("./clone"),create:require("./create"),fromPoints:require("./fromPoints"),fromCompactBinary:require("./fromCompactBinary"),isA:require("./isA"),reverse:require("./reverse"),toOutlines:require("./toOutlines"),toPoints:require("./toPoints"),toSides:require("./toSides"),toString:require("./toString"),toCompactBinary:require("./toCompactBinary"),transform:require("./transform")};

},{"./clone":18,"./create":19,"./fromCompactBinary":20,"./fromPoints":21,"./isA":23,"./reverse":24,"./toCompactBinary":25,"./toOutlines":26,"./toPoints":27,"./toSides":28,"./toString":29,"./transform":30}],23:[function(require,module,exports){
const isA=s=>!!(s&&"object"==typeof s&&"sides"in s&&"transforms"in s&&Array.isArray(s.sides)&&"length"in s.transforms);module.exports=isA;

},{}],24:[function(require,module,exports){
const create=require("./create"),toSides=require("./toSides"),reverse=e=>{const r=toSides(e).map(e=>[e[1],e[0]]);return r.reverse(),create(r)};module.exports=reverse;

},{"./create":19,"./toSides":28}],25:[function(require,module,exports){
const toCompactBinary=o=>{const t=o.sides,r=o.transforms;let n=[-1,-1,-1,-1];o.color&&(n=o.color);const e=new Float32Array(21+4*t.length);e[0]=0,e[1]=r[0],e[2]=r[1],e[3]=r[2],e[4]=r[3],e[5]=r[4],e[6]=r[5],e[7]=r[6],e[8]=r[7],e[9]=r[8],e[10]=r[9],e[11]=r[10],e[12]=r[11],e[13]=r[12],e[14]=r[13],e[15]=r[14],e[16]=r[15],e[17]=n[0],e[18]=n[1],e[19]=n[2],e[20]=n[3];for(let o=0;o<t.length;o++){const r=4*o+21,n=t[o][0],s=t[o][1];e[r+0]=n[0],e[r+1]=n[1],e[r+2]=s[0],e[r+3]=s[1]}return e};module.exports=toCompactBinary;

},{}],26:[function(require,module,exports){
const vec2=require("../../maths/vec2"),toSides=require("./toSides"),toEdges=e=>{const t=[],s=e=>{const s=t.findIndex(t=>vec2.equals(t,e));return s<0?(t.push(e),e):t[s]},o=[];return e.forEach(e=>{o.push([s(e[0]),s(e[1])])}),o},toOutlines=e=>{const t=new Map;toEdges(toSides(e)).forEach(e=>{t.has(e[0])||t.set(e[0],[]),t.get(e[0]).push(e)});const s=[];for(;;){let e;for(const[s,o]of t){if(e=o.shift())break;t.delete(s)}if(void 0===e)break;const o=[],r=e[0];for(;;){o.push(e[0]);const s=e[1];if(s===r)break;const n=t.get(s);if(!n)throw new Error("the given geometry is not closed. verify proper construction");let c=-1;if(1===n.length)c=0;else{let t;const s=vec2.angleDegrees(vec2.subtract(e[1],e[0]));for(let e=0;e<n.length;e++){const o=n[e];let r=vec2.angleDegrees(vec2.subtract(o[1],o[0]))-s;r<-180&&(r+=360),r>=180&&(r-=360),(c<0||r>t)&&(c=e,t=r)}}const i=n[c];n.splice(c,1),0===n.length&&t.delete(s),e=i}o.length>0&&o.push(o.shift()),s.push(o)}return t.clear(),s};module.exports=toOutlines;

},{"../../maths/vec2":179,"./toSides":28}],27:[function(require,module,exports){
const toSides=require("./toSides"),toPoints=t=>{const o=toSides(t).map(t=>t[0]);return o.length>0&&o.push(o.shift()),o};module.exports=toPoints;

},{"./toSides":28}],28:[function(require,module,exports){
const applyTransforms=require("./applyTransforms"),toSides=s=>applyTransforms(s).sides;module.exports=toSides;

},{"./applyTransforms":17}],29:[function(require,module,exports){
const vec2=require("../../maths/vec2"),toSides=require("./toSides"),toString=e=>{const t=toSides(e);let o="geom2 ("+t.length+" sides):\n[\n";return t.forEach(e=>{o+="  ["+vec2.toString(e[0])+", "+vec2.toString(e[1])+"]\n"}),o+="]\n"};module.exports=toString;

},{"../../maths/vec2":179,"./toSides":28}],30:[function(require,module,exports){
const mat4=require("../../maths/mat4"),create=require("./create"),transform=(r,t)=>{const e=create(t.sides);return e.transforms=mat4.multiply(r,t.transforms),e};module.exports=transform;

},{"../../maths/mat4":133,"./create":19}],31:[function(require,module,exports){
const mat4=require("../../maths/mat4"),poly3=require("../poly3"),applyTransforms=r=>mat4.equals(r.transforms,mat4.identity())?r:(r.polygons=r.polygons.map(s=>poly3.transform(r.transforms,s)),mat4.identity(r.transforms),r);module.exports=applyTransforms;

},{"../../maths/mat4":133,"../poly3":73}],32:[function(require,module,exports){
const mat4=require("../../maths/mat4"),poly3=require("../poly3"),create=require("./create"),clone=e=>{const o=create();return o.polygons=e.polygons.map(e=>poly3.clone(e)),o.isRetesselated=e.isRetesselated,o.transforms=mat4.clone(e.transforms),o};module.exports=clone;

},{"../../maths/mat4":133,"../poly3":73,"./create":33}],33:[function(require,module,exports){
const mat4=require("../../maths/mat4"),create=e=>(void 0===e&&(e=[]),{polygons:e,isRetesselated:!1,transforms:mat4.create()});module.exports=create;

},{"../../maths/mat4":133}],34:[function(require,module,exports){
const vec3=require("../../maths/vec3"),mat4=require("../../maths/mat4"),poly3=require("../poly3"),create=require("./create"),fromCompactBinary=e=>{if(1!==e[0])throw new Error("invalid compact binary data");const r=create();r.transforms=mat4.clone(e.slice(1,17)),r.isRetesselated=!!e[17];const t=e[22];let o=23,a=e.length-3*t;for(;a<e.length;){const t=e[o];o++;const c=[];for(let r=0;r<t;r++)c.push(vec3.fromValues(e[a],e[a+1],e[a+2])),a+=3;r.polygons.push(poly3.create(c))}return e[18]>=0&&(r.color=[e[18],e[19],e[20],e[21]]),r};module.exports=fromCompactBinary;

},{"../../maths/mat4":133,"../../maths/vec3":210,"../poly3":73,"./create":33}],35:[function(require,module,exports){
const poly3=require("../poly3"),create=require("./create"),fromPoints=r=>{if(!Array.isArray(r))throw new Error("the given points must be an array");const e=r.map((r,e)=>{return poly3.fromPoints(r)});return create(e)};module.exports=fromPoints;

},{"../poly3":73,"./create":33}],36:[function(require,module,exports){
module.exports={clone:require("./clone"),create:require("./create"),fromPoints:require("./fromPoints"),fromCompactBinary:require("./fromCompactBinary"),invert:require("./invert"),isA:require("./isA"),toPoints:require("./toPoints"),toPolygons:require("./toPolygons"),toString:require("./toString"),toCompactBinary:require("./toCompactBinary"),transform:require("./transform")};

},{"./clone":32,"./create":33,"./fromCompactBinary":34,"./fromPoints":35,"./invert":37,"./isA":38,"./toCompactBinary":39,"./toPoints":40,"./toPolygons":41,"./toString":42,"./transform":43}],37:[function(require,module,exports){
const poly3=require("../poly3"),create=require("./create"),toPolygons=require("./toPolygons"),invert=e=>{const o=toPolygons(e).map(e=>poly3.invert(e));return create(o)};module.exports=invert;

},{"../poly3":73,"./create":33,"./toPolygons":41}],38:[function(require,module,exports){
const isA=o=>!!(o&&"object"==typeof o&&"polygons"in o&&"transforms"in o&&Array.isArray(o.polygons)&&"length"in o.transforms);module.exports=isA;

},{}],39:[function(require,module,exports){
const poly3=require("../poly3"),toCompactBinary=o=>{const t=o.polygons,e=o.transforms,r=t.length,l=t.reduce((o,t)=>o+t.vertices.length,0);let n=[-1,-1,-1,-1];o.color&&(n=o.color);const s=new Float32Array(23+r+3*l);s[0]=1,s[1]=e[0],s[2]=e[1],s[3]=e[2],s[4]=e[3],s[5]=e[4],s[6]=e[5],s[7]=e[6],s[8]=e[7],s[9]=e[8],s[10]=e[9],s[11]=e[10],s[12]=e[11],s[13]=e[12],s[14]=e[13],s[15]=e[14],s[16]=e[15],s[17]=o.isRetesselated?1:0,s[18]=n[0],s[19]=n[1],s[20]=n[2],s[21]=n[3],s[22]=l;let c=23,a=c+r;return t.forEach(o=>{const t=poly3.toPoints(o);s[c]=t.length,c++;for(let o=0;o<t.length;o++){const e=t[o];s[a+0]=e[0],s[a+1]=e[1],s[a+2]=e[2],a+=3}}),s};module.exports=toCompactBinary;

},{"../poly3":73}],40:[function(require,module,exports){
const poly3=require("../poly3"),toPolygons=require("./toPolygons"),toPoints=o=>{return toPolygons(o).map(o=>poly3.toPoints(o))};module.exports=toPoints;

},{"../poly3":73,"./toPolygons":41}],41:[function(require,module,exports){
const applyTransforms=require("./applyTransforms"),toPolygons=o=>applyTransforms(o).polygons;module.exports=toPolygons;

},{"./applyTransforms":31}],42:[function(require,module,exports){
const poly3=require("../poly3"),toPolygons=require("./toPolygons"),toString=o=>{const t=toPolygons(o);let n="geom3 ("+t.length+" polygons):\n";return t.forEach(o=>{n+="  "+poly3.toString(o)+"\n"}),n};module.exports=toString;

},{"../poly3":73,"./toPolygons":41}],43:[function(require,module,exports){
const mat4=require("../../maths/mat4"),create=require("./create"),transform=(e,t)=>{const r=create(t.polygons);return r.isRetesselated=t.isRetesselated,r.transforms=mat4.multiply(e,t.transforms),r};module.exports=transform;

},{"../../maths/mat4":133,"./create":33}],44:[function(require,module,exports){
module.exports={geom2:require("./geom2"),geom3:require("./geom3"),path2:require("./path2"),poly2:require("./poly2"),poly3:require("./poly3")};

},{"./geom2":22,"./geom3":36,"./path2":57,"./poly2":67,"./poly3":73}],45:[function(require,module,exports){
const vec2=require("../../maths/vec2"),fromPoints=require("./fromPoints"),toPoints=require("./toPoints"),appendArc=(e,t)=>{let{endpoint:r,radius:a,xaxisrotation:o,clockwise:n,large:s,segments:c}=Object.assign({},{radius:[0,0],xaxisrotation:0,clockwise:!1,large:!1,segments:16},e);if(!Array.isArray(r))throw new Error("endpoint must be an array of X and Y values");if(r.length<2)throw new Error("endpoint must contain X and Y values");if(r=vec2.fromArray(r),!Array.isArray(a))throw new Error("radius must be an array of X and Y values");if(a.length<2)throw new Error("radius must contain X and Y values");if(c<4)throw new Error("segments must be four or more");if(t.isClosed)throw new Error("the given path cannot be closed");const i=toPoints(t);if(i.length<1)throw new Error("the given path must contain one or more points (as the starting point for the arc)");let h=a[0],l=a[1];const u=i[i.length-1];h=Math.round(1e5*h)/1e5,l=Math.round(1e5*l)/1e5,r=vec2.fromValues(Math.round(1e5*r[0])/1e5,Math.round(1e5*r[1])/1e5);const d=!n;let f=[];if(0===h||0===l)f.push(r);else{h=Math.abs(h),l=Math.abs(l);const e=o,t=Math.cos(e),a=Math.sin(e),n=vec2.scale(.5,vec2.subtract(u,r)),i=Math.round(1e5*(t*n[0]+a*n[1]))/1e5,v=Math.round(1e5*(-a*n[0]+t*n[1]))/1e5,m=vec2.fromValues(i,v),M=m[0]*m[0]/(h*h)+m[1]*m[1]/(l*l);if(M>1){const e=Math.sqrt(M);h*=e,l*=e,h=Math.round(1e5*h)/1e5,l=Math.round(1e5*l)/1e5}let w=Math.sqrt((h*h*l*l-h*h*m[1]*m[1]-l*l*m[0]*m[0])/(h*h*m[1]*m[1]+l*l*m[0]*m[0]));d===s&&(w=-w);let g=vec2.fromValues(h*m[1]/l,-l*m[0]/h);g=vec2.scale(w,g);let p=vec2.fromValues(t*g[0]-a*g[1],a*g[0]+t*g[1]);p=vec2.add(p,vec2.scale(.5,vec2.add(u,r)));const P=vec2.fromValues((m[0]-g[0])/h,(m[1]-g[1])/l),b=vec2.fromValues((-m[0]-g[0])/h,(-m[1]-g[1])/l),y=vec2.angleRadians(P);let A=vec2.angleRadians(b)-y;A%=2*Math.PI,!d&&A>0?A-=2*Math.PI:d&&A<0&&(A+=2*Math.PI);let E=Math.ceil(Math.abs(A)/(2*Math.PI)*c)+1;E<1&&(E=1);for(let e=1;e<=E;e++){const r=y+e/E*A,o=Math.cos(r),n=Math.sin(r);let s=vec2.fromValues(t*h*o-a*l*n,a*h*o+t*l*n);s=vec2.add(s,p),f.push(s)}}return f=i.concat(f),fromPoints({},f)};module.exports=appendArc;

},{"../../maths/vec2":179,"./fromPoints":56,"./toPoints":61}],46:[function(require,module,exports){
const vec2=require("../../maths/vec2"),appendPoints=require("./appendPoints"),toPoints=require("./toPoints"),appendBezier=(t,e)=>{let{controlPoints:o,segments:n}=Object.assign({},{segments:16},t);if(!Array.isArray(o))throw new Error("controlPoints must be an array of one or more points");if(o.length<1)throw new Error("controlPoints must be an array of one or more points");if(n<4)throw new Error("segments must be four or more");if(e.isClosed)throw new Error("the given geometry cannot be closed");const r=toPoints(e);if(r.length<1)throw new Error("the given path must contain one or more points (as the starting point for the bezier curve)");if(null===(o=o.slice())[0]){if(o.length<2)throw new Error("a null control point must be passed with one more control points");let t=r[r.length-2];if("lastBezierControlPoint"in e&&(t=e.lastBezierControlPoint),!Array.isArray(t))throw new Error("the given path must contain TWO or more points if given a null control point");let n=r[r.length-1];n=vec2.scale(2,n),n=vec2.subtract(n,t),o[0]=n}o.unshift(r[r.length-1]);const s=o.length-1,i=[];let l=1;for(let t=0;t<=s;++t)t>0&&(l*=t),i.push(l);const c=[];for(let t=0;t<=s;++t){const e=i[s]/(i[t]*i[s-t]);c.push(e)}const a=t=>{let e=1,n=Math.pow(1-t,s);const r=1!==t?1/(1-t):1,i=vec2.create();for(let l=0;l<=s;++l){l===s&&(n=1);const a=c[l]*e*n,h=vec2.scale(a,o[l]);vec2.add(i,i,h),e*=t,n*=r}return i},h=[],p=[],u=s+1;for(let t=0;t<u;++t){const e=t/(u-1),o=a(e);h.push(o),p.push(e)}let f=1;const m=2*Math.PI/n,g=Math.sin(m);for(;f<h.length-1;){const t=vec2.normalize(vec2.subtract(h[f],h[f-1])),e=vec2.normalize(vec2.subtract(h[f+1],h[f])),o=vec2.cross(t,e);if(Math.abs(o[2])>g){const t=p[f-1],e=p[f+1],o=t+1*(e-t)/3,n=t+2*(e-t)/3,r=a(o),s=a(n);h.splice(f,1,r,s),p.splice(f,1,o,n),--f<1&&(f=1)}else++f}h.shift();const v=appendPoints(h,e);return v.lastBezierControlPoint=o[o.length-2],v};module.exports=appendBezier;

},{"../../maths/vec2":179,"./appendPoints":47,"./toPoints":61}],47:[function(require,module,exports){
const fromPoints=require("./fromPoints"),toPoints=require("./toPoints"),appendPoints=(o,t)=>{if(t.isClosed)throw new Error("cannot append points to a closed path");let n=toPoints(t);return n=n.concat(o),fromPoints({},n)};module.exports=appendPoints;

},{"./fromPoints":56,"./toPoints":61}],48:[function(require,module,exports){
const mat4=require("../../maths/mat4"),vec2=require("../../maths/vec2"),applyTransforms=t=>mat4.equals(t.transforms,mat4.identity())?t:(t.points=t.points.map(s=>vec2.transform(t.transforms,s)),mat4.identity(t.transforms),t);module.exports=applyTransforms;

},{"../../maths/mat4":133,"../../maths/vec2":179}],49:[function(require,module,exports){
const mat4=require("../../maths/mat4"),vec2=require("../../maths/vec2"),create=require("./create"),clone=e=>{const r=create();return r.points=e.points.map(e=>vec2.clone(e)),r.isClosed=e.isClosed,r.transforms=mat4.clone(e.transforms),r};module.exports=clone;

},{"../../maths/mat4":133,"../../maths/vec2":179,"./create":52}],50:[function(require,module,exports){
const{EPS:EPS}=require("../../maths/constants"),vec2=require("../../maths/vec2"),clone=require("./clone"),close=e=>{if(e.isClosed)return e;const t=clone(e);if(t.isClosed=!0,t.points.length>1){const e=t.points,n=e[0];let o=e[e.length-1];for(;vec2.distance(n,o)<EPS*EPS&&(e.pop(),1!==e.length);)o=e[e.length-1]}return t};module.exports=close;

},{"../../maths/constants":87,"../../maths/vec2":179,"./clone":49}],51:[function(require,module,exports){
const fromPoints=require("./fromPoints"),toPoints=require("./toPoints"),concat=(...o)=>{let t=!1;for(const n of o){if(t)throw new Error("Cannot concatenate to a closed path");t=n.isClosed}let n=[];return o.forEach(o=>{n=n.concat(toPoints(o))}),fromPoints({closed:t},n)};module.exports=concat;

},{"./fromPoints":56,"./toPoints":61}],52:[function(require,module,exports){
const mat4=require("../../maths/mat4"),create=t=>(void 0===t&&(t=[]),{points:t,isClosed:!1,transforms:mat4.identity()});module.exports=create;

},{"../../maths/mat4":133}],53:[function(require,module,exports){
const toPoints=require("./toPoints"),eachPoint=(o,t,e)=>{toPoints(e).forEach(t)};module.exports=eachPoint;

},{"./toPoints":61}],54:[function(require,module,exports){
const vec2=require("../../maths/vec2"),toPoints=require("./toPoints"),equals=(e,t)=>{if(e.isClosed!==t.isClosed)return!1;if(e.points.length!==t.points.length)return!1;const o=toPoints(e),s=toPoints(t),i=o.length;let r=0;do{let t=!1;for(let e=0;e<i;e++)if(!vec2.equals(o[e],s[(e+r)%i])){t=!0;break}if(!1===t)return!0;if(!e.isClosed)return!1}while(++r<i);return!1};module.exports=equals;

},{"../../maths/vec2":179,"./toPoints":61}],55:[function(require,module,exports){
const mat4=require("../../maths/mat4"),vec2=require("../../maths/vec2"),create=require("./create"),fromCompactBinary=r=>{if(2!==r[0])throw new Error("invalid compact binary data");const e=create();e.transforms=mat4.clone(r.slice(1,17)),e.isClosed=!!r[17];for(let t=22;t<r.length;t+=2){const o=vec2.fromValues(r[t],r[t+1]);e.points.push(o)}return r[18]>=0&&(e.color=[r[18],r[19],r[20],r[21]]),e};module.exports=fromCompactBinary;

},{"../../maths/mat4":133,"../../maths/vec2":179,"./create":52}],56:[function(require,module,exports){
const{EPS:EPS}=require("../../maths/constants"),vec2=require("../../maths/vec2"),close=require("./close"),create=require("./create"),fromPoints=(e,t)=>{let{closed:s}=Object.assign({},{closed:!1},e),o=create();if(o.points=t.map(e=>vec2.fromArray(e)),o.points.length>1){const e=o.points[0],t=o.points[o.points.length-1];vec2.distance(e,t)<EPS*EPS&&(s=!0)}return!0===s&&(o=close(o)),o};module.exports=fromPoints;

},{"../../maths/constants":87,"../../maths/vec2":179,"./close":50,"./create":52}],57:[function(require,module,exports){
module.exports={appendArc:require("./appendArc"),appendBezier:require("./appendBezier"),appendPoints:require("./appendPoints"),clone:require("./clone"),close:require("./close"),concat:require("./concat"),create:require("./create"),eachPoint:require("./eachPoint"),equals:require("./equals"),fromPoints:require("./fromPoints"),fromCompactBinary:require("./fromCompactBinary"),isA:require("./isA"),reverse:require("./reverse"),toPoints:require("./toPoints"),toString:require("./toString"),toCompactBinary:require("./toCompactBinary"),transform:require("./transform")};

},{"./appendArc":45,"./appendBezier":46,"./appendPoints":47,"./clone":49,"./close":50,"./concat":51,"./create":52,"./eachPoint":53,"./equals":54,"./fromCompactBinary":55,"./fromPoints":56,"./isA":58,"./reverse":59,"./toCompactBinary":60,"./toPoints":61,"./toString":62,"./transform":63}],58:[function(require,module,exports){
const isA=s=>!!(s&&"object"==typeof s&&"points"in s&&"transforms"in s&&"isClosed"in s&&Array.isArray(s.points)&&"length"in s.transforms);module.exports=isA;

},{}],59:[function(require,module,exports){
const clone=require("./clone"),reverse=e=>{const r=clone(e);return r.points=e.points.slice().reverse(),r};module.exports=reverse;

},{"./clone":49}],60:[function(require,module,exports){
const toCompactBinary=o=>{const t=o.points,n=o.transforms;let r=[-1,-1,-1,-1];o.color&&(r=o.color);const s=new Float32Array(22+2*t.length);s[0]=2,s[1]=n[0],s[2]=n[1],s[3]=n[2],s[4]=n[3],s[5]=n[4],s[6]=n[5],s[7]=n[6],s[8]=n[7],s[9]=n[8],s[10]=n[9],s[11]=n[10],s[12]=n[11],s[13]=n[12],s[14]=n[13],s[15]=n[14],s[16]=n[15],s[17]=o.isClosed?1:0,s[18]=r[0],s[19]=r[1],s[20]=r[2],s[21]=r[3];for(let o=0;o<t.length;o++){const n=2*o+22,r=t[o];s[n]=r[0],s[n+1]=r[1]}return s};module.exports=toCompactBinary;

},{}],61:[function(require,module,exports){
const applyTransforms=require("./applyTransforms"),toPoints=o=>applyTransforms(o).points;module.exports=toPoints;

},{"./applyTransforms":48}],62:[function(require,module,exports){
const vec2=require("../../maths/vec2"),toPoints=require("./toPoints"),toString=t=>{const o=toPoints(t);let n="path ("+o.length+" points, "+t.isClosed+"):\n[\n";return o.forEach(t=>{n+="  "+vec2.toString(t)+",\n"}),n+="]\n"};module.exports=toString;

},{"../../maths/vec2":179,"./toPoints":61}],63:[function(require,module,exports){
const mat4=require("../../maths/mat4"),create=require("./create"),transform=(r,t)=>{const e=create(t.points);return e.isClosed=t.isClosed,e.transforms=mat4.multiply(r,t.transforms),e};module.exports=transform;

},{"../../maths/mat4":133,"./create":52}],64:[function(require,module,exports){
const measureArea=require("./measureArea"),flip=require("./flip"),arePointsInside=(e,t)=>{if(0===e.length)return 0;measureArea(t)<0&&(t=flip(t));const r=t.vertices;return 0===r.length?0:e.reduce((e,t)=>e+isPointInside(t,r),0)===e.length?1:0},isPointInside=(e,t)=>{let r=0;const i=t.length,n=e[0],s=e[1];for(let l=0;l<t.length;l++){const o=t[l],u=t[(l+1)%i];n!==o[0]&&s!==o[1]&&n!==u[0]&&s!==u[1]&&(o[1]<=s?u[1]>s&&isLeft(o,u,e)>0&&r++:u[1]<=s&&isLeft(o,u,e)<0&&r--)}return r},isLeft=(e,t,r)=>(t[0]-e[0])*(r[1]-e[1])-(r[0]-e[0])*(t[1]-e[1]);module.exports=arePointsInside;

},{"./flip":66,"./measureArea":68}],65:[function(require,module,exports){
const create=e=>((void 0===e||e.length<3)&&(e=[]),{vertices:e});module.exports=create;

},{}],66:[function(require,module,exports){
const create=require("./create"),flip=e=>{const r=e.vertices.slice().reverse();return create(r)};module.exports=flip;

},{"./create":65}],67:[function(require,module,exports){
module.exports={arePointsInside:require("./arePointsInside"),create:require("./create"),flip:require("./flip"),measureArea:require("./measureArea")};

},{"./arePointsInside":64,"./create":65,"./flip":66,"./measureArea":68}],68:[function(require,module,exports){
const area=require("../../maths/utils/area"),measureArea=e=>area(e.vertices);module.exports=measureArea;

},{"../../maths/utils/area":153}],69:[function(require,module,exports){
const create=require("./create"),vec3=require("../../maths/vec3"),clone=(...e)=>{let c,r;return 1===e.length?(c=create(),r=e[0]):(c=e[0],r=e[1]),c.vertices=r.vertices.map(e=>vec3.clone(e)),c};module.exports=clone;

},{"../../maths/vec3":210,"./create":70}],70:[function(require,module,exports){
const create=e=>((void 0===e||e.length<3)&&(e=[]),{vertices:e});module.exports=create;

},{}],71:[function(require,module,exports){
const vec3=require("../../maths/vec3"),create=require("./create"),fromPoints=e=>{const r=e.map(e=>vec3.clone(e));return create(r)};module.exports=fromPoints;

},{"../../maths/vec3":210,"./create":70}],72:[function(require,module,exports){
const create=require("./create"),fromPointsAndPlane=(e,n)=>{const r=create(e);return r.plane=n,r};module.exports=fromPointsAndPlane;

},{"./create":70}],73:[function(require,module,exports){
module.exports={clone:require("./clone"),create:require("./create"),fromPoints:require("./fromPoints"),fromPointsAndPlane:require("./fromPointsAndPlane"),invert:require("./invert"),isA:require("./isA"),isConvex:require("./isConvex"),measureArea:require("./measureArea"),measureBoundingBox:require("./measureBoundingBox"),measureBoundingSphere:require("./measureBoundingSphere"),measureSignedVolume:require("./measureSignedVolume"),plane:require("./plane"),toPoints:require("./toPoints"),toString:require("./toString"),transform:require("./transform")};

},{"./clone":69,"./create":70,"./fromPoints":71,"./fromPointsAndPlane":72,"./invert":74,"./isA":75,"./isConvex":76,"./measureArea":77,"./measureBoundingBox":78,"./measureBoundingSphere":79,"./measureSignedVolume":80,"./plane":81,"./toPoints":82,"./toString":83,"./transform":84}],74:[function(require,module,exports){
const create=require("./create"),invert=e=>{const r=e.vertices.slice().reverse();return create(r)};module.exports=invert;

},{"./create":70}],75:[function(require,module,exports){
const isA=e=>!!(e&&"object"==typeof e&&"vertices"in e&&Array.isArray(e.vertices));module.exports=isA;

},{}],76:[function(require,module,exports){
const plane=require("../../maths/plane"),vec3=require("../../maths/vec3"),isConvex=e=>areVerticesConvex(e.vertices),areVerticesConvex=e=>{const t=e.length;if(t>2){const n=plane.fromPoints(e[0],e[1],e[2]);let r=e[t-2],o=e[t-1];for(let s=0;s<t;s++){const t=e[s];if(!isConvexPoint(r,o,t,n))return!1;r=o,o=t}}return!0},isConvexPoint=(e,t,n,r)=>{const o=vec3.cross(vec3.subtract(t,e),vec3.subtract(n,t));return vec3.dot(o,r)>=0};module.exports=isConvex;

},{"../../maths/plane":150,"../../maths/vec3":210}],77:[function(require,module,exports){
const vec3=require("../../maths/vec3"),measureArea=e=>{const t=e.vertices.length;if(t<3)return 0;const r=e.vertices,s=r[0],a=r[1],c=r[2],o=vec3.subtract(a,s),u=vec3.subtract(c,s),b=vec3.cross(o,u),h=Math.abs(b[0]),v=Math.abs(b[1]),n=Math.abs(b[2]),f=Math.sqrt(h*h+v*v+n*n);let i=3;h>v&&h>n?i=1:v>n&&(i=2);let l=0,m=0,M=1,d=2;switch(i){case 1:for(M=1;M<t;M++)m=M-1,d=(M+1)%t,l+=r[M][1]*(r[d][2]-r[m][2]);l+=r[0][1]*(r[1][2]-r[t-1][2]),l*=f/(2*b[0]);break;case 2:for(M=1;M<t;M++)m=M-1,d=(M+1)%t,l+=r[M][2]*(r[d][0]-r[m][0]);l+=r[0][2]*(r[1][0]-r[t-1][0]),l*=f/(2*b[1]);break;case 3:default:for(M=1;M<t;M++)m=M-1,d=(M+1)%t,l+=r[M][0]*(r[d][1]-r[m][1]);l+=r[0][0]*(r[1][1]-r[t-1][1]),l*=f/(2*b[2])}return l};module.exports=measureArea;

},{"../../maths/vec3":210}],78:[function(require,module,exports){
const vec3=require("../../maths/vec3"),measureBoundingBox=e=>{const c=e.vertices,n=c.length,o=0===n?vec3.create():vec3.clone(c[0]),r=vec3.clone(o);for(let e=1;e<n;e++)vec3.min(o,o,c[e]),vec3.max(r,r,c[e]);return[o,r]};module.exports=measureBoundingBox;

},{"../../maths/vec3":210}],79:[function(require,module,exports){
const vec3=require("../../maths/vec3"),measureBoundingBox=require("./measureBoundingBox"),measureBoundingSphere=e=>{const n=measureBoundingBox(e),r=n[0];return vec3.add(r,n[0],n[1]),vec3.scale(r,.5,r),[r,vec3.distance(r,n[1])]};module.exports=measureBoundingSphere;

},{"../../maths/vec3":210,"./measureBoundingBox":78}],80:[function(require,module,exports){
const vec3=require("../../maths/vec3"),measureSignedVolume=e=>{let t=0;const o=e.vertices;for(let e=0;e<o.length-2;e++){const r=vec3.cross(o[e+1],o[e+2]);t+=vec3.dot(o[0],r)}return t/=6};module.exports=measureSignedVolume;

},{"../../maths/vec3":210}],81:[function(require,module,exports){
const mplane=require("../../maths/plane/"),plane=e=>{if(!e.plane){const n=e.vertices;e.plane=mplane.fromPoints(n[0],n[1],n[2])}return e.plane};module.exports=plane;

},{"../../maths/plane/":150}],82:[function(require,module,exports){
const toPoints=o=>o.vertices;module.exports=toPoints;

},{}],83:[function(require,module,exports){
const vec3=require("../../maths/vec3/"),toString=e=>{let t="poly3: vertices: [";return e.vertices.forEach(e=>{t+=`${vec3.toString(e)}, `}),t+="]"};module.exports=toString;

},{"../../maths/vec3/":210}],84:[function(require,module,exports){
const mat4=require("../../maths/mat4"),vec3=require("../../maths/vec3"),create=require("./create"),transform=(r,e)=>{const t=e.vertices.map(e=>vec3.transform(r,e));return mat4.isMirroring(r)&&t.reverse(),create(t)};module.exports=transform;

},{"../../maths/mat4":133,"../../maths/vec3":210,"./create":70}],85:[function(require,module,exports){
module.exports={colors:require("./colors"),curves:require("./curves"),geometries:require("./geometries"),maths:require("./maths"),measurements:require("./measurements"),primitives:require("./primitives"),text:require("./text"),utils:require("./utils"),booleans:require("./operations/booleans"),expansions:require("./operations/expansions"),extrusions:require("./operations/extrusions"),hulls:require("./operations/hulls"),transforms:require("./operations/transforms")};

},{"./colors":8,"./curves":16,"./geometries":44,"./maths":88,"./measurements":238,"./operations/booleans":248,"./operations/expansions":277,"./operations/extrusions":290,"./operations/hulls":310,"./operations/transforms":321,"./primitives":337,"./text":350,"./utils":358}],86:[function(require,module,exports){
const mat4=require("./mat4"),line2=require("./line2"),line3=require("./line3"),plane=require("./plane"),vec2=require("./vec2"),vec3=require("./vec3"),OrthoNormalBasis=function(e,i){i=arguments.length<2?vec3.orthogonal(e):i,this.v=vec3.unit(vec3.cross(e,i)),this.u=vec3.cross(this.v,e),this.plane=e,this.planeorigin=vec3.scale(e[3],e)};OrthoNormalBasis.GetCartesian=function(e,i){const t=e+"/"+i;let s,n;if("X/Y"===t)s=[0,0,1],n=[1,0,0];else if("Y/-X"===t)s=[0,0,1],n=[0,1,0];else if("-X/-Y"===t)s=[0,0,1],n=[-1,0,0];else if("-Y/X"===t)s=[0,0,1],n=[0,-1,0];else if("-X/Y"===t)s=[0,0,-1],n=[-1,0,0];else if("-Y/-X"===t)s=[0,0,-1],n=[0,-1,0];else if("X/-Y"===t)s=[0,0,-1],n=[1,0,0];else if("Y/X"===t)s=[0,0,-1],n=[0,1,0];else if("X/Z"===t)s=[0,-1,0],n=[1,0,0];else if("Z/-X"===t)s=[0,-1,0],n=[0,0,1];else if("-X/-Z"===t)s=[0,-1,0],n=[-1,0,0];else if("-Z/X"===t)s=[0,-1,0],n=[0,0,-1];else if("-X/Z"===t)s=[0,1,0],n=[-1,0,0];else if("-Z/-X"===t)s=[0,1,0],n=[0,0,-1];else if("X/-Z"===t)s=[0,1,0],n=[1,0,0];else if("Z/X"===t)s=[0,1,0],n=[0,0,1];else if("Y/Z"===t)s=[1,0,0],n=[0,1,0];else if("Z/-Y"===t)s=[1,0,0],n=[0,0,1];else if("-Y/-Z"===t)s=[1,0,0],n=[0,-1,0];else if("-Z/Y"===t)s=[1,0,0],n=[0,0,-1];else if("-Y/Z"===t)s=[-1,0,0],n=[0,-1,0];else if("-Z/-Y"===t)s=[-1,0,0],n=[0,0,-1];else if("Y/-Z"===t)s=[-1,0,0],n=[0,1,0];else{if("Z/Y"!==t)throw new Error("OrthoNormalBasis.GetCartesian: invalid combination of axis identifiers. Should pass two string arguments from [X,Y,Z,-X,-Y,-Z], being two different axes.");s=[-1,0,0],n=[0,0,1]}return new OrthoNormalBasis(new Plane(new Vector3D(s),0),new Vector3D(n))},OrthoNormalBasis.Z0Plane=function(){const e=new Plane(new Vector3D([0,0,1]),0);return new OrthoNormalBasis(e,new Vector3D([1,0,0]))},OrthoNormalBasis.prototype={getProjectionMatrix:function(){return mat4.fromValues(this.u[0],this.v[0],this.plane[0],0,this.u[1],this.v[1],this.plane[1],0,this.u[2],this.v[2],this.plane[2],0,0,0,-this.plane[3],1)},getInverseProjectionMatrix:function(){const e=vec3.scale(this.plane[3],this.plane);return mat4.fromValues(this.u[0],this.u[1],this.u[2],0,this.v[0],this.v[1],this.v[2],0,this.plane[0],this.plane[1],this.plane[2],0,e[0],e[1],e[2],1)},to2D:function(e){return vec2.fromValues(vec3.dot(e,this.u),vec3.dot(e,this.v))},to3D:function(e){const i=vec3.scale(e[0],this.u),t=vec3.scale(e[1],this.v),s=vec3.add(this.planeorigin,i);return vec3.add(s,t)},line3Dto2D:function(e){const i=e.point,t=e.direction.plus(i),s=this.to2D(i),n=this.to2D(t);return Line2D.fromPoints(s,n)},line2Dto3D:function(e){const i=e.origin(),t=e.direction().plus(i),s=this.to3D(i),n=this.to3D(t);return Line3D.fromPoints(s,n)},transform:function(e){const i=this.plane.transform(e),t=this.u.transform(e),s=new Vector3D(0,0,0).transform(e),n=t.minus(s);return new OrthoNormalBasis(i,n)}},module.exports=OrthoNormalBasis;

},{"./line2":97,"./line3":113,"./mat4":133,"./plane":150,"./vec2":179,"./vec3":210}],87:[function(require,module,exports){
const spatialResolution=1e5,EPS=1e-5;module.exports={EPS:EPS,spatialResolution:1e5};

},{}],88:[function(require,module,exports){
module.exports={constants:require("./constants"),line2:require("./line2"),line3:require("./line3"),mat4:require("./mat4"),plane:require("./plane"),utils:require("./utils"),vec2:require("./vec2"),vec3:require("./vec3"),vec4:require("./vec4")};

},{"./constants":87,"./line2":97,"./line3":113,"./mat4":133,"./plane":150,"./utils":155,"./vec2":179,"./vec3":210,"./vec4":234}],89:[function(require,module,exports){
const create=require("./create"),clone=(...e)=>{let r,t;return 1===e.length?(r=create(),t=e[0]):(r=e[0],t=e[1]),r[0]=t[0],r[1]=t[1],r[2]=t[2],r};module.exports=clone;

},{"./create":91}],90:[function(require,module,exports){
const vec2=require("../vec2"),direction=require("./direction"),origin=require("./origin"),closestPoint=(e,i)=>{const r=origin(i),o=direction(i),n=(o[1]-r[1])/(o[0]-r[0]),t=r[1]-n*r[0],c=-1/n,s=(e[1]-c*e[0]-t)/(n-c),u=n*s+t;return vec2.fromValues(s,u)};module.exports=closestPoint;

},{"../vec2":179,"./direction":92,"./origin":99}],91:[function(require,module,exports){
const create=()=>[0,1,0];module.exports=create;

},{}],92:[function(require,module,exports){
const vec2=require("../vec2"),direction=e=>{const c=vec2.normal(e);return vec2.negate(c,c),c};module.exports=direction;

},{"../vec2":179}],93:[function(require,module,exports){
const vec2=require("../vec2"),distanceToPoint=(e,t)=>{let o=vec2.dot(e,t);return o=Math.abs(o-t[2])};module.exports=distanceToPoint;

},{"../vec2":179}],94:[function(require,module,exports){
const equals=(e,s)=>e[0]===s[0]&&e[1]===s[1]&&e[2]===s[2];module.exports=equals;

},{}],95:[function(require,module,exports){
const vec2=require("../vec2"),fromValues=require("./fromValues"),fromPoints=(e,o)=>{const r=vec2.subtract(o,e);vec2.normal(r,r),vec2.normalize(r,r);const c=vec2.dot(e,r);return fromValues(r[0],r[1],c)};module.exports=fromPoints;

},{"../vec2":179,"./fromValues":96}],96:[function(require,module,exports){
const create=require("./create"),fromValues=(e,r,t)=>{const o=create();return o[0]=e,o[1]=r,o[2]=t,o};module.exports=fromValues;

},{"./create":91}],97:[function(require,module,exports){
module.exports={clone:require("./clone"),closestPoint:require("./closestPoint"),create:require("./create"),direction:require("./direction"),distanceToPoint:require("./distanceToPoint"),equals:require("./equals"),fromPoints:require("./fromPoints"),fromValues:require("./fromValues"),intersectPointOfLines:require("./intersectPointOfLines"),origin:require("./origin"),reverse:require("./reverse"),toString:require("./toString"),transform:require("./transform"),xAtY:require("./xAtY")};

},{"./clone":89,"./closestPoint":90,"./create":91,"./direction":92,"./distanceToPoint":93,"./equals":94,"./fromPoints":95,"./fromValues":96,"./intersectPointOfLines":98,"./origin":99,"./reverse":100,"./toString":101,"./transform":102,"./xAtY":103}],98:[function(require,module,exports){
const vec2=require("../vec2"),{solve2Linear:solve2Linear}=require("../utils"),intersectToLine=(e,r)=>{const n=solve2Linear(e[0],e[1],r[0],r[1],e[2],r[2]);return vec2.clone(n)};module.exports=intersectToLine;

},{"../utils":155,"../vec2":179}],99:[function(require,module,exports){
const vec2=require("../vec2"),origin=e=>{return vec2.scale(e[2],e)};module.exports=origin;

},{"../vec2":179}],100:[function(require,module,exports){
const vec2=require("../vec2"),clone=require("./clone"),create=require("./create"),fromValues=require("./fromValues"),reverse=(...e)=>{let r,c;1===e.length?(r=create(),c=e[0]):(r=e[0],c=e[1]);const o=vec2.negate(c),t=-c[2];return clone(r,fromValues(o[0],o[1],t))};module.exports=reverse;

},{"../vec2":179,"./clone":89,"./create":91,"./fromValues":96}],101:[function(require,module,exports){
const toString=t=>`line2: (${t[0].toFixed(7)}, ${t[1].toFixed(7)}, ${t[2].toFixed(7)})`;module.exports=toString;

},{}],102:[function(require,module,exports){
const vec2=require("../vec2"),fromPoints=require("./fromPoints"),origin=require("./origin"),direction=require("./direction"),clone=require("./clone"),create=require("./create"),transform=(...r)=>{let e,o,i;2===r.length?(e=create(),o=r[0],i=r[1]):(e=r[0],o=r[1],i=r[2]);const n=origin(i),t=direction(i);return vec2.transform(n,o,n),vec2.transform(t,o,t),clone(e,fromPoints(n,t))};module.exports=transform;

},{"../vec2":179,"./clone":89,"./create":91,"./direction":92,"./fromPoints":95,"./origin":99}],103:[function(require,module,exports){
const origin=require("./origin"),xAtY=(i,r)=>{let e=(r[2]-r[1]*i)/r[0];if(Number.isNaN(e)){e=origin(r)[0]}return e};module.exports=xAtY;

},{"./origin":99}],104:[function(require,module,exports){
const vec3=require("../vec3"),create=require("./create"),clone=(...e)=>{let c,r;return 1===e.length?(c=create(),r=e[0]):(c=e[0],r=e[1]),vec3.clone(c[0],r[0]),vec3.clone(c[1],r[1]),c};module.exports=clone;

},{"../vec3":210,"./create":106}],105:[function(require,module,exports){
const vec3=require("../vec3"),closestPoint=(e,c)=>{const t=c[0],o=c[1],s=vec3.dot(vec3.subtract(e,t),o)/vec3.dot(o,o);return vec3.add(t,vec3.scale(s,o))};module.exports=closestPoint;

},{"../vec3":210}],106:[function(require,module,exports){
const vec3=require("../vec3"),fromPointAndDirection=require("./fromPointAndDirection"),create=()=>{const e=vec3.create(),r=vec3.fromValues(0,0,1);return fromPointAndDirection(e,r)};module.exports=create;

},{"../vec3":210,"./fromPointAndDirection":111}],107:[function(require,module,exports){
const direction=o=>o[1];module.exports=direction;

},{}],108:[function(require,module,exports){
const vec3=require("../vec3"),closestPoint=require("./closestPoint"),distanceToPoint=(e,t)=>{const o=closestPoint(e,t),c=vec3.subtract(e,o);return vec3.length(c)};module.exports=distanceToPoint;

},{"../vec3":210,"./closestPoint":105}],109:[function(require,module,exports){
const vec3=require("../vec3"),equals=(e,s)=>!!vec3.equals(e[1],s[1])&&!!vec3.equals(e[0],s[0]);module.exports=equals;

},{"../vec3":210}],110:[function(require,module,exports){
const vec3=require("../vec3"),{solve2Linear:solve2Linear}=require("../utils"),{EPS:EPS}=require("../constants"),fromPointAndDirection=require("./fromPointAndDirection"),fromPlanes=(e,r)=>{let o=vec3.cross(e,r),n=vec3.length(o);if(n<EPS)throw new Error("parallel planes do not intersect");n=1/n,o=vec3.scale(n,o);const s=Math.abs(o[0]),t=Math.abs(o[1]),a=Math.abs(o[2]);let i,l;return s>=t&&s>=a?(l=solve2Linear(e[1],e[2],r[1],r[2],e[3],r[3]),i=vec3.fromValues(0,l[0],l[1])):t>=s&&t>=a?(l=solve2Linear(e[0],e[2],r[0],r[2],e[3],r[3]),i=vec3.fromValues(l[0],0,l[1])):(l=solve2Linear(e[0],e[1],r[0],r[1],e[3],r[3]),i=vec3.fromValues(l[0],l[1],0)),fromPointAndDirection(i,o)};module.exports=fromPlanes;

},{"../constants":87,"../utils":155,"../vec3":210,"./fromPointAndDirection":111}],111:[function(require,module,exports){
const vec3=require("../vec3"),fromPointAndDirection=(e,n)=>{return[e,vec3.unit(n)]};module.exports=fromPointAndDirection;

},{"../vec3":210}],112:[function(require,module,exports){
const vec3=require("../vec3"),fromPointAndDirection=require("./fromPointAndDirection"),fromPoints=(o,r)=>{const n=vec3.subtract(r,o);return fromPointAndDirection(o,n)};module.exports=fromPoints;

},{"../vec3":210,"./fromPointAndDirection":111}],113:[function(require,module,exports){
module.exports={clone:require("./clone"),closestPoint:require("./closestPoint"),create:require("./create"),direction:require("./direction"),distanceToPoint:require("./distanceToPoint"),equals:require("./equals"),fromPlanes:require("./fromPlanes"),fromPointAndDirection:require("./fromPointAndDirection"),fromPoints:require("./fromPoints"),intersectPointOfLineAndPlane:require("./intersectPointOfLineAndPlane"),origin:require("./origin"),reverse:require("./reverse"),toString:require("./toString"),transform:require("./transform")};

},{"./clone":104,"./closestPoint":105,"./create":106,"./direction":107,"./distanceToPoint":108,"./equals":109,"./fromPlanes":110,"./fromPointAndDirection":111,"./fromPoints":112,"./intersectPointOfLineAndPlane":114,"./origin":115,"./reverse":116,"./toString":117,"./transform":118}],114:[function(require,module,exports){
const vec3=require("../vec3"),intersectToPlane=(e,c)=>{const t=e,o=e[3],n=c[0],r=c[1],s=(o-vec3.dot(t,n))/vec3.dot(t,r);return vec3.add(n,vec3.scale(s,r))};module.exports=intersectToPlane;

},{"../vec3":210}],115:[function(require,module,exports){
const origin=o=>o[0];module.exports=origin;

},{}],116:[function(require,module,exports){
const vec3=require("../vec3"),clone=require("./clone"),create=require("./create"),fromPointAndDirection=require("./fromPointAndDirection"),reverse=(...e)=>{let r,n;1===e.length?(r=create(),n=e[0]):(r=e[0],n=e[1]);const o=vec3.clone(n[0]),c=vec3.negate(n[1]);return clone(r,fromPointAndDirection(o,c))};module.exports=reverse;

},{"../vec3":210,"./clone":104,"./create":106,"./fromPointAndDirection":111}],117:[function(require,module,exports){
const toString=t=>{const o=t[0],i=t[1];return`line3: point: (${o[0].toFixed(7)}, ${o[1].toFixed(7)}, ${o[2].toFixed(7)}) unit: (${i[0].toFixed(7)}, ${i[1].toFixed(7)}, ${i[2].toFixed(7)})`};module.exports=toString;

},{}],118:[function(require,module,exports){
const vec3=require("../vec3"),clone=require("./clone"),create=require("./create"),fromPointAndDirection=require("./fromPointAndDirection"),transform=(...e)=>{let r,t,n;2===e.length?(r=create(),t=e[0],n=e[1]):(r=e[0],t=e[1],n=e[2]);const o=n[0],c=n[1],i=vec3.add(o,c),a=vec3.transform(t,o),m=vec3.transform(t,i),s=vec3.subtract(m,a);return clone(r,fromPointAndDirection(a,s))};module.exports=transform;

},{"../vec3":210,"./clone":104,"./create":106,"./fromPointAndDirection":111}],119:[function(require,module,exports){
const create=require("./create"),add=(...e)=>{let r,t,a;return 2===e.length?(r=create(),t=e[0],a=e[1]):(r=e[0],t=e[1],a=e[2]),r[0]=t[0]+a[0],r[1]=t[1]+a[1],r[2]=t[2]+a[2],r[3]=t[3]+a[3],r[4]=t[4]+a[4],r[5]=t[5]+a[5],r[6]=t[6]+a[6],r[7]=t[7]+a[7],r[8]=t[8]+a[8],r[9]=t[9]+a[9],r[10]=t[10]+a[10],r[11]=t[11]+a[11],r[12]=t[12]+a[12],r[13]=t[13]+a[13],r[14]=t[14]+a[14],r[15]=t[15]+a[15],r};module.exports=add;

},{"./create":122}],120:[function(require,module,exports){
const create=require("./create"),clone=(...e)=>{let r,t;return 1===e.length?(r=create(),t=e[0]):(r=e[0],t=e[1]),r[0]=t[0],r[1]=t[1],r[2]=t[2],r[3]=t[3],r[4]=t[4],r[5]=t[5],r[6]=t[6],r[7]=t[7],r[8]=t[8],r[9]=t[9],r[10]=t[10],r[11]=t[11],r[12]=t[12],r[13]=t[13],r[14]=t[14],r[15]=t[15],r};module.exports=clone;

},{"./create":122}],121:[function(require,module,exports){
const EPSILON=1e-6;module.exports={EPSILON:1e-6};

},{}],122:[function(require,module,exports){
const create=()=>[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];module.exports=create;

},{}],123:[function(require,module,exports){
const equals=(e,s)=>e[0]===s[0]&&e[1]===s[1]&&e[2]===s[2]&&e[3]===s[3]&&e[4]===s[4]&&e[5]===s[5]&&e[6]===s[6]&&e[7]===s[7]&&e[8]===s[8]&&e[9]===s[9]&&e[10]===s[10]&&e[11]===s[11]&&e[12]===s[12]&&e[13]===s[13]&&e[14]===s[14]&&e[15]===s[15];module.exports=equals;

},{}],124:[function(require,module,exports){
const create=require("./create"),{EPSILON:EPSILON}=require("./constants"),fromRotation=(...t)=>{let e,r,o;2===t.length?(e=create(),r=t[0],o=t[1]):(e=t[0],r=t[1],o=t[2]);let[a,n,s]=o,c=Math.sqrt(a*a+n*n+s*s);if(Math.abs(c)<EPSILON)return null;a*=c=1/c,n*=c,s*=c;const i=Math.sin(r),l=Math.cos(r),u=1-l;return e[0]=a*a*u+l,e[1]=n*a*u+s*i,e[2]=s*a*u-n*i,e[3]=0,e[4]=a*n*u-s*i,e[5]=n*n*u+l,e[6]=s*n*u+a*i,e[7]=0,e[8]=a*s*u+n*i,e[9]=n*s*u-a*i,e[10]=s*s*u+l,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e};module.exports=fromRotation;

},{"./constants":121,"./create":122}],125:[function(require,module,exports){
const create=require("./create"),fromScaling=(...e)=>{let r,t;return 1===e.length?(r=create(),t=e[0]):(r=e[0],t=e[1]),r[0]=t[0],r[1]=0,r[2]=0,r[3]=0,r[4]=0,r[5]=t[1],r[6]=0,r[7]=0,r[8]=0,r[9]=0,r[10]=t[2],r[11]=0,r[12]=0,r[13]=0,r[14]=0,r[15]=1,r};module.exports=fromScaling;

},{"./create":122}],126:[function(require,module,exports){
const clone=require("./clone"),fromTaitBryanRotation=(o,t,n)=>{const a=Math.sin(o),r=Math.cos(o),s=Math.sin(t),c=Math.cos(t),e=Math.sin(n),i=Math.cos(n);return clone([c*r,c*a,-s,0,e*s*r-i*a,i*r+e*s*a,e*c,0,e*a+i*s*r,i*s*a-e*r,i*c,0,0,0,0,1])};module.exports=fromTaitBryanRotation;

},{"./clone":120}],127:[function(require,module,exports){
const create=require("./create"),fromTranslation=(...e)=>{let r,t;return 1===e.length?(r=create(),t=e[0]):(r=e[0],t=e[1]),r[0]=1,r[1]=0,r[2]=0,r[3]=0,r[4]=0,r[5]=1,r[6]=0,r[7]=0,r[8]=0,r[9]=0,r[10]=1,r[11]=0,r[12]=t[0],r[13]=t[1],r[14]=t[2],r[15]=1,r};module.exports=fromTranslation;

},{"./create":122}],128:[function(require,module,exports){
const create=require("./create"),fromValues=(e,r,t,o,a,c,s,u,l,m,n,f,V,d,i,p)=>{const q=create();return q[0]=e,q[1]=r,q[2]=t,q[3]=o,q[4]=a,q[5]=c,q[6]=s,q[7]=u,q[8]=l,q[9]=m,q[10]=n,q[11]=f,q[12]=V,q[13]=d,q[14]=i,q[15]=p,q};module.exports=fromValues;

},{"./create":122}],129:[function(require,module,exports){
const create=require("./create"),fromXRotation=(...t)=>{let e,o;1===t.length?(e=create(),o=t[0]):(e=t[0],o=t[1]);const r=Math.sin(o),a=Math.cos(o);return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=a,e[6]=r,e[7]=0,e[8]=0,e[9]=-r,e[10]=a,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e};module.exports=fromXRotation;

},{"./create":122}],130:[function(require,module,exports){
const create=require("./create"),fromYRotation=(...t)=>{let e,o;1===t.length?(e=create(),o=t[0]):(e=t[0],o=t[1]);const r=Math.sin(o),a=Math.cos(o);return e[0]=a,e[1]=0,e[2]=-r,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=r,e[9]=0,e[10]=a,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e};module.exports=fromYRotation;

},{"./create":122}],131:[function(require,module,exports){
const create=require("./create"),fromZRotation=(...t)=>{let e,o;1===t.length?(e=create(),o=t[0]):(e=t[0],o=t[1]);const r=Math.sin(o),a=Math.cos(o);return e[0]=a,e[1]=r,e[2]=0,e[3]=0,e[4]=-r,e[5]=a,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e};module.exports=fromZRotation;

},{"./create":122}],132:[function(require,module,exports){
const create=require("./create"),identity=(...e)=>{let t;return(t=1===e.length?e[0]:create())[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t};module.exports=identity;

},{"./create":122}],133:[function(require,module,exports){
module.exports={add:require("./add"),clone:require("./clone"),create:require("./create"),equals:require("./equals"),fromRotation:require("./fromRotation"),fromScaling:require("./fromScaling"),fromTaitBryanRotation:require("./fromTaitBryanRotation"),fromTranslation:require("./fromTranslation"),fromValues:require("./fromValues"),fromXRotation:require("./fromXRotation"),fromYRotation:require("./fromYRotation"),fromZRotation:require("./fromZRotation"),identity:require("./identity"),isMirroring:require("./isMirroring"),mirrorByPlane:require("./mirrorByPlane"),multiply:require("./multiply"),rotate:require("./rotate"),rotateX:require("./rotateX"),rotateY:require("./rotateY"),rotateZ:require("./rotateZ"),scale:require("./scale"),subtract:require("./subtract"),toString:require("./toString"),translate:require("./translate")};

},{"./add":119,"./clone":120,"./create":122,"./equals":123,"./fromRotation":124,"./fromScaling":125,"./fromTaitBryanRotation":126,"./fromTranslation":127,"./fromValues":128,"./fromXRotation":129,"./fromYRotation":130,"./fromZRotation":131,"./identity":132,"./isMirroring":134,"./mirrorByPlane":135,"./multiply":136,"./rotate":137,"./rotateX":138,"./rotateY":139,"./rotateZ":140,"./scale":141,"./subtract":142,"./toString":143,"./translate":144}],134:[function(require,module,exports){
const cross=require("../vec3/cross"),dot=require("../vec3/dot"),isMirroring=r=>{const o=[r[0],r[4],r[8]],s=[r[1],r[5],r[9]],e=[r[2],r[6],r[10]];return dot(cross(o,s),e)<0};module.exports=isMirroring;

},{"../vec3/cross":201,"../vec3/dot":204}],135:[function(require,module,exports){
const create=require("./create"),mirrorByPlane=(...e)=>{let r,t;1===e.length?(r=create(),t=e[0]):(r=e[0],t=e[1]);const[n,o,a,c]=t;return r[0]=1-2*n*n,r[1]=-2*o*n,r[2]=-2*a*n,r[3]=0,r[4]=-2*n*o,r[5]=1-2*o*o,r[6]=-2*a*o,r[7]=0,r[8]=-2*n*a,r[9]=-2*o*a,r[10]=1-2*a*a,r[11]=0,r[12]=2*n*c,r[13]=2*o*c,r[14]=2*a*c,r[15]=1,r};module.exports=mirrorByPlane;

},{"./create":122}],136:[function(require,module,exports){
const create=require("./create"),multiply=(...e)=>{let t,l,r;2===e.length?(t=create(),l=e[0],r=e[1]):(t=e[0],l=e[1],r=e[2]);const c=l[0],u=l[1],n=l[2],o=l[3],a=l[4],i=l[5],m=l[6],p=l[7],s=l[8],y=l[9],d=l[10],g=l[11],h=l[12],q=l[13],x=l[14],b=l[15];let f=r[0],j=r[1],k=r[2],v=r[3];return t[0]=f*c+j*a+k*s+v*h,t[1]=f*u+j*i+k*y+v*q,t[2]=f*n+j*m+k*d+v*x,t[3]=f*o+j*p+k*g+v*b,f=r[4],j=r[5],k=r[6],v=r[7],t[4]=f*c+j*a+k*s+v*h,t[5]=f*u+j*i+k*y+v*q,t[6]=f*n+j*m+k*d+v*x,t[7]=f*o+j*p+k*g+v*b,f=r[8],j=r[9],k=r[10],v=r[11],t[8]=f*c+j*a+k*s+v*h,t[9]=f*u+j*i+k*y+v*q,t[10]=f*n+j*m+k*d+v*x,t[11]=f*o+j*p+k*g+v*b,f=r[12],j=r[13],k=r[14],v=r[15],t[12]=f*c+j*a+k*s+v*h,t[13]=f*u+j*i+k*y+v*q,t[14]=f*n+j*m+k*d+v*x,t[15]=f*o+j*p+k*g+v*b,t};module.exports=multiply;

},{"./create":122}],137:[function(require,module,exports){
const create=require("./create"),rotate=(...t)=>{let e,r,a,n;3===t.length?(e=create(),a=t[0],n=t[1],r=t[2]):(e=t[0],a=t[1],n=t[2],r=t[3]);let[o,s,c]=n,l=Math.sqrt(o*o+s*s+c*c);if(Math.abs(l)<1e-6)return null;o*=l=1/l,s*=l,c*=l;const h=Math.sin(a),u=Math.cos(a),M=1-u,i=r[0],q=r[1],b=r[2],d=r[3],f=r[4],g=r[5],m=r[6],p=r[7],x=r[8],j=r[9],k=r[10],v=r[11],w=o*o*M+u,y=s*o*M+c*h,z=c*o*M-s*h,A=o*s*M-c*h,B=s*s*M+u,C=c*s*M+o*h,D=o*c*M+s*h,E=s*c*M-o*h,F=c*c*M+u;return e[0]=i*w+f*y+x*z,e[1]=q*w+g*y+j*z,e[2]=b*w+m*y+k*z,e[3]=d*w+p*y+v*z,e[4]=i*A+f*B+x*C,e[5]=q*A+g*B+j*C,e[6]=b*A+m*B+k*C,e[7]=d*A+p*B+v*C,e[8]=i*D+f*E+x*F,e[9]=q*D+g*E+j*F,e[10]=b*D+m*E+k*F,e[11]=d*D+p*E+v*F,r!==e&&(e[12]=r[12],e[13]=r[13],e[14]=r[14],e[15]=r[15]),e};module.exports=rotate;

},{"./create":122}],138:[function(require,module,exports){
const create=require("./create"),rotateX=(...e)=>{let t,r,a;2===e.length?(t=create(),r=e[0],a=e[1]):(t=e[0],r=e[1],a=e[2]);const o=Math.sin(r),c=Math.cos(r),n=a[4],s=a[5],h=a[6],l=a[7],u=a[8],i=a[9],M=a[10],X=a[11];return a!==t&&(t[0]=a[0],t[1]=a[1],t[2]=a[2],t[3]=a[3],t[12]=a[12],t[13]=a[13],t[14]=a[14],t[15]=a[15]),t[4]=n*c+u*o,t[5]=s*c+i*o,t[6]=h*c+M*o,t[7]=l*c+X*o,t[8]=u*c-n*o,t[9]=i*c-s*o,t[10]=M*c-h*o,t[11]=X*c-l*o,t};module.exports=rotateX;

},{"./create":122}],139:[function(require,module,exports){
const create=require("./create"),rotateY=(...e)=>{let t,r,a;2===e.length?(t=create(),r=e[0],a=e[1]):(t=e[0],r=e[1],a=e[2]);const o=Math.sin(r),c=Math.cos(r),n=a[0],s=a[1],h=a[2],l=a[3],u=a[8],i=a[9],M=a[10],Y=a[11];return a!==t&&(t[4]=a[4],t[5]=a[5],t[6]=a[6],t[7]=a[7],t[12]=a[12],t[13]=a[13],t[14]=a[14],t[15]=a[15]),t[0]=n*c-u*o,t[1]=s*c-i*o,t[2]=h*c-M*o,t[3]=l*c-Y*o,t[8]=n*o+u*c,t[9]=s*o+i*c,t[10]=h*o+M*c,t[11]=l*o+Y*c,t};module.exports=rotateY;

},{"./create":122}],140:[function(require,module,exports){
const create=require("./create"),rotateZ=(...e)=>{let t,r,a;2===e.length?(t=create(),r=e[0],a=e[1]):(t=e[0],r=e[1],a=e[2]);const o=Math.sin(r),c=Math.cos(r),n=a[0],s=a[1],h=a[2],l=a[3],u=a[4],i=a[5],M=a[6],Z=a[7];return a!==t&&(t[8]=a[8],t[9]=a[9],t[10]=a[10],t[11]=a[11],t[12]=a[12],t[13]=a[13],t[14]=a[14],t[15]=a[15]),t[0]=n*c+u*o,t[1]=s*c+i*o,t[2]=h*c+M*o,t[3]=l*c+Z*o,t[4]=u*c-n*o,t[5]=i*c-s*o,t[6]=M*c-h*o,t[7]=Z*c-l*o,t};module.exports=rotateZ;

},{"./create":122}],141:[function(require,module,exports){
const create=require("./create"),scale=(...e)=>{let t,r,c;2===e.length?(t=create(),r=e[0],c=e[1]):(t=e[0],r=e[1],c=e[2]);const a=r[0],l=r[1],s=r[2];return t[0]=c[0]*a,t[1]=c[1]*a,t[2]=c[2]*a,t[3]=c[3]*a,t[4]=c[4]*l,t[5]=c[5]*l,t[6]=c[6]*l,t[7]=c[7]*l,t[8]=c[8]*s,t[9]=c[9]*s,t[10]=c[10]*s,t[11]=c[11]*s,t[12]=c[12],t[13]=c[13],t[14]=c[14],t[15]=c[15],t};module.exports=scale;

},{"./create":122}],142:[function(require,module,exports){
const create=require("./create"),subtract=(...e)=>{let t,r,c;return 2===e.length?(t=create(),r=e[0],c=e[1]):(t=e[0],r=e[1],c=e[2]),t[0]=r[0]-c[0],t[1]=r[1]-c[1],t[2]=r[2]-c[2],t[3]=r[3]-c[3],t[4]=r[4]-c[4],t[5]=r[5]-c[5],t[6]=r[6]-c[6],t[7]=r[7]-c[7],t[8]=r[8]-c[8],t[9]=r[9]-c[9],t[10]=r[10]-c[10],t[11]=r[11]-c[11],t[12]=r[12]-c[12],t[13]=r[13]-c[13],t[14]=r[14]-c[14],t[15]=r[15]-c[15],t};module.exports=subtract;

},{"./create":122}],143:[function(require,module,exports){
const toString=t=>`[${t[0].toFixed(7)}, ${t[1].toFixed(7)}, ${t[2].toFixed(7)}, ${t[3].toFixed(7)}, ${t[4].toFixed(7)}, ${t[5].toFixed(7)}, ${t[6].toFixed(7)}, ${t[7].toFixed(7)}, ${t[8].toFixed(7)}, ${t[9].toFixed(7)}, ${t[10].toFixed(7)}, ${t[11].toFixed(7)}, ${t[12].toFixed(7)}, ${t[13].toFixed(7)}, ${t[14].toFixed(7)}, ${t[15].toFixed(7)}]`;module.exports=toString;

},{}],144:[function(require,module,exports){
const create=require("./create"),translate=(...e)=>{let t,r,a;2===e.length?(t=create(),r=e[0],a=e[1]):(t=e[0],r=e[1],a=e[2]);const l=r[0],n=r[1],c=r[2];let s,o,u,d,g,h,i,m,p,q,x,b;return a===t?(t[12]=a[0]*l+a[4]*n+a[8]*c+a[12],t[13]=a[1]*l+a[5]*n+a[9]*c+a[13],t[14]=a[2]*l+a[6]*n+a[10]*c+a[14],t[15]=a[3]*l+a[7]*n+a[11]*c+a[15]):(s=a[0],o=a[1],u=a[2],d=a[3],g=a[4],h=a[5],i=a[6],m=a[7],p=a[8],q=a[9],x=a[10],b=a[11],t[0]=s,t[1]=o,t[2]=u,t[3]=d,t[4]=g,t[5]=h,t[6]=i,t[7]=m,t[8]=p,t[9]=q,t[10]=x,t[11]=b,t[12]=s*l+g*n+p*c+a[12],t[13]=o*l+h*n+q*c+a[13],t[14]=u*l+i*n+x*c+a[14],t[15]=d*l+m*n+b*c+a[15]),t};module.exports=translate;

},{"./create":122}],145:[function(require,module,exports){
const equals=(e,s)=>e[0]===s[0]&&e[1]===s[1]&&e[2]===s[2]&&e[3]===s[3];module.exports=equals;

},{}],146:[function(require,module,exports){
const create=require("../vec4/create"),flip=(...e)=>{let r,t;return 1===e.length?(r=create(),t=e[0]):(r=e[0],t=e[1]),r[0]=-t[0],r[1]=-t[1],r[2]=-t[2],r[3]=-t[3],r};module.exports=flip;

},{"../vec4/create":230}],147:[function(require,module,exports){
const vec3=require("../vec3"),fromValues=require("../vec4/fromValues"),fromNormalAndPoint=(e,o)=>{const r=vec3.unit(e),m=vec3.dot(o,r);return fromValues(r[0],r[1],r[2],m)};module.exports=fromNormalAndPoint;

},{"../vec3":210,"../vec4/fromValues":233}],148:[function(require,module,exports){
const vec3=require("../vec3"),fromValues=require("../vec4/fromValues"),fromPoints=(e,r,c)=>{const o=vec3.subtract(r,e),s=vec3.subtract(c,e);vec3.cross(o,o,s),vec3.unit(o,o);const t=vec3.dot(o,e);return fromValues(o[0],o[1],o[2],t)};module.exports=fromPoints;

},{"../vec3":210,"../vec4/fromValues":233}],149:[function(require,module,exports){
const{EPS:EPS}=require("../constants"),vec3=require("../vec3"),{fromValues:fromValues}=require("../vec4"),fromPointsRandom=(e,o,c)=>{let r=vec3.subtract(o,e),t=vec3.subtract(c,e);vec3.length(r)<EPS&&(r=vec3.orthogonal(t)),vec3.length(t)<EPS&&(t=vec3.orthogonal(r));let n=vec3.cross(r,t);return vec3.length(n)<EPS&&(t=vec3.orthogonal(r),n=vec3.cross(r,t)),n=vec3.unit(n),fromValues(n[0],n[1],n[2],vec3.dot(n,e))};module.exports=fromPointsRandom;

},{"../constants":87,"../vec3":210,"../vec4":234}],150:[function(require,module,exports){
module.exports={clone:require("../vec4/clone"),create:require("../vec4/create"),equals:require("./equals"),flip:require("./flip"),fromNormalAndPoint:require("./fromNormalAndPoint"),fromValues:require("../vec4/fromValues"),fromPoints:require("./fromPoints"),fromPointsRandom:require("./fromPointsRandom"),signedDistanceToPoint:require("./signedDistanceToPoint"),toString:require("../vec4/toString"),transform:require("./transform")};

},{"../vec4/clone":229,"../vec4/create":230,"../vec4/fromValues":233,"../vec4/toString":235,"./equals":145,"./flip":146,"./fromNormalAndPoint":147,"./fromPoints":148,"./fromPointsRandom":149,"./signedDistanceToPoint":151,"./transform":152}],151:[function(require,module,exports){
const vec3=require("../vec3"),signedDistanceToPoint=(e,o)=>vec3.dot(e,o)-e[3];module.exports=signedDistanceToPoint;

},{"../vec3":210}],152:[function(require,module,exports){
const mat4=require("../mat4"),vec3=require("../vec3"),fromPoints=require("./fromPoints"),flip=require("./flip"),transform=(r,e)=>{const o=mat4.isMirroring(r),t=vec3.orthogonal(e),s=vec3.cross(e,t),c=vec3.cross(e,s);let i=vec3.multiply(e,[e[3],e[3],e[3]]),m=vec3.add(i,s),n=vec3.add(i,c);i=vec3.transform(r,i),m=vec3.transform(r,m),n=vec3.transform(r,n);let a=fromPoints(i,m,n);return o&&(a=flip(a)),a};module.exports=transform;

},{"../mat4":133,"../vec3":210,"./flip":146,"./fromPoints":148}],153:[function(require,module,exports){
const area=e=>{let t=0;for(let r=0;r<e.length;r++){const l=(r+1)%e.length;t+=e[r][0]*e[l][1],t-=e[l][0]*e[r][1]}return t/2};module.exports=area;

},{}],154:[function(require,module,exports){
const clamp=(a,m,t)=>Math.min(Math.max(a,m),t);module.exports=clamp;

},{}],155:[function(require,module,exports){
module.exports={area:require("./area"),clamp:require("./clamp"),interpolateBetween2DPointsForY:require("./interpolateBetween2DPointsForY"),intersect:require("./intersect"),solve2Linear:require("./solve2Linear")};

},{"./area":153,"./clamp":154,"./interpolateBetween2DPointsForY":156,"./intersect":157,"./solve2Linear":159}],156:[function(require,module,exports){
const interpolateBetween2DPointsForY=(e,t,o)=>{let n,r=o-e[1],i=t[1]-e[1];return i<0&&(r=-r,i=-i),n=r<=0?0:r>=i?1:i<1e-10?.5:r/i,e[0]+n*(t[0]-e[0])};module.exports=interpolateBetween2DPointsForY;

},{}],157:[function(require,module,exports){
const intersect=(t,e,r,n)=>{if(t[0]===e[0]&&t[1]===e[1]||r[0]===n[0]&&r[1]===n[1])return;const s=(n[1]-r[1])*(e[0]-t[0])-(n[0]-r[0])*(e[1]-t[1]);if(Math.abs(s)<Number.MIN_VALUE)return;const o=((n[0]-r[0])*(t[1]-r[1])-(n[1]-r[1])*(t[0]-r[0]))/s,c=((e[0]-t[0])*(t[1]-r[1])-(e[1]-t[1])*(t[0]-r[0]))/s;return o<0||o>1||c<0||c>1?void 0:[t[0]+o*(e[0]-t[0]),t[1]+o*(e[1]-t[1])]};module.exports=intersect;

},{}],158:[function(require,module,exports){
const{spatialResolution:spatialResolution}=require("../constants"),quantizeForSpace=o=>Math.round(o*spatialResolution)/spatialResolution;module.exports=quantizeForSpace;

},{"../constants":87}],159:[function(require,module,exports){
const solve2Linear=(e,o,n,r,s,t)=>{const l=1/(e*r-o*n);let a=s*r-o*t,c=-s*n+e*t;return[a*=l,c*=l]};module.exports=solve2Linear;

},{}],160:[function(require,module,exports){
const create=require("./create"),abs=(...e)=>{let t,a;return 1===e.length?(t=create(),a=e[0]):(t=e[0],a=e[1]),t[0]=Math.abs(a[0]),t[1]=Math.abs(a[1]),t};module.exports=abs;

},{"./create":167}],161:[function(require,module,exports){
const create=require("./create"),add=(...e)=>{let r,t,a;return 2===e.length?(r=create(),t=e[0],a=e[1]):(r=e[0],t=e[1],a=e[2]),r[0]=t[0]+a[0],r[1]=t[1]+a[1],r};module.exports=add;

},{"./create":167}],162:[function(require,module,exports){
module.exports=require("./angleRadians");

},{"./angleRadians":164}],163:[function(require,module,exports){
const angleRadians=require("./angleRadians"),angleDegrees=e=>57.29577951308232*angleRadians(e);module.exports=angleDegrees;

},{"./angleRadians":164}],164:[function(require,module,exports){
const angleRadians=a=>Math.atan2(a[1],a[0]);module.exports=angleRadians;

},{}],165:[function(require,module,exports){
const fromValues=require("./fromValues"),quantizeForSpace=require("../utils/quantizeForSpace"),canonicalize=e=>fromValues(quantizeForSpace(e[0]),quantizeForSpace(e[1]));module.exports=canonicalize;

},{"../utils/quantizeForSpace":158,"./fromValues":178}],166:[function(require,module,exports){
const create=require("./create"),clone=(...e)=>{let r,t;return 1===e.length?(r=create(),t=e[0]):(r=e[0],t=e[1]),r[0]=t[0],r[1]=t[1],r};module.exports=clone;

},{"./create":167}],167:[function(require,module,exports){
const create=()=>[0,0];module.exports=create;

},{}],168:[function(require,module,exports){
const vec3=require("../vec3/index"),cross=(...e)=>{let r,c,s;return 2===e.length?(r=vec3.create(),c=e[0],s=e[1]):(r=e[0],c=e[1],s=e[2]),r[0]=0,r[1]=0,r[2]=c[0]*s[1]-c[1]*s[0],r};module.exports=cross;

},{"../vec3/index":210}],169:[function(require,module,exports){
const distance=(t,e)=>{const n=e[0]-t[0],o=e[1]-t[1];return Math.hypot(n,o)};module.exports=distance;

},{}],170:[function(require,module,exports){
const create=require("./create"),divide=(...e)=>{let r,t,d;return 2===e.length?(r=create(),t=e[0],d=e[1]):(r=e[0],t=e[1],d=e[2]),r[0]=t[0]/d[0],r[1]=t[1]/d[1],r};module.exports=divide;

},{"./create":167}],171:[function(require,module,exports){
const dot=(o,t)=>o[0]*t[0]+o[1]*t[1];module.exports=dot;

},{}],172:[function(require,module,exports){
const equals=(e,s)=>e[0]===s[0]&&e[1]===s[1];module.exports=equals;

},{}],173:[function(require,module,exports){
module.exports=require("./fromAngleRadians");

},{"./fromAngleRadians":175}],174:[function(require,module,exports){
const fromValues=require("./fromValues"),fromAngleDegrees=e=>{const r=Math.PI*e/180;return fromValues(Math.cos(r),Math.sin(r))};module.exports=fromAngleDegrees;

},{"./fromValues":178}],175:[function(require,module,exports){
const fromValues=require("./fromValues"),fromAngleRadians=a=>fromValues(Math.cos(a),Math.sin(a));module.exports=fromAngleRadians;

},{"./fromValues":178}],176:[function(require,module,exports){
const create=require("./create"),fromArray=r=>{const e=create();return e[0]=r[0],e[1]=r[1],e};module.exports=fromArray;

},{"./create":167}],177:[function(require,module,exports){
const fromValues=require("./fromValues"),fromScalar=r=>fromValues(r,r);module.exports=fromScalar;

},{"./fromValues":178}],178:[function(require,module,exports){
const create=require("./create"),fromValues=(e,r)=>{const t=create();return t[0]=e,t[1]=r,t};module.exports=fromValues;

},{"./create":167}],179:[function(require,module,exports){
module.exports={abs:require("./abs"),add:require("./add"),angle:require("./angle"),angleDegrees:require("./angleDegrees"),angleRadians:require("./angleRadians"),canonicalize:require("./canonicalize"),clone:require("./clone"),create:require("./create"),cross:require("./cross"),distance:require("./distance"),divide:require("./divide"),dot:require("./dot"),equals:require("./equals"),fromAngle:require("./fromAngle"),fromAngleDegrees:require("./fromAngleDegrees"),fromAngleRadians:require("./fromAngleRadians"),fromArray:require("./fromArray"),fromScalar:require("./fromScalar"),fromValues:require("./fromValues"),length:require("./length"),lerp:require("./lerp"),max:require("./max"),min:require("./min"),multiply:require("./multiply"),negate:require("./negate"),normal:require("./normal"),normalize:require("./normalize"),rotate:require("./rotate"),scale:require("./scale"),squaredDistance:require("./squaredDistance"),squaredLength:require("./squaredLength"),subtract:require("./subtract"),toString:require("./toString"),transform:require("./transform")};

},{"./abs":160,"./add":161,"./angle":162,"./angleDegrees":163,"./angleRadians":164,"./canonicalize":165,"./clone":166,"./create":167,"./cross":168,"./distance":169,"./divide":170,"./dot":171,"./equals":172,"./fromAngle":173,"./fromAngleDegrees":174,"./fromAngleRadians":175,"./fromArray":176,"./fromScalar":177,"./fromValues":178,"./length":180,"./lerp":181,"./max":182,"./min":183,"./multiply":184,"./negate":185,"./normal":186,"./normalize":187,"./rotate":188,"./scale":189,"./squaredDistance":190,"./squaredLength":191,"./subtract":192,"./toString":193,"./transform":194}],180:[function(require,module,exports){
const length=t=>{const e=t[0],n=t[1];return Math.hypot(e,n)};module.exports=length;

},{}],181:[function(require,module,exports){
const create=require("./create"),lerp=(...e)=>{let r,t,c,l;3===e.length?(r=create(),t=e[0],c=e[1],l=e[2]):(r=e[0],t=e[1],c=e[2],l=e[3]);const n=c[0],o=c[1];return r[0]=n+t*(l[0]-n),r[1]=o+t*(l[1]-o),r};module.exports=lerp;

},{"./create":167}],182:[function(require,module,exports){
const create=require("./create"),max=(...e)=>{let t,a,r;return 2===e.length?(t=create(),a=e[0],r=e[1]):(t=e[0],a=e[1],r=e[2]),t[0]=Math.max(a[0],r[0]),t[1]=Math.max(a[1],r[1]),t};module.exports=max;

},{"./create":167}],183:[function(require,module,exports){
const create=require("./create"),min=(...e)=>{let t,r,n;return 2===e.length?(t=create(),r=e[0],n=e[1]):(t=e[0],r=e[1],n=e[2]),t[0]=Math.min(r[0],n[0]),t[1]=Math.min(r[1],n[1]),t};module.exports=min;

},{"./create":167}],184:[function(require,module,exports){
const create=require("./create"),multiply=(...e)=>{let t,r,l;return 2===e.length?(t=create(),r=e[0],l=e[1]):(t=e[0],r=e[1],l=e[2]),t[0]=r[0]*l[0],t[1]=r[1]*l[1],t};module.exports=multiply;

},{"./create":167}],185:[function(require,module,exports){
const create=require("./create"),negate=(...e)=>{let t,r;return 1===e.length?(t=create(),r=e[0]):(t=e[0],r=e[1]),t[0]=-r[0],t[1]=-r[1],t};module.exports=negate;

},{"./create":167}],186:[function(require,module,exports){
const rotate=require("./rotate"),normal=(...t)=>{if(1===t.length){const r=t[0];return rotate(Math.PI/2,r)}{const r=t[0],e=t[1];return rotate(r,Math.PI/2,e)}};module.exports=normal;

},{"./rotate":188}],187:[function(require,module,exports){
const create=require("./create"),normalize=(...e)=>{let t,r;1===e.length?(r=create(),t=e[0]):(r=e[0],t=e[1]);const a=t[0],l=t[1];let n=a*a+l*l;return n>0&&(n=1/Math.sqrt(n)),r[0]=a*n,r[1]=l*n,r};module.exports=normalize;

},{"./create":167}],188:[function(require,module,exports){
const create=require("./create"),rotate=(...e)=>{let t,r,a;2===e.length?(t=create(),a=e[0],r=e[1]):(t=e[0],a=e[1],r=e[2]);const o=Math.cos(a),c=Math.sin(a),n=r[0],s=r[1];return t[0]=n*o-s*c,t[1]=n*c+s*o,t};module.exports=rotate;

},{"./create":167}],189:[function(require,module,exports){
const create=require("./create"),scale=(...e)=>{let r,t,c;return 2===e.length?(r=create(),c=e[0],t=e[1]):(r=e[0],c=e[1],t=e[2]),r[0]=t[0]*c,r[1]=t[1]*c,r};module.exports=scale;

},{"./create":167}],190:[function(require,module,exports){
const squaredDistance=(e,s)=>{const t=s[0]-e[0],n=s[1]-e[1];return t*t+n*n};module.exports=squaredDistance;

},{}],191:[function(require,module,exports){
const squaredLength=e=>{const t=e[0],n=e[1];return t*t+n*n};module.exports=squaredLength;

},{}],192:[function(require,module,exports){
const create=require("./create"),subtract=(...e)=>{let t,r,c;return 2===e.length?(t=create(),r=e[0],c=e[1]):(t=e[0],r=e[1],c=e[2]),t[0]=r[0]-c[0],t[1]=r[1]-c[1],t};module.exports=subtract;

},{"./create":167}],193:[function(require,module,exports){
const toString=t=>`[${t[0].toFixed(7)}, ${t[1].toFixed(7)}]`;module.exports=toString;

},{}],194:[function(require,module,exports){
const create=require("./create"),transform=(...e)=>{let r,t,n;2===e.length?(r=create(),t=e[0],n=e[1]):(r=e[0],t=e[1],n=e[2]);const o=n[0],a=n[1];return r[0]=t[0]*o+t[4]*a+t[12],r[1]=t[1]*o+t[5]*a+t[13],r};module.exports=transform;

},{"./create":167}],195:[function(require,module,exports){
const create=require("./create"),abs=(...e)=>{let a,t;return 1===e.length?(a=create(),t=e[0]):(a=e[0],t=e[1]),a[0]=Math.abs(t[0]),a[1]=Math.abs(t[1]),a[2]=Math.abs(t[2]),a};module.exports=abs;

},{"./create":200}],196:[function(require,module,exports){
const create=require("./create"),add=(...e)=>{let r,t,a;return 2===e.length?(r=create(),t=e[0],a=e[1]):(r=e[0],t=e[1],a=e[2]),r[0]=t[0]+a[0],r[1]=t[1]+a[1],r[2]=t[2]+a[2],r};module.exports=add;

},{"./create":200}],197:[function(require,module,exports){
const dot=require("./dot"),angle=(t,a)=>{const o=t[0],e=t[1],r=t[2],n=a[0],s=a[1],h=a[2],M=Math.sqrt(o*o+e*e+r*r)*Math.sqrt(n*n+s*s+h*h),d=M&&dot(t,a)/M;return Math.acos(Math.min(Math.max(d,-1),1))};module.exports=angle;

},{"./dot":204}],198:[function(require,module,exports){
const fromValues=require("./fromValues"),quantizeForSpace=require("../utils/quantizeForSpace"),canonicalize=e=>fromValues(quantizeForSpace(e[0]),quantizeForSpace(e[1]),void 0===e[2]?0:quantizeForSpace(e[2]));module.exports=canonicalize;

},{"../utils/quantizeForSpace":158,"./fromValues":208}],199:[function(require,module,exports){
const create=require("./create"),clone=(...e)=>{let r,t;return 1===e.length?(r=create(),t=e[0]):(r=e[0],t=e[1]),r[0]=t[0],r[1]=t[1],r[2]=t[2],r};module.exports=clone;

},{"./create":200}],200:[function(require,module,exports){
const create=()=>[0,0,0];module.exports=create;

},{}],201:[function(require,module,exports){
const create=require("./create"),cross=(...e)=>{let r,t,c;2===e.length?(r=create(),t=e[0],c=e[1]):(r=e[0],t=e[1],c=e[2]);const s=t[0],o=t[1],n=t[2],a=c[0],l=c[1],u=c[2];return r[0]=o*u-n*l,r[1]=n*a-s*u,r[2]=s*l-o*a,r};module.exports=cross;

},{"./create":200}],202:[function(require,module,exports){
const distance=(t,e)=>{const n=e[0]-t[0],o=e[1]-t[1],s=e[2]-t[2];return Math.hypot(n,o,s)};module.exports=distance;

},{}],203:[function(require,module,exports){
const create=require("./create"),divide=(...e)=>{let r,t,d;return 2===e.length?(r=create(),t=e[0],d=e[1]):(r=e[0],t=e[1],d=e[2]),r[0]=t[0]/d[0],r[1]=t[1]/d[1],r[2]=t[2]/d[2],r};module.exports=divide;

},{"./create":200}],204:[function(require,module,exports){
const dot=(o,t)=>o[0]*t[0]+o[1]*t[1]+o[2]*t[2];module.exports=dot;

},{}],205:[function(require,module,exports){
const equals=(e,s)=>e[0]===s[0]&&e[1]===s[1]&&e[2]===s[2];module.exports=equals;

},{}],206:[function(require,module,exports){
const create=require("./create"),fromArray=r=>{const e=create();return e[0]=r[0],e[1]=r[1],e[2]=r[2],e};module.exports=fromArray;

},{"./create":200}],207:[function(require,module,exports){
const fromValues=require("./fromValues"),fromScalar=r=>fromValues(r,r,r);module.exports=fromScalar;

},{"./fromValues":208}],208:[function(require,module,exports){
const create=require("./create"),fromValues=(e,r,t)=>{const o=create();return o[0]=e,o[1]=r,o[2]=t,o};module.exports=fromValues;

},{"./create":200}],209:[function(require,module,exports){
const fromValues=require("./fromValues"),fromVector2=(o,r=0)=>fromValues(o[0],o[1],r);module.exports=fromVector2;

},{"./fromValues":208}],210:[function(require,module,exports){
module.exports={abs:require("./abs"),add:require("./add"),angle:require("./angle"),canonicalize:require("./canonicalize"),clone:require("./clone"),create:require("./create"),cross:require("./cross"),distance:require("./distance"),divide:require("./divide"),dot:require("./dot"),equals:require("./equals"),fromArray:require("./fromArray"),fromScalar:require("./fromScalar"),fromValues:require("./fromValues"),fromVec2:require("./fromVec2"),length:require("./length"),lerp:require("./lerp"),max:require("./max"),min:require("./min"),multiply:require("./multiply"),negate:require("./negate"),normalize:require("./normalize"),orthogonal:require("./orthogonal"),rotateX:require("./rotateX"),rotateY:require("./rotateY"),rotateZ:require("./rotateZ"),scale:require("./scale"),squaredDistance:require("./squaredDistance"),squaredLength:require("./squaredLength"),subtract:require("./subtract"),toString:require("./toString"),transform:require("./transform"),unit:require("./unit")};

},{"./abs":195,"./add":196,"./angle":197,"./canonicalize":198,"./clone":199,"./create":200,"./cross":201,"./distance":202,"./divide":203,"./dot":204,"./equals":205,"./fromArray":206,"./fromScalar":207,"./fromValues":208,"./fromVec2":209,"./length":211,"./lerp":212,"./max":213,"./min":214,"./multiply":215,"./negate":216,"./normalize":217,"./orthogonal":218,"./rotateX":219,"./rotateY":220,"./rotateZ":221,"./scale":222,"./squaredDistance":223,"./squaredLength":224,"./subtract":225,"./toString":226,"./transform":227,"./unit":228}],211:[function(require,module,exports){
const length=t=>{const e=t[0],n=t[1],o=t[2];return Math.hypot(e,n,o)};module.exports=length;

},{}],212:[function(require,module,exports){
const create=require("./create"),lerp=(...e)=>{let r,t,l,c;return 3===e.length?(r=create(),t=e[0],l=e[1],c=e[2]):(r=e[0],t=e[1],l=e[2],c=e[3]),r[0]=l[0]+t*(c[0]-l[0]),r[1]=l[1]+t*(c[1]-l[1]),r[2]=l[2]+t*(c[2]-l[2]),r};module.exports=lerp;

},{"./create":200}],213:[function(require,module,exports){
const create=require("./create"),max=(...e)=>{let a,t,r;return 2===e.length?(a=create(),t=e[0],r=e[1]):(a=e[0],t=e[1],r=e[2]),a[0]=Math.max(t[0],r[0]),a[1]=Math.max(t[1],r[1]),a[2]=Math.max(t[2],r[2]),a};module.exports=max;

},{"./create":200}],214:[function(require,module,exports){
const create=require("./create"),min=(...e)=>{let t,n,r;return 2===e.length?(t=create(),n=e[0],r=e[1]):(t=e[0],n=e[1],r=e[2]),t[0]=Math.min(n[0],r[0]),t[1]=Math.min(n[1],r[1]),t[2]=Math.min(n[2],r[2]),t};module.exports=min;

},{"./create":200}],215:[function(require,module,exports){
const create=require("./create"),multiply=(...e)=>{let t,r,l;return 2===e.length?(t=create(),r=e[0],l=e[1]):(t=e[0],r=e[1],l=e[2]),t[0]=r[0]*l[0],t[1]=r[1]*l[1],t[2]=r[2]*l[2],t};module.exports=multiply;

},{"./create":200}],216:[function(require,module,exports){
const create=require("./create"),negate=(...e)=>{let t,r;return 1===e.length?(t=create(),r=e[0]):(t=e[0],r=e[1]),t[0]=-r[0],t[1]=-r[1],t[2]=-r[2],t};module.exports=negate;

},{"./create":200}],217:[function(require,module,exports){
const create=require("./create"),normalize=(...e)=>{let t,r;1===e.length?(t=e[0],r=create()):(r=e[0],t=e[1]);const a=t[0],l=t[1],n=t[2];let o=a*a+l*l+n*n;return o>0&&(o=1/Math.sqrt(o)),r[0]=a*o,r[1]=l*o,r[2]=n*o,r};module.exports=normalize;

},{"./create":200}],218:[function(require,module,exports){
const abs=require("./abs"),create=require("./create"),orthogonal=(...e)=>{let r,t;return 1===e.length?(r=create(),t=e[0]):(r=e[0],t=e[1]),abs(r,t),r[0]<=r[1]&&r[0]<=r[2]?(r[0]=1,r[1]=0,r[2]=0):r[1]<=r[0]&&r[1]<=r[2]?(r[0]=0,r[1]=1,r[2]=0):(r[0]=0,r[1]=0,r[2]=1),r};module.exports=orthogonal;

},{"./abs":195,"./create":200}],219:[function(require,module,exports){
const create=require("./create"),rotateX=(...t)=>{let e,r,a,o;3===t.length?(e=create(),r=t[0],o=t[1],a=t[2]):(e=t[0],r=t[1],o=t[2],a=t[3]);const c=[],s=[];return c[0]=a[0]-o[0],c[1]=a[1]-o[1],c[2]=a[2]-o[2],s[0]=c[0],s[1]=c[1]*Math.cos(r)-c[2]*Math.sin(r),s[2]=c[1]*Math.sin(r)+c[2]*Math.cos(r),e[0]=s[0]+o[0],e[1]=s[1]+o[1],e[2]=s[2]+o[2],e};module.exports=rotateX;

},{"./create":200}],220:[function(require,module,exports){
const create=require("./create"),rotateY=(...t)=>{let e,r,a,o;3===t.length?(e=create(),r=t[0],o=t[1],a=t[2]):(e=t[0],r=t[1],o=t[2],a=t[3]);const c=[],s=[];return c[0]=a[0]-o[0],c[1]=a[1]-o[1],c[2]=a[2]-o[2],s[0]=c[2]*Math.sin(r)+c[0]*Math.cos(r),s[1]=c[1],s[2]=c[2]*Math.cos(r)-c[0]*Math.sin(r),e[0]=s[0]+o[0],e[1]=s[1]+o[1],e[2]=s[2]+o[2],e};module.exports=rotateY;

},{"./create":200}],221:[function(require,module,exports){
const create=require("./create"),rotateZ=(...t)=>{let e,r,a,o;3===t.length?(e=create(),r=t[0],o=t[1],a=t[2]):(e=t[0],r=t[1],o=t[2],a=t[3]);const c=[],s=[];return c[0]=a[0]-o[0],c[1]=a[1]-o[1],s[0]=c[0]*Math.cos(r)-c[1]*Math.sin(r),s[1]=c[0]*Math.sin(r)+c[1]*Math.cos(r),e[0]=s[0]+o[0],e[1]=s[1]+o[1],e[2]=a[2],e};module.exports=rotateZ;

},{"./create":200}],222:[function(require,module,exports){
const create=require("./create"),scale=(...e)=>{let r,t,c;return 2===e.length?(r=create(),c=e[0],t=e[1]):(r=e[0],c=e[1],t=e[2]),r[0]=t[0]*c,r[1]=t[1]*c,r[2]=t[2]*c,r};module.exports=scale;

},{"./create":200}],223:[function(require,module,exports){
const squaredDistance=(e,s)=>{const t=s[0]-e[0],n=s[1]-e[1],r=s[2]-e[2];return t*t+n*n+r*r};module.exports=squaredDistance;

},{}],224:[function(require,module,exports){
const squaredLength=e=>{const t=e[0],n=e[1],r=e[2];return t*t+n*n+r*r};module.exports=squaredLength;

},{}],225:[function(require,module,exports){
const create=require("./create"),subtract=(...e)=>{let t,r,c;return 2===e.length?(t=create(),r=e[0],c=e[1]):(t=e[0],r=e[1],c=e[2]),t[0]=r[0]-c[0],t[1]=r[1]-c[1],t[2]=r[2]-c[2],t};module.exports=subtract;

},{"./create":200}],226:[function(require,module,exports){
const toString=t=>`[${t[0].toFixed(7)}, ${t[1].toFixed(7)}, ${t[2].toFixed(7)}]`;module.exports=toString;

},{}],227:[function(require,module,exports){
const create=require("./create"),transform=(...e)=>{let r,t,n;2===e.length?(r=create(),n=e[0],t=e[1]):(r=e[0],n=e[1],t=e[2]);const o=t[0],a=t[1],c=t[2];let s=n[3]*o+n[7]*a+n[11]*c+n[15];return s=s||1,r[0]=(n[0]*o+n[4]*a+n[8]*c+n[12])/s,r[1]=(n[1]*o+n[5]*a+n[9]*c+n[13])/s,r[2]=(n[2]*o+n[6]*a+n[10]*c+n[14])/s,r};module.exports=transform;

},{"./create":200}],228:[function(require,module,exports){
const create=require("./create"),length=require("./length"),unit=(...e)=>{let t,r;1===e.length?(t=create(),r=e[0]):(t=e[0],r=e[1]);const n=length(r);return t[0]=r[0]/n,t[1]=r[1]/n,t[2]=r[2]/n,t};module.exports=unit;

},{"./create":200,"./length":211}],229:[function(require,module,exports){
const create=require("./create"),clone=(...e)=>{let r,t;return 1===e.length?(r=create(),t=e[0]):(r=e[0],t=e[1]),r[0]=t[0],r[1]=t[1],r[2]=t[2],r[3]=t[3],r};module.exports=clone;

},{"./create":230}],230:[function(require,module,exports){
const create=()=>[0,0,0,0];module.exports=create;

},{}],231:[function(require,module,exports){
const dot=(o,t)=>o[0]*t[0]+o[1]*t[1]+o[2]*t[2]+o[3]*t[3];module.exports=dot;

},{}],232:[function(require,module,exports){
const fromValues=require("./fromValues"),fromScalar=r=>fromValues(r,r,r,r);module.exports=fromScalar;

},{"./fromValues":233}],233:[function(require,module,exports){
const create=require("./create"),fromValues=(e,r,t,o)=>{const a=create();return a[0]=e,a[1]=r,a[2]=t,a[3]=o,a};module.exports=fromValues;

},{"./create":230}],234:[function(require,module,exports){
module.exports={clone:require("./clone"),create:require("./create"),dot:require("./dot"),fromScalar:require("./fromScalar"),fromValues:require("./fromValues"),toString:require("./toString"),transform:require("./transform")};

},{"./clone":229,"./create":230,"./dot":231,"./fromScalar":232,"./fromValues":233,"./toString":235,"./transform":236}],235:[function(require,module,exports){
const toString=t=>`(${t[0].toFixed(9)}, ${t[1].toFixed(9)}, ${t[2].toFixed(9)}, ${t[3].toFixed(9)})`;module.exports=toString;

},{}],236:[function(require,module,exports){
const create=require("./create"),transform=(...r)=>{let t,e,n;2===r.length?(t=create(),n=r[0],e=r[1]):(t=r[0],n=r[1],e=r[2]);const[o,a,u,f]=e;return t[0]=Math.fround(n[0]*o+n[4]*a+n[8]*u+n[12]*f),t[1]=Math.fround(n[1]*o+n[5]*a+n[9]*u+n[13]*f),t[2]=Math.fround(n[2]*o+n[6]*a+n[10]*u+n[14]*f),t[3]=Math.fround(n[3]*o+n[7]*a+n[11]*u+n[15]*f),t};module.exports=transform;

},{"./create":230}],237:[function(require,module,exports){
const{EPS:EPS}=require("../maths/constants"),calculateEpsilonFromBounds=(o,t)=>{let e=0;for(let l=0;l<t;l++)e+=o[1][l]-o[0][l];return EPS*e/t};module.exports=calculateEpsilonFromBounds;

},{"../maths/constants":87}],238:[function(require,module,exports){
module.exports={measureAggregateArea:require("./measureAggregateArea"),measureAggregateBoundingBox:require("./measureAggregateBoundingBox"),measureAggregateEpsilon:require("./measureAggregateEpsilon"),measureAggregateVolume:require("./measureAggregateVolume"),measureArea:require("./measureArea"),measureBoundingBox:require("./measureBoundingBox"),measureEpsilon:require("./measureEpsilon"),measureVolume:require("./measureVolume")};

},{"./measureAggregateArea":239,"./measureAggregateBoundingBox":240,"./measureAggregateEpsilon":241,"./measureAggregateVolume":242,"./measureArea":243,"./measureBoundingBox":244,"./measureEpsilon":245,"./measureVolume":246}],239:[function(require,module,exports){
const flatten=require("../utils/flatten"),measureArea=require("./measureArea"),measureAggregateArea=(...e)=>{if(0===(e=flatten(e)).length)throw new Error("measureAggregateArea: no geometries supplied");const r=measureArea(e);if(1===e.length)return r;return r.reduce((e,r)=>e+r,0)};module.exports=measureAggregateArea;

},{"../utils/flatten":356,"./measureArea":243}],240:[function(require,module,exports){
const flatten=require("../utils/flatten"),vec3min=require("../maths/vec3/min"),vec3max=require("../maths/vec3/max"),measureBoundingBox=require("./measureBoundingBox"),measureAggregateBoundingBox=(...e)=>{if(0===(e=flatten(e)).length)throw new Error("measureAggregateBoundingBox: no geometries supplied");const r=measureBoundingBox(e);if(1===e.length)return r;const u=[[Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE],[-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE]];return r.reduce((e,r)=>e=[vec3min(e[0],r[0]),vec3max(e[1],r[1])],u)};module.exports=measureAggregateBoundingBox;

},{"../maths/vec3/max":213,"../maths/vec3/min":214,"../utils/flatten":356,"./measureBoundingBox":244}],241:[function(require,module,exports){
const flatten=require("../utils/flatten"),measureAggregateBoundingBox=require("./measureAggregateBoundingBox"),calculateEpsilonFromBounds=require("./calculateEpsilonFromBounds"),{geom2:geom2,geom3:geom3,path2:path2}=require("../geometries"),measureAggregateEpsilon=(...e)=>{if(0===(e=flatten(e)).length)throw new Error("measureAggregateEpsilon: no geometries supplied");const o=measureAggregateBoundingBox(e);let r=0;return r=e.reduce((e,o)=>path2.isA(o)||geom2.isA(o)?Math.max(e,2):geom3.isA(o)?Math.max(e,3):0,r),calculateEpsilonFromBounds(o,r)};module.exports=measureAggregateEpsilon;

},{"../geometries":44,"../utils/flatten":356,"./calculateEpsilonFromBounds":237,"./measureAggregateBoundingBox":240}],242:[function(require,module,exports){
const flatten=require("../utils/flatten"),measureVolume=require("./measureVolume"),measureAggregateVolume=(...e)=>{if(0===(e=flatten(e)).length)throw new Error("measureAggregateVolume: no geometries supplied");const r=measureVolume(e);if(1===e.length)return r;return r.reduce((e,r)=>e+r,0)};module.exports=measureAggregateVolume;

},{"../utils/flatten":356,"./measureVolume":246}],243:[function(require,module,exports){
const flatten=require("../utils/flatten"),geom2=require("../geometries/geom2"),geom3=require("../geometries/geom3"),path2=require("../geometries/path2"),poly3=require("../geometries/poly3"),measureAreaOfPath2=()=>0,measureAreaOfGeom2=e=>{if(e.area)return e.area;const r=geom2.toSides(e).reduce((e,r)=>e+(r[0][0]*r[1][1]-r[0][1]*r[1][0]),0);return e.area=.5*r,e.area},measureAreaOfGeom3=e=>{if(e.area)return e.area;const r=geom3.toPolygons(e);return e.area=r.reduce((e,r)=>e+poly3.measureArea(r),0),e.area},measureArea=(...e)=>{if(0===(e=flatten(e)).length)throw new Error("wrong number of arguments");const r=e.map(e=>path2.isA(e)?0:geom2.isA(e)?measureAreaOfGeom2(e):geom3.isA(e)?measureAreaOfGeom3(e):0);return 1===r.length?r[0]:r};module.exports=measureArea;

},{"../geometries/geom2":22,"../geometries/geom3":36,"../geometries/path2":57,"../geometries/poly3":73,"../utils/flatten":356}],244:[function(require,module,exports){
const flatten=require("../utils/flatten"),vec2=require("../maths/vec2"),vec3=require("../maths/vec3"),geom2=require("../geometries/geom2"),geom3=require("../geometries/geom3"),path2=require("../geometries/path2"),poly3=require("../geometries/poly3"),measureBoundingBoxOfPath2=e=>{if(e.boundingBox)return e.boundingBox;const o=path2.toPoints(e);let n;n=0===o.length?vec2.create():vec2.clone(o[0]);let t=vec2.clone(n);return o.forEach(e=>{vec2.min(n,n,e),vec2.max(t,t,e)}),n=[n[0],n[1],0],t=[t[0],t[1],0],e.boundingBox=[n,t],e.boundingBox},measureBoundingBoxOfGeom2=e=>{if(e.boundingBox)return e.boundingBox;const o=geom2.toPoints(e);let n;n=0===o.length?vec2.create():vec2.clone(o[0]);let t=vec2.clone(n);return o.forEach(e=>{vec2.min(n,n,e),vec2.max(t,t,e)}),n=[n[0],n[1],0],t=[t[0],t[1],0],e.boundingBox=[n,t],e.boundingBox},measureBoundingBoxOfGeom3=e=>{if(e.boundingBox)return e.boundingBox;const o=geom3.toPolygons(e);let n=vec3.create();if(o.length>0){const e=poly3.toPoints(o[0]);vec3.clone(n,e[0])}let t=vec3.clone(n);return o.forEach(e=>{poly3.toPoints(e).forEach(e=>{vec3.min(n,n,e),vec3.max(t,t,e)})}),n=[n[0],n[1],n[2]],t=[t[0],t[1],t[2]],e.boundingBox=[n,t],e.boundingBox},measureBoundingBox=(...e)=>{if(0===(e=flatten(e)).length)throw new Error("wrong number of arguments");const o=e.map(e=>path2.isA(e)?measureBoundingBoxOfPath2(e):geom2.isA(e)?measureBoundingBoxOfGeom2(e):geom3.isA(e)?measureBoundingBoxOfGeom3(e):[[0,0,0],[0,0,0]]);return 1===o.length?o[0]:o};module.exports=measureBoundingBox;

},{"../geometries/geom2":22,"../geometries/geom3":36,"../geometries/path2":57,"../geometries/poly3":73,"../maths/vec2":179,"../maths/vec3":210,"../utils/flatten":356}],245:[function(require,module,exports){
const flatten=require("../utils/flatten"),calculateEpsilonFromBounds=require("./calculateEpsilonFromBounds"),{geom2:geom2,geom3:geom3,path2:path2}=require("../geometries"),measureBoundingBox=require("./measureBoundingBox"),measureEpsilonOfPath2=e=>e.epsilon?e.epsilon:(e.epsilon=calculateEpsilonFromBounds(measureBoundingBox(e),2),e.epsilon),measureEpsilonOfGeom2=e=>e.epsilon?e.epsilon:(e.epsilon=calculateEpsilonFromBounds(measureBoundingBox(e),2),e.epsilon),measureEpsilonOfGeom3=e=>e.epsilon?e.epsilon:(e.epsilon=calculateEpsilonFromBounds(measureBoundingBox(e),3),e.epsilon),measureEpsilon=(...e)=>{if(0===(e=flatten(e)).length)throw new Error("wrong number of arguments");const o=e.map(e=>path2.isA(e)?measureEpsilonOfPath2(e):geom2.isA(e)?measureEpsilonOfGeom2(e):geom3.isA(e)?measureEpsilonOfGeom3(e):0);return 1===o.length?o[0]:o};module.exports=measureEpsilon;

},{"../geometries":44,"../utils/flatten":356,"./calculateEpsilonFromBounds":237,"./measureBoundingBox":244}],246:[function(require,module,exports){
const flatten=require("../utils/flatten"),geom2=require("../geometries/geom2"),geom3=require("../geometries/geom3"),path2=require("../geometries/path2"),poly3=require("../geometries/poly3"),measureVolumeOfPath2=()=>0,measureVolumeOfGeom2=()=>0,measureVolumeOfGeom3=e=>{if(e.volume)return e.volume;const o=geom3.toPolygons(e);return e.volume=o.reduce((e,o)=>e+poly3.measureSignedVolume(o),0),e.volume},measureVolume=(...e)=>{if(0===(e=flatten(e)).length)throw new Error("wrong number of arguments");const o=e.map(e=>path2.isA(e)?0:geom2.isA(e)?0:geom3.isA(e)?measureVolumeOfGeom3(e):0);return 1===o.length?o[0]:o};module.exports=measureVolume;

},{"../geometries/geom2":22,"../geometries/geom3":36,"../geometries/path2":57,"../geometries/poly3":73,"../utils/flatten":356}],247:[function(require,module,exports){
const vec2=require("../../maths/vec2"),geom2=require("../../geometries/geom2"),fromFakePolygon=(e,o)=>{if(o.vertices.length<4)return null;const r=[],n=o.vertices.filter((e,o)=>e[2]>0&&(r.push(o),!0));if(2!==n.length)throw new Error("Assertion failed: fromFakePolygon: not enough points found");const t=n.map(o=>{const r=Math.round(o[0]/e)*e+0,n=Math.round(o[1]/e)*e+0;return vec2.fromValues(r,n)});if(vec2.equals(t[0],t[1]))return null;const s=r[1]-r[0];if(1!==s&&3!==s)throw new Error("Assertion failed: fromFakePolygon: unknown index ordering");return 1===s&&t.reverse(),t},fromFakePolygons=(e,o)=>{const r=o.map(o=>fromFakePolygon(e,o)).filter(e=>null!==e);return geom2.create(r)};module.exports=fromFakePolygons;

},{"../../geometries/geom2":22,"../../maths/vec2":179}],248:[function(require,module,exports){
module.exports={intersect:require("./intersect"),subtract:require("./subtract"),union:require("./union")};

},{"./intersect":249,"./subtract":256,"./union":267}],249:[function(require,module,exports){
const flatten=require("../../utils/flatten"),areAllShapesTheSameType=require("../../utils/areAllShapesTheSameType"),geom2=require("../../geometries/geom2"),geom3=require("../../geometries/geom3"),intersectGeom2=require("./intersectGeom2"),intersectGeom3=require("./intersectGeom3"),intersect=(...e)=>{if(0===(e=flatten(e)).length)throw new Error("wrong number of arguments");if(!areAllShapesTheSameType(e))throw new Error("only intersect of the types are supported");const r=e[0];return geom2.isA(r)?intersectGeom2(e):geom3.isA(r)?intersectGeom3(e):r};module.exports=intersect;

},{"../../geometries/geom2":22,"../../geometries/geom3":36,"../../utils/areAllShapesTheSameType":354,"../../utils/flatten":356,"./intersectGeom2":250,"./intersectGeom3":251}],250:[function(require,module,exports){
const flatten=require("../../utils/flatten"),geom3=require("../../geometries/geom3"),measureEpsilon=require("../../measurements/measureEpsilon"),fromFakePolygons=require("./fromFakePolygons"),to3DWalls=require("./to3DWalls"),intersectGeom3=require("./intersectGeom3"),intersect=(...e)=>{const o=(e=flatten(e)).map(e=>to3DWalls({z0:-1,z1:1},e)),r=intersectGeom3(o),t=measureEpsilon(r);return fromFakePolygons(t,geom3.toPolygons(r))};module.exports=intersect;

},{"../../geometries/geom3":36,"../../measurements/measureEpsilon":245,"../../utils/flatten":356,"./fromFakePolygons":247,"./intersectGeom3":251,"./to3DWalls":260}],251:[function(require,module,exports){
const flatten=require("../../utils/flatten"),retessellate=require("./retessellate"),intersectSub=require("./intersectGeom3Sub"),intersect=(...e)=>{let t=(e=flatten(e)).shift();return e.forEach(e=>{t=intersectSub(t,e)}),t=retessellate(t)};module.exports=intersect;

},{"../../utils/flatten":356,"./intersectGeom3Sub":252,"./retessellate":255}],252:[function(require,module,exports){
const geom3=require("../../geometries/geom3"),mayOverlap=require("./mayOverlap"),{Tree:Tree}=require("./trees"),intersectGeom3Sub=(e,o)=>{if(!mayOverlap(e,o))return geom3.create();const r=new Tree(geom3.toPolygons(e)),t=new Tree(geom3.toPolygons(o));r.invert(),t.clipTo(r),t.invert(),r.clipTo(t),t.clipTo(r),r.addPolygons(t.allPolygons()),r.invert();const n=r.allPolygons();return geom3.create(n)};module.exports=intersectGeom3Sub;

},{"../../geometries/geom3":36,"./mayOverlap":253,"./trees":264}],253:[function(require,module,exports){
const{EPS:EPS}=require("../../maths/constants"),measureBoundingBox=require("../../measurements/measureBoundingBox"),mayOverlap=(e,n)=>{if(0===e.polygons.length||0===n.polygons.length)return!1;const o=measureBoundingBox(e),r=o[0],s=o[1],u=measureBoundingBox(n),a=u[0],t=u[1];return!(a[0]-s[0]>EPS)&&(!(r[0]-t[0]>EPS)&&(!(a[1]-s[1]>EPS)&&(!(r[1]-t[1]>EPS)&&(!(a[2]-s[2]>EPS)&&!(r[2]-t[2]>EPS)))))};module.exports=mayOverlap;

},{"../../maths/constants":87,"../../measurements/measureBoundingBox":244}],254:[function(require,module,exports){
const{EPS:EPS}=require("../../maths/constants"),line2=require("../../maths/line2"),vec2=require("../../maths/vec2"),OrthoNormalBasis=require("../../maths/OrthoNormalBasis"),interpolateBetween2DPointsForY=require("../../maths/utils/interpolateBetween2DPointsForY"),{insertSorted:insertSorted,fnNumberSort:fnNumberSort}=require("../../utils"),poly3=require("../../geometries/poly3"),reTesselateCoplanarPolygons=t=>{if(t.length<2)return t;const e=[],o=t.length,n=poly3.plane(t[0]),l=new OrthoNormalBasis(n),i=[],r=[],s={},f={},p={},h=1/EPS*10;for(let e=0;e<o;e++){const o=t[e];let n=[],g=o.vertices.length,c=-1;if(g>0){let t,i;for(let r=0;r<g;r++){let s=l.to2D(o.vertices[r]);const g=Math.floor(s[1]*h);let u;g in p?u=p[g]:g+1 in p?u=p[g+1]:g-1 in p?u=p[g-1]:(u=s[1],p[g]=s[1]),s=vec2.fromValues(s[0],u),n.push(s);const a=s[1];(0===r||a<t)&&(t=a,c=r),(0===r||a>i)&&(i=a),a in f||(f[a]={}),f[a][e]=!0}t>=i?(n=[],g=0,c=-1):(t in s||(s[t]=[]),s[t].push(e))}n.reverse(),c=g-c-1,i.push(n),r.push(c)}const g=[];for(const t in f)g.push(t);g.sort(fnNumberSort);let c=[],u=[];for(let t=0;t<g.length;t++){const o=[],p=g[t],h=Number(p),a=f[p];for(let t=0;t<c.length;++t){const e=c[t],o=e.polygonindex;if(a[o]){const n=i[o],l=n.length;let r=e.leftvertexindex,s=e.rightvertexindex;for(;;){let t=r+1;if(t>=l&&(t=0),n[t][1]!==h)break;r=t}let f=s-1;if(f<0&&(f=l-1),n[f][1]===h&&(s=f),r!==e.leftvertexindex&&r===s)c.splice(t,1),--t;else{e.leftvertexindex=r,e.rightvertexindex=s,e.topleft=n[r],e.topright=n[s];let t=r+1;t>=l&&(t=0),e.bottomleft=n[t];let o=s-1;o<0&&(o=l-1),e.bottomright=n[o]}}}let m;if(t>=g.length-1)c=[],m=null;else{const e=.5*(h+(m=Number(g[t+1]))),o=s[p];for(const t in o){const n=o[t],l=i[n],s=l.length,f=r[n];let p=f;for(;;){let t=p+1;if(t>=s&&(t=0),l[t][1]!==h)break;if(t===f)break;p=t}let g=f;for(;;){let t=g-1;if(t<0&&(t=s-1),l[t][1]!==h)break;if(t===p)break;g=t}let u=p+1;u>=s&&(u=0);let a=g-1;a<0&&(a=s-1);const m={polygonindex:n,leftvertexindex:p,rightvertexindex:g,topleft:l[p],topright:l[g],bottomleft:l[u],bottomright:l[a]};insertSorted(c,m,(t,o)=>{const n=interpolateBetween2DPointsForY(t.topleft,t.bottomleft,e),l=interpolateBetween2DPointsForY(o.topleft,o.bottomleft,e);return n>l?1:n<l?-1:0})}}for(const t in c){const e=c[t];let n=interpolateBetween2DPointsForY(e.topleft,e.bottomleft,h);const l=vec2.fromValues(n,h);n=interpolateBetween2DPointsForY(e.topright,e.bottomright,h);const i=vec2.fromValues(n,h);n=interpolateBetween2DPointsForY(e.topleft,e.bottomleft,m);const r=vec2.fromValues(n,m);n=interpolateBetween2DPointsForY(e.topright,e.bottomright,m);const s=vec2.fromValues(n,m),f={topleft:l,topright:i,bottomleft:r,bottomright:s,leftline:line2.fromPoints(l,r),rightline:line2.fromPoints(s,i)};if(o.length>0){const t=o[o.length-1],e=vec2.distance(f.topleft,t.topright),n=vec2.distance(f.bottomleft,t.bottomright);e<EPS&&n<EPS&&(f.topleft=t.topleft,f.leftline=t.leftline,f.bottomleft=t.bottomleft,o.splice(o.length-1,1))}o.push(f)}if(t>0){const t={},i={};for(let e=0;e<o.length;e++){const n=o[e];for(let e=0;e<u.length;e++)if(!i[e]){const o=u[e];if(vec2.distance(o.bottomleft,n.topleft)<EPS&&vec2.distance(o.bottomright,n.topright)<EPS){i[e]=!0;const l=line2.direction(n.leftline),r=line2.direction(o.leftline),s=l[0]-r[0],f=line2.direction(n.rightline),p=line2.direction(o.rightline),h=f[0]-p[0],g=Math.abs(s)<EPS,c=Math.abs(h)<EPS,u=c||h>=0;(g||s>=0)&&u&&(n.outpolygon=o.outpolygon,n.leftlinecontinues=g,n.rightlinecontinues=c,t[e]=!0);break}}}for(let o=0;o<u.length;o++)if(!t[o]){const t=u[o];t.outpolygon.rightpoints.push(t.bottomright),vec2.distance(t.bottomright,t.bottomleft)>EPS&&t.outpolygon.leftpoints.push(t.bottomleft),t.outpolygon.leftpoints.reverse();const i=t.outpolygon.rightpoints.concat(t.outpolygon.leftpoints).map(t=>l.to3D(t)),r=poly3.fromPointsAndPlane(i,n);e.push(r)}}for(let t=0;t<o.length;t++){const e=o[t];e.outpolygon?(e.leftlinecontinues||e.outpolygon.leftpoints.push(e.topleft),e.rightlinecontinues||e.outpolygon.rightpoints.push(e.topright)):(e.outpolygon={leftpoints:[],rightpoints:[]},e.outpolygon.leftpoints.push(e.topleft),vec2.distance(e.topleft,e.topright)>EPS&&e.outpolygon.rightpoints.push(e.topright))}u=o}return e};module.exports=reTesselateCoplanarPolygons;

},{"../../geometries/poly3":73,"../../maths/OrthoNormalBasis":86,"../../maths/constants":87,"../../maths/line2":97,"../../maths/utils/interpolateBetween2DPointsForY":156,"../../maths/vec2":179,"../../utils":358}],255:[function(require,module,exports){
const geom3=require("../../geometries/geom3"),poly3=require("../../geometries/poly3"),reTesselateCoplanarPolygons=require("./reTesselateCoplanarPolygons"),NEPS=1e-13,aboutEqualNormals=(e,o)=>Math.abs(e[0]-o[0])<=NEPS&&Math.abs(e[1]-o[1])<=NEPS&&Math.abs(e[2]-o[2])<=NEPS,coplanar=(e,o)=>Math.abs(e[3]-o[3])<1.5e-7&&aboutEqualNormals(e,o),retessellate=e=>{if(e.isRetesselated)return e;const o=geom3.toPolygons(e),a=[];o.forEach(e=>{const o=a.find(o=>coplanar(o[0],poly3.plane(e)));if(o){o[1].push(e)}else a.push([poly3.plane(e),[e]])});let s=[];a.forEach(e=>{const o=e[1],a=reTesselateCoplanarPolygons(o);s=s.concat(a)});const l=geom3.create(s);return l.isRetesselated=!0,l};module.exports=retessellate;

},{"../../geometries/geom3":36,"../../geometries/poly3":73,"./reTesselateCoplanarPolygons":254}],256:[function(require,module,exports){
const flatten=require("../../utils/flatten"),areAllShapesTheSameType=require("../../utils/areAllShapesTheSameType"),geom2=require("../../geometries/geom2"),geom3=require("../../geometries/geom3"),subtractGeom2=require("./subtractGeom2"),subtractGeom3=require("./subtractGeom3"),subtract=(...e)=>{if(0===(e=flatten(e)).length)throw new Error("wrong number of arguments");if(!areAllShapesTheSameType(e))throw new Error("only subtract of the types are supported");const r=e[0];return geom2.isA(r)?subtractGeom2(e):geom3.isA(r)?subtractGeom3(e):r};module.exports=subtract;

},{"../../geometries/geom2":22,"../../geometries/geom3":36,"../../utils/areAllShapesTheSameType":354,"../../utils/flatten":356,"./subtractGeom2":257,"./subtractGeom3":258}],257:[function(require,module,exports){
const flatten=require("../../utils/flatten"),geom3=require("../../geometries/geom3"),measureEpsilon=require("../../measurements/measureEpsilon"),fromFakePolygons=require("./fromFakePolygons"),to3DWalls=require("./to3DWalls"),subtractGeom3=require("./subtractGeom3"),subtract=(...e)=>{const o=(e=flatten(e)).map(e=>to3DWalls({z0:-1,z1:1},e)),r=subtractGeom3(o),t=measureEpsilon(r);return fromFakePolygons(t,geom3.toPolygons(r))};module.exports=subtract;

},{"../../geometries/geom3":36,"../../measurements/measureEpsilon":245,"../../utils/flatten":356,"./fromFakePolygons":247,"./subtractGeom3":258,"./to3DWalls":260}],258:[function(require,module,exports){
const flatten=require("../../utils/flatten"),retessellate=require("./retessellate"),subtractSub=require("./subtractGeom3Sub"),subtract=(...t)=>{let e=(t=flatten(t)).shift();return t.forEach(t=>{e=subtractSub(e,t)}),e=retessellate(e)};module.exports=subtract;

},{"../../utils/flatten":356,"./retessellate":255,"./subtractGeom3Sub":259}],259:[function(require,module,exports){
const geom3=require("../../geometries/geom3"),mayOverlap=require("./mayOverlap"),{Tree:Tree}=require("./trees"),subtractGeom3Sub=(e,o)=>{if(!mayOverlap(e,o))return geom3.clone(e);const r=new Tree(geom3.toPolygons(e)),t=new Tree(geom3.toPolygons(o));r.invert(),r.clipTo(t),t.clipTo(r,!0),r.addPolygons(t.allPolygons()),r.invert();const l=r.allPolygons();return geom3.create(l)};module.exports=subtractGeom3Sub;

},{"../../geometries/geom3":36,"./mayOverlap":253,"./trees":264}],260:[function(require,module,exports){
const vec3=require("../../maths/vec3"),geom2=require("../../geometries/geom2"),geom3=require("../../geometries/geom3"),poly3=require("../../geometries/poly3"),to3DWall=(e,o,r)=>{const m=[vec3.fromVec2(r[0],e),vec3.fromVec2(r[1],e),vec3.fromVec2(r[1],o),vec3.fromVec2(r[0],o)];return poly3.fromPoints(m)},to3DWalls=(e,o)=>{const r=geom2.toSides(o).map(o=>to3DWall(e.z0,e.z1,o));return geom3.create(r)};module.exports=to3DWalls;

},{"../../geometries/geom2":22,"../../geometries/geom3":36,"../../geometries/poly3":73,"../../maths/vec3":210}],261:[function(require,module,exports){
const plane=require("../../../maths/plane"),poly3=require("../../../geometries/poly3"),Node=function(e){this.plane=null,this.front=null,this.back=null,this.polygontreenodes=[],this.parent=e};Node.prototype={invert:function(){const e=[this];let o;for(let n=0;n<e.length;n++){(o=e[n]).plane&&(o.plane=plane.flip(o.plane)),o.front&&e.push(o.front),o.back&&e.push(o.back);const t=o.front;o.front=o.back,o.back=t}},clipPolygons:function(e,o){let n,t={node:this,polygontreenodes:e};const l=[];do{if(n=t.node,e=t.polygontreenodes,n.plane){const t=[],p=[],s=o?t:p,r=n.plane,a=e.length;for(let o=0;o<a;o++){const n=e[o];n.isRemoved()||n.splitByPlane(r,s,t,p,t)}n.front&&p.length>0&&l.push({node:n.front,polygontreenodes:p});const i=t.length;if(n.back&&i>0)l.push({node:n.back,polygontreenodes:t});else for(let e=0;e<i;e++)t[e].remove()}t=l.pop()}while(void 0!==t)},clipTo:function(e,o){let n=this;const t=[];do{n.polygontreenodes.length>0&&e.rootnode.clipPolygons(n.polygontreenodes,o),n.front&&t.push(n.front),n.back&&t.push(n.back),n=t.pop()}while(void 0!==n)},addPolygonTreeNodes:function(e){let o={node:this,polygontreenodes:e};const n=[];do{const e=o.node,t=o.polygontreenodes;if(0===t.length){o=n.pop();continue}if(!e.plane){let o=0;const n=t[o=Math.floor(t.length/2)].getPolygon();e.plane=poly3.plane(n)}const l=[],p=[];for(let o=0,n=t.length;o<n;++o)t[o].splitByPlane(e.plane,e.polygontreenodes,p,l,p);l.length>0&&(e.front||(e.front=new Node(e)),n.push({node:e.front,polygontreenodes:l})),p.length>0&&(e.back||(e.back=new Node(e)),n.push({node:e.back,polygontreenodes:p})),o=n.pop()}while(void 0!==o)},getParentPlaneNormals:function(e,o){o>0&&this.parent&&(e.push(this.parent.plane.normal),this.parent.getParentPlaneNormals(e,o-1))}},module.exports=Node;

},{"../../../geometries/poly3":73,"../../../maths/plane":150}],262:[function(require,module,exports){
const{EPS:EPS}=require("../../../maths/constants"),vec3=require("../../../maths/vec3"),poly3=require("../../../geometries/poly3"),splitPolygonByPlane=require("./splitPolygonByPlane"),PolygonTreeNode=function(){this.parent=null,this.children=[],this.polygon=null,this.removed=!1};PolygonTreeNode.prototype={addPolygons:function(e){if(!this.isRootNode())throw new Error("Assertion failed");const n=this;e.forEach(e=>{n.addChild(e)})},remove:function(){if(!this.removed){this.removed=!0;const e=this.parent.children,n=e.indexOf(this);if(n<0)throw new Error("Assertion failed");e.splice(n,1),this.parent.recursivelyInvalidatePolygon()}},isRemoved:function(){return this.removed},isRootNode:function(){return!this.parent},invert:function(){if(!this.isRootNode())throw new Error("Assertion failed");this.invertSub()},getPolygon:function(){if(!this.polygon)throw new Error("Assertion failed");return this.polygon},getPolygons:function(e){let n=[this];const t=[n];let o,i,l,s;for(o=0;o<t.length;++o)for(i=0,l=(n=t[o]).length;i<l;i++)(s=n[i]).polygon?e.push(s.polygon):s.children.length>0&&t.push(s.children)},splitByPlane:function(e,n,t,o,i){if(this.children.length){const l=[this.children];let s,r,h,c,p;for(s=0;s<l.length;s++)for(p=l[s],r=0,h=p.length;r<h;r++)(c=p[r]).children.length>0?l.push(c.children):c._splitByPlane(e,n,t,o,i)}else this._splitByPlane(e,n,t,o,i)},_splitByPlane:function(e,n,t,o,i){const l=this.polygon;if(l){const s=poly3.measureBoundingSphere(l),r=s[1]+EPS,h=s[0],c=vec3.dot(e,h)-e[3];if(c>r)o.push(this);else if(c<-r)i.push(this);else{const s=splitPolygonByPlane(e,l);switch(s.type){case 0:n.push(this);break;case 1:t.push(this);break;case 2:o.push(this);break;case 3:i.push(this);break;case 4:if(s.front){const e=this.addChild(s.front);o.push(e)}if(s.back){const e=this.addChild(s.back);i.push(e)}}}}},addChild:function(e){const n=new PolygonTreeNode;return n.parent=this,n.polygon=e,this.children.push(n),n},invertSub:function(){let e=[this];const n=[e];let t,o,i,l;for(t=0;t<n.length;t++)for(o=0,i=(e=n[t]).length;o<i;o++)(l=e[o]).polygon&&(l.polygon=poly3.invert(l.polygon)),l.children.length>0&&n.push(l.children)},recursivelyInvalidatePolygon:function(){let e=this;for(;e.polygon;)e.polygon=null,e.parent&&(e=e.parent)},clear:function(){let e=[this];const n=[e];for(let t=0;t<n.length;++t){const o=(e=n[t]).length;for(let t=0;t<o;t++){const o=e[t];o.polygon&&(o.polygon=null),o.parent&&(o.parent=null),o.children.length>0&&n.push(o.children),o.children=[]}}},toString:function(){let e="",n=[this];const t=[n];let o,i,l,s;for(o=0;o<t.length;++o){n=t[o];const r=" ".repeat(o);for(i=0,l=n.length;i<l;i++)e+=`${r}PolygonTreeNode (${(s=n[i]).isRootNode()}): ${s.children.length}`,s.polygon?e+=`\n ${r}poly3\n`:e+="\n",s.children.length>0&&t.push(s.children)}return e}},module.exports=PolygonTreeNode;

},{"../../../geometries/poly3":73,"../../../maths/constants":87,"../../../maths/vec3":210,"./splitPolygonByPlane":266}],263:[function(require,module,exports){
const Node=require("./Node"),PolygonTreeNode=require("./PolygonTreeNode"),Tree=function(o){this.polygonTree=new PolygonTreeNode,this.rootnode=new Node(null),o&&this.addPolygons(o)};Tree.prototype={invert:function(){this.polygonTree.invert(),this.rootnode.invert()},clipTo:function(o,e){e=!!e,this.rootnode.clipTo(o,e)},allPolygons:function(){const o=[];return this.polygonTree.getPolygons(o),o},addPolygons:function(o){const e=new Array(o.length);for(let n=0;n<o.length;n++)e[n]=this.polygonTree.addChild(o[n]);this.rootnode.addPolygonTreeNodes(e)},clear:function(){this.polygonTree.clear()},toString:function(){return"Tree: "+this.polygonTree.toString("")}},module.exports=Tree;

},{"./Node":261,"./PolygonTreeNode":262}],264:[function(require,module,exports){
module.exports={Tree:require("./Tree")};

},{"./Tree":263}],265:[function(require,module,exports){
const vec3=require("../../../maths/vec3"),splitLineSegmentByPlane=(e,t,c)=>{const n=vec3.subtract(c,t);let s=(e[3]-vec3.dot(e,t))/vec3.dot(e,n);return Number.isNaN(s)&&(s=0),s>1&&(s=1),s<0&&(s=0),vec3.scale(n,s,n),vec3.add(n,t,n),n};module.exports=splitLineSegmentByPlane;

},{"../../../maths/vec3":210}],266:[function(require,module,exports){
const{EPS:EPS}=require("../../../maths/constants"),plane=require("../../../maths/plane"),vec3=require("../../../maths/vec3"),poly3=require("../../../geometries/poly3"),splitLineSegmentByPlane=require("./splitLineSegmentByPlane"),splitPolygonByPlane=(e,t)=>{const l={type:null,front:null,back:null},n=t.vertices,s=n.length,o=poly3.plane(t);if(plane.equals(o,e))l.type=0;else{let t=!1,p=!1;const i=[],c=-EPS;for(let l=0;l<s;l++){const s=vec3.dot(e,n[l])-e[3],o=s<0;i.push(o),s>EPS&&(t=!0),s<c&&(p=!0)}if(t||p)if(p)if(t){l.type=4;const t=[],p=[];let c=i[0];for(let l=0;l<s;l++){const o=n[l];let r=l+1;r>=s&&(r=0);const a=i[r];if(c===a)c?p.push(o):t.push(o);else{const l=o,s=n[r],i=splitLineSegmentByPlane(e,l,s);c?(p.push(o),p.push(i),t.push(i)):(t.push(o),t.push(i),p.push(i))}c=a}const r=EPS*EPS;if(p.length>=3){let e=p[p.length-1];for(let t=0;t<p.length;t++){const l=p[t];vec3.squaredDistance(l,e)<r&&(p.splice(t,1),t--),e=l}}if(t.length>=3){let e=t[t.length-1];for(let l=0;l<t.length;l++){const n=t[l];vec3.squaredDistance(n,e)<r&&(t.splice(l,1),l--),e=n}}t.length>=3&&(l.front=poly3.fromPointsAndPlane(t,o)),p.length>=3&&(l.back=poly3.fromPointsAndPlane(p,o))}else l.type=3;else l.type=2;else{const t=vec3.dot(e,o);l.type=t>=0?0:1}}return l};module.exports=splitPolygonByPlane;

},{"../../../geometries/poly3":73,"../../../maths/constants":87,"../../../maths/plane":150,"../../../maths/vec3":210,"./splitLineSegmentByPlane":265}],267:[function(require,module,exports){
const flatten=require("../../utils/flatten"),areAllShapesTheSameType=require("../../utils/areAllShapesTheSameType"),geom2=require("../../geometries/geom2"),geom3=require("../../geometries/geom3"),unionGeom2=require("./unionGeom2"),unionGeom3=require("./unionGeom3"),union=(...e)=>{if(0===(e=flatten(e)).length)throw new Error("wrong number of arguments");if(!areAllShapesTheSameType(e))throw new Error("only unions of the same type are supported");const o=e[0];return geom2.isA(o)?unionGeom2(e):geom3.isA(o)?unionGeom3(e):o};module.exports=union;

},{"../../geometries/geom2":22,"../../geometries/geom3":36,"../../utils/areAllShapesTheSameType":354,"../../utils/flatten":356,"./unionGeom2":268,"./unionGeom3":269}],268:[function(require,module,exports){
const flatten=require("../../utils/flatten"),geom3=require("../../geometries/geom3"),measureEpsilon=require("../../measurements/measureEpsilon"),fromFakePolygons=require("./fromFakePolygons"),to3DWalls=require("./to3DWalls"),unionGeom3=require("./unionGeom3"),union=(...e)=>{const o=(e=flatten(e)).map(e=>to3DWalls({z0:-1,z1:1},e)),n=unionGeom3(o),r=measureEpsilon(n);return fromFakePolygons(r,geom3.toPolygons(n))};module.exports=union;

},{"../../geometries/geom3":36,"../../measurements/measureEpsilon":245,"../../utils/flatten":356,"./fromFakePolygons":247,"./to3DWalls":260,"./unionGeom3":269}],269:[function(require,module,exports){
const flatten=require("../../utils/flatten"),retessellate=require("./retessellate"),unionSub=require("./unionGeom3Sub"),union=(...e)=>{let t;for(e=flatten(e),t=1;t<e.length;t+=2)e.push(unionSub(e[t-1],e[t]));let n=e[t-1];return n=retessellate(n)};module.exports=union;

},{"../../utils/flatten":356,"./retessellate":255,"./unionGeom3Sub":270}],270:[function(require,module,exports){
const geom3=require("../../geometries/geom3"),mayOverlap=require("./mayOverlap"),{Tree:Tree}=require("./trees"),unionSub=(e,o)=>{if(!mayOverlap(e,o))return unionForNonIntersecting(e,o);const n=new Tree(geom3.toPolygons(e)),r=new Tree(geom3.toPolygons(o));n.clipTo(r,!1),r.clipTo(n),r.invert(),r.clipTo(n),r.invert();const t=n.allPolygons().concat(r.allPolygons());return geom3.create(t)},unionForNonIntersecting=(e,o)=>{let n=geom3.toPolygons(e);return n=n.concat(geom3.toPolygons(o)),geom3.create(n)};module.exports=unionSub;

},{"../../geometries/geom3":36,"./mayOverlap":253,"./trees":264}],271:[function(require,module,exports){
const flatten=require("../../utils/flatten"),geom2=require("../../geometries/geom2"),geom3=require("../../geometries/geom3"),path2=require("../../geometries/path2"),expandGeom2=require("./expandGeom2"),expandGeom3=require("./expandGeom3"),expandPath2=require("./expandPath2"),expand=(e,...r)=>{if(0===(r=flatten(r)).length)throw new Error("wrong number of arguments");const t=r.map(r=>path2.isA(r)?expandPath2(e,r):geom2.isA(r)?expandGeom2(e,r):geom3.isA(r)?expandGeom3(e,r):r);return 1===t.length?t[0]:t};module.exports=expand;

},{"../../geometries/geom2":22,"../../geometries/geom3":36,"../../geometries/path2":57,"../../utils/flatten":356,"./expandGeom2":272,"./expandGeom3":273,"./expandPath2":274}],272:[function(require,module,exports){
const geom2=require("../../geometries/geom2"),offsetFromPoints=require("./offsetFromPoints"),expandGeom2=(e,o)=>{const{delta:r,corners:s,segments:t}=Object.assign({},{delta:1,corners:"edge",segments:16},e);if("edge"!==s&&"chamfer"!==s&&"round"!==s)throw new Error('corners must be "edge", "chamfer", or "round"');const n=geom2.toOutlines(o).map(o=>offsetFromPoints(e={delta:r,corners:s,closed:!0,segments:t},o)).reduce((e,o)=>e.concat(geom2.toSides(geom2.fromPoints(o))),[]);return geom2.create(n)};module.exports=expandGeom2;

},{"../../geometries/geom2":22,"./offsetFromPoints":279}],273:[function(require,module,exports){
const geom3=require("../../geometries/geom3"),union=require("../booleans/union"),expandShell=require("./expandShell"),expandGeom3=(e,n)=>{const{delta:o,corners:r,segments:t}=Object.assign({},{delta:1,corners:"round",segments:12},e);if("round"!==r)throw new Error('corners must be "round" for 3D geometries');if(0===geom3.toPolygons(n).length)throw new Error("the given geometry cannot be empty");const s=expandShell(e={delta:o,corners:r,segments:t},n);return union(n,s)};module.exports=expandGeom3;

},{"../../geometries/geom3":36,"../booleans/union":267,"./expandShell":275}],274:[function(require,module,exports){
const area=require("../../maths/utils/area"),vec2=require("../../maths/vec2"),geom2=require("../../geometries/geom2"),path2=require("../../geometries/path2"),offsetFromPoints=require("./offsetFromPoints"),createGeometryFromClosedOffsets=e=>{let{external:t,internal:o}=e;area(t)<0?t=t.reverse():o=o.reverse();const r=path2.fromPoints({closed:!0},t),s=path2.fromPoints({closed:!0},o),n=geom2.toSides(geom2.fromPoints(path2.toPoints(r))),a=geom2.toSides(geom2.fromPoints(path2.toPoints(s)));return n.push(...a),geom2.create(n)},createGeometryFromExpandedOpenPath=(e,t,o,r)=>{const{points:s,external:n,internal:a}=e,c=Math.floor(t/2),m=[],i=[];if("round"===o&&c>0){const e=Math.PI/c,t=s[s.length-1],o=vec2.angle(vec2.subtract(n[n.length-1],t)),d=s[0],l=vec2.angle(vec2.subtract(a[0],d));for(let s=1;s<c;s++){let n=o+e*s,a=vec2.add(t,vec2.scale(r,vec2.fromAngleRadians(n)));m.push(a),n=l+e*s,a=vec2.add(d,vec2.scale(r,vec2.fromAngleRadians(n))),i.push(a)}}const d=[];return d.push(...n,...m,...a.reverse(),...i),geom2.fromPoints(d)},expandPath2=(e,t)=>{e=Object.assign({},{delta:1,corners:"edge",segments:16},e);const{delta:o,corners:r,segments:s}=e;if(o<=0)throw new Error("the given delta must be positive for paths");if("edge"!==r&&"chamfer"!==r&&"round"!==r)throw new Error('corners must be "edge", "chamfer", or "round"');const n=t.isClosed,a=path2.toPoints(t);if(0===a.length)throw new Error("the given geometry cannot be empty");const c={points:a,external:offsetFromPoints({delta:o,corners:r,segments:s,closed:n},a),internal:offsetFromPoints({delta:-o,corners:r,segments:s,closed:n},a)};return t.isClosed?createGeometryFromClosedOffsets(c):createGeometryFromExpandedOpenPath(c,s,r,o)};module.exports=expandPath2;

},{"../../geometries/geom2":22,"../../geometries/path2":57,"../../maths/utils/area":153,"../../maths/vec2":179,"./offsetFromPoints":279}],275:[function(require,module,exports){
const{EPS:EPS}=require("../../maths/constants"),mat4=require("../../maths/mat4"),vec3=require("../../maths/vec3"),fnNumberSort=require("../../utils/fnNumberSort"),geom3=require("../../geometries/geom3"),poly3=require("../../geometries/poly3"),sphere=require("../../primitives/sphere"),retessellate=require("../booleans/retessellate"),unionGeom3Sub=require("../booleans/unionGeom3Sub"),extrudePolygon=require("./extrudePolygon"),{center:center}=require("../transforms/center"),mapPlaneToVertex=(e,t,n)=>{const o=e.findIndex(e=>vec3.equals(e[0],t));if(o<0){const o=[t,[n]];return e.push(o),e.length}return e[o][1].push(n),o},mapPlaneToEdge=(e,t,n)=>{const o=e.findIndex(e=>vec3.equals(e[0],t[0])&&vec3.equals(e[1],t[1])||vec3.equals(e[0],t[1])&&vec3.equals(e[1],t[0]));if(o<0){const o=[t,[n]];return e.push(o),e.length}return e[o][1].push(n),o},addUniqueAngle=(e,t)=>{const n=e.findIndex(e=>e===t);return n<0?(e.push(t),e.length):n},expandShell=(e,t)=>{const{delta:n,segments:o}=Object.assign({},{delta:1,segments:12},e);let s=geom3.create();const r=[],l=[];return geom3.toPolygons(t).forEach(e=>{const t=vec3.scale(2*n,poly3.plane(e)),o=poly3.transform(mat4.fromTranslation(vec3.scale(-.5,t)),e),c=extrudePolygon(t,o);s=unionGeom3Sub(s,c);const a=e.vertices;for(let t=0;t<a.length;t++){mapPlaneToVertex(r,a[t],poly3.plane(e));const n=(t+1)%a.length,o=[a[t],a[n]];mapPlaneToEdge(l,o,poly3.plane(e))}}),l.forEach(e=>{const t=e[0],r=e[1],l=t[0],c=t[1],a=vec3.unit(vec3.subtract(c,l)),u=r[0],i=vec3.cross(u,a);let h=[];for(let e=0;e<o;e++)addUniqueAngle(h,e*Math.PI*2/o);for(let e=0,t=r.length;e<t;e++){const t=r[e],n=vec3.dot(i,t),o=vec3.dot(u,t);let s=Math.atan2(n,o);s<0&&(s+=2*Math.PI),addUniqueAngle(h,s),(s=Math.atan2(-n,-o))<0&&(s+=2*Math.PI),addUniqueAngle(h,s)}const m=(h=h.sort(fnNumberSort)).length;let d,p;const g=[],v=[],f=[];for(let e=-1;e<m;e++){const t=h[e<0?e+m:e],o=Math.sin(t),s=Math.cos(t),r=vec3.add(vec3.scale(s*n,u),vec3.scale(o*n,i)),a=vec3.add(l,r),q=vec3.add(c,r);let P=!1;if(e>=0&&vec3.distance(a,d)<EPS&&(P=!0),!P){if(e>=0){g.push(a),v.push(q);const e=[p,q,a,d],t=poly3.fromPoints(e);f.push(t)}d=a,p=q}}v.reverse(),f.push(poly3.fromPoints(g)),f.push(poly3.fromPoints(v));const q=geom3.create(f);s=unionGeom3Sub(s,q)}),r.forEach(e=>{const t=e[0],r=e[1],l=r[0];let c=null,a=0;for(let e=1;e<r.length;e++){const t=r[e],n=vec3.cross(l,t),o=vec3.length(n);o>.05&&o>a&&(a=o,c=t)}c||(c=vec3.orthogonal(l));const u=vec3.unit(vec3.cross(l,c)),i=vec3.cross(u,l),h=center({center:[t[0],t[1],t[2]]},sphere({radius:n,segments:o,axes:[l,u,i]}));s=unionGeom3Sub(s,h)}),s.isCanonicalized=!0,retessellate(s)};module.exports=expandShell;

},{"../../geometries/geom3":36,"../../geometries/poly3":73,"../../maths/constants":87,"../../maths/mat4":133,"../../maths/vec3":210,"../../primitives/sphere":345,"../../utils/fnNumberSort":357,"../booleans/retessellate":255,"../booleans/unionGeom3Sub":270,"../transforms/center":320,"./extrudePolygon":276}],276:[function(require,module,exports){
const mat4=require("../../maths/mat4"),vec3=require("../../maths/vec3"),geom3=require("../../geometries/geom3"),poly3=require("../../geometries/poly3"),extrudePolygon=(e,o)=>{vec3.dot(poly3.plane(o),e)>0&&(o=poly3.invert(o));const r=[o],t=poly3.transform(mat4.fromTranslation(e),o),s=o.vertices.length;for(let e=0;e<s;e++){const i=[],n=e<s-1?e+1:0;i.push(o.vertices[e]),i.push(t.vertices[e]),i.push(t.vertices[n]),i.push(o.vertices[n]);const p=poly3.fromPoints(i);r.push(p)}return r.push(poly3.invert(t)),geom3.create(r)};module.exports=extrudePolygon;

},{"../../geometries/geom3":36,"../../geometries/poly3":73,"../../maths/mat4":133,"../../maths/vec3":210}],277:[function(require,module,exports){
module.exports={expand:require("./expand"),offset:require("./offset")};

},{"./expand":271,"./offset":278}],278:[function(require,module,exports){
const flatten=require("../../utils/flatten"),geom2=require("../../geometries/geom2"),path2=require("../../geometries/path2"),offsetGeom2=require("./offsetGeom2"),offsetPath2=require("./offsetPath2"),offset=(e,...t)=>{if(0===(t=flatten(t)).length)throw new Error("wrong number of arguments");const o=t.map(t=>path2.isA(t)?offsetPath2(e,t):geom2.isA(t)?offsetGeom2(e,t):t);return 1===o.length?o[0]:o};module.exports=offset;

},{"../../geometries/geom2":22,"../../geometries/path2":57,"../../utils/flatten":356,"./offsetGeom2":280,"./offsetPath2":281}],279:[function(require,module,exports){
const{EPS:EPS}=require("../../maths/constants"),intersect=require("../../maths/utils/intersect"),line2=require("../../maths/line2"),vec2=require("../../maths/vec2"),area=require("../../maths/utils/area"),offsetFromPoints=(e,s)=>{let{delta:t,corners:c,closed:n,segments:l}=Object.assign({},{delta:1,corners:"edge",closed:!1,segments:16},e);if(Math.abs(t)<EPS)return s;let a=e.closed?area(s):1;0===a&&(a=1);const o=a>0&&t>=0||a<0&&t<0;t=Math.abs(t);let r=null;const i=[],u=[],f=s.length;for(let e=0;e<f;e++){const c=(e+1)%f,l=s[e],a=s[c],h=o?vec2.normal(vec2.subtract(l,a)):vec2.normal(vec2.subtract(a,l));vec2.normalize(h,h),vec2.scale(h,t,h);const d=vec2.add(l,h),v=vec2.add(a,h),m=[d,v];if(null!=r&&(n||!n&&0!==c)){const e=intersect(r[0],r[1],m[0],m[1]);e?(i.pop(),m[0]=e):u.push({c:l,s0:r,s1:m})}r=[d,v],(0!==c||n)&&(i.push(m[0]),i.push(m[1]))}if(n&&null!=r){const e=i[0],t=i[1],c=intersect(r[0],r[1],e,t);if(c)i[0]=c,i.pop();else{const c=s[0],n=[e,t];u.push({c:c,s0:r,s1:n})}}if("edge"===c&&u.forEach(e=>{const s=line2.fromPoints(e.s0[0],e.s0[1]),t=line2.fromPoints(e.s1[0],e.s1[1]),c=line2.intersectPointOfLines(s,t);if(Number.isFinite(c[0])&&Number.isFinite(c[1])){const s=e.s0[1];let t=i.findIndex(e=>vec2.equals(s,e));t=(t+1)%i.length,i.splice(t,0,c)}else{const s=e.s1[0],t=i.findIndex(e=>vec2.equals(s,e));i.splice(t,1)}}),"round"===c){let e=Math.floor(l/4);u.forEach(s=>{let c=vec2.angle(vec2.subtract(s.s1[0],s.c));if(c-=vec2.angle(vec2.subtract(s.s0[1],s.c)),o&&c<0&&(c+=Math.PI)<0&&(c+=Math.PI),!o&&c>0&&(c-=Math.PI)>0&&(c-=Math.PI),0!==c){const n=c/(e=Math.floor(l*(Math.abs(c)/(2*Math.PI)))),a=vec2.angle(vec2.subtract(s.s0[1],s.c)),o=[];for(let c=1;c<e;c++){const e=a+n*c,l=vec2.add(s.c,vec2.scale(t,vec2.fromAngleRadians(e)));o.push(l)}if(o.length>0){const e=s.s0[1];let t=i.findIndex(s=>vec2.equals(e,s));t=(t+1)%i.length,i.splice(t,0,...o)}}else{const e=s.s1[0],t=i.findIndex(s=>vec2.equals(e,s));i.splice(t,1)}})}return i};module.exports=offsetFromPoints;

},{"../../maths/constants":87,"../../maths/line2":97,"../../maths/utils/area":153,"../../maths/utils/intersect":157,"../../maths/vec2":179}],280:[function(require,module,exports){
const geom2=require("../../geometries/geom2"),poly2=require("../../geometries/poly2"),offsetFromPoints=require("./offsetFromPoints"),offsetGeom2=(e,o)=>{const{delta:r,corners:s,segments:t}=Object.assign({},{delta:1,corners:"edge",segments:0},e);if("edge"!==s&&"chamfer"!==s&&"round"!==s)throw new Error('corners must be "edge", "chamfer", or "round"');const n=geom2.toOutlines(o),m=n.map(o=>{const m=n.reduce((e,r)=>e+poly2.arePointsInside(o,poly2.create(r)),0);return offsetFromPoints(e={delta:m%2==0?r:-r,corners:s,closed:!0,segments:t},o)}).reduce((e,o)=>e.concat(geom2.toSides(geom2.fromPoints(o))),[]);return geom2.create(m)};module.exports=offsetGeom2;

},{"../../geometries/geom2":22,"../../geometries/poly2":67,"./offsetFromPoints":279}],281:[function(require,module,exports){
const path2=require("../../geometries/path2"),offsetFromPoints=require("./offsetFromPoints"),offsetPath2=(e,o)=>{const s={delta:1,corners:"edge",closed:o.isClosed,segments:16},{delta:t,corners:r,closed:n,segments:c}=Object.assign({},s,e);if("edge"!==r&&"chamfer"!==r&&"round"!==r)throw new Error('corners must be "edge", "chamfer", or "round"');const d=offsetFromPoints(e={delta:t,corners:r,closed:n,segments:c},path2.toPoints(o));return path2.fromPoints({closed:n},d)};module.exports=offsetPath2;

},{"../../geometries/path2":57,"./offsetFromPoints":279}],282:[function(require,module,exports){
const mat4=require("../../maths/mat4"),geom2=require("../../geometries/geom2"),geom3=require("../../geometries/geom3"),poly3=require("../../geometries/poly3"),slice=require("./slice"),extrudeWalls=require("./extrudeWalls"),defaultCallback=(e,l,r)=>{let o=null;return geom2.isA(r)&&(o=slice.fromSides(geom2.toSides(r))),poly3.isA(r)&&(o=slice.fromPoints(poly3.toPoints(r))),0===e||1===e?slice.transform(mat4.fromTranslation([0,0,e]),o):null},extrudeFromSlices=(e,l)=>{const r={numberOfSlices:2,isCapped:!0,callback:defaultCallback},{numberOfSlices:o,isCapped:s,callback:t}=Object.assign({},r,e);if(o<2)throw new Error("numberOfSlices must be 2 or more");const c=o-1;let i=null,n=null,a=null,u=[];for(let e=0;e<o;e++){const r=t(e/c,e,l);if(r){if(!slice.isA(r))throw new Error("the callback function must return slice objects");if(0===slice.toEdges(r).length)throw new Error("the callback function must return slices with one or more edges");a&&(u=u.concat(extrudeWalls(a,r))),0===e&&(i=r),e===o-1&&(n=r),a=r}}if(s){const e=slice.toPolygons(n);u=u.concat(e),slice.reverse(i,i);const l=slice.toPolygons(i);u=u.concat(l)}else slice.equals(n,i)||(u=u.concat(extrudeWalls(n,i)));return geom3.create(u)};module.exports=extrudeFromSlices;

},{"../../geometries/geom2":22,"../../geometries/geom3":36,"../../geometries/poly3":73,"../../maths/mat4":133,"./extrudeWalls":289,"./slice":297}],283:[function(require,module,exports){
const flatten=require("../../utils/flatten"),geom2=require("../../geometries/geom2"),extrudeLinearGeom2=require("./extrudeLinearGeom2"),extrudeLinear=(e,...t)=>{const{height:r,twistAngle:n,twistSteps:i}=Object.assign({},{height:1,twistAngle:0,twistSteps:1},e);if(0===(t=flatten(t)).length)throw new Error("wrong number of arguments");e={offset:[0,0,r],twistAngle:n,twistSteps:i};const s=t.map(t=>geom2.isA(t)?extrudeLinearGeom2(e,t):t);return 1===s.length?s[0]:s};module.exports=extrudeLinear;

},{"../../geometries/geom2":22,"../../utils/flatten":356,"./extrudeLinearGeom2":284}],284:[function(require,module,exports){
const mat4=require("../../maths/mat4"),vec3=require("../../maths/vec3"),geom2=require("../../geometries/geom2"),slice=require("./slice"),extrudeFromSlices=require("./extrudeFromSlices"),extrudeGeom2=(e,t)=>{let{offset:r,twistAngle:s,twistSteps:o}=Object.assign({},{offset:[0,0,1],twistAngle:0,twistSteps:12},e);if(o<1)throw new Error("twistSteps must be 1 or more");0===s&&(o=1);const i=vec3.fromArray(r),m=geom2.toSides(t);if(0===m.length)throw new Error("the given geometry cannot be empty");const c=slice.fromSides(m);i[2]<0&&slice.reverse(c,c);return extrudeFromSlices(e={numberOfSlices:o+1,isCapped:!0,callback:(e,t,r)=>{const m=t/o*s,c=vec3.scale(t/o,i),l=mat4.multiply(mat4.fromZRotation(m),mat4.fromTranslation(c));return slice.transform(l,r)}},c)};module.exports=extrudeGeom2;

},{"../../geometries/geom2":22,"../../maths/mat4":133,"../../maths/vec3":210,"./extrudeFromSlices":282,"./slice":297}],285:[function(require,module,exports){
const flatten=require("../../utils/flatten"),geom2=require("../../geometries/geom2"),path2=require("../../geometries/path2"),extrudeRectangularPath2=require("./extrudeRectangularPath2"),extrudeRectangularGeom2=require("./extrudeRectangularGeom2"),extrudeRectangular=(e,...t)=>{const{size:r,height:a}=Object.assign({},{size:1,height:1},e);if(0===(t=flatten(t)).length)throw new Error("wrong number of arguments");if(r<=0)throw new Error("size must be positive");if(a<=0)throw new Error("height must be positive");const u=t.map(t=>path2.isA(t)?extrudeRectangularPath2(e,t):geom2.isA(t)?extrudeRectangularGeom2(e,t):t);return 1===u.length?u[0]:u};module.exports=extrudeRectangular;

},{"../../geometries/geom2":22,"../../geometries/path2":57,"../../utils/flatten":356,"./extrudeRectangularGeom2":286,"./extrudeRectangularPath2":287}],286:[function(require,module,exports){
const{area:area}=require("../../maths/utils"),geom2=require("../../geometries/geom2"),path2=require("../../geometries/path2"),expand=require("../expansions/expand"),extrudeLinearGeom2=require("./extrudeLinearGeom2"),extrudeRectangularGeom2=(e,r)=>{const{size:t,height:o}=Object.assign({},{size:1,height:1},e);e.delta=t,e.offset=[0,0,o];const a=geom2.toOutlines(r);if(0===a.length)throw new Error("the given geometry cannot be empty");const n=a.map(r=>(area(r)<0&&r.reverse(),expand(e,path2.fromPoints({closed:!0},r)))).reduce((e,r)=>e.concat(geom2.toSides(r)),[]),i=geom2.create(n);return extrudeLinearGeom2(e,i)};module.exports=extrudeRectangularGeom2;

},{"../../geometries/geom2":22,"../../geometries/path2":57,"../../maths/utils":155,"../expansions/expand":271,"./extrudeLinearGeom2":284}],287:[function(require,module,exports){
const path2=require("../../geometries/path2"),expand=require("../expansions/expand"),extrudeLinearGeom2=require("./extrudeLinearGeom2"),extrudeRectangularPath2=(e,t)=>{const{size:r,height:n}=Object.assign({},{size:1,height:1},e);if(e.delta=r,e.offset=[0,0,n],0===path2.toPoints(t).length)throw new Error("the given geometry cannot be empty");const a=expand(e,t);return extrudeLinearGeom2(e,a)};module.exports=extrudeRectangularPath2;

},{"../../geometries/path2":57,"../expansions/expand":271,"./extrudeLinearGeom2":284}],288:[function(require,module,exports){
const mat4=require("../../maths/mat4"),{mirrorX:mirrorX}=require("../transforms/mirror"),geom2=require("../../geometries/geom2"),slice=require("./slice"),extrudeFromSlices=require("./extrudeFromSlices"),extrudeRotate=(e,t)=>{const r={segments:12,startAngle:0,angle:2*Math.PI,overflow:"cap"};let{segments:a,startAngle:o,angle:s,overflow:m}=Object.assign({},r,e);if(a<3)throw new Error("segments must be greater then 3");o=Math.abs(o)>2*Math.PI?o%(2*Math.PI):o,s=Math.abs(s)>2*Math.PI?s%(2*Math.PI):s;let n=o+s;if((n=Math.abs(n)>2*Math.PI?n%(2*Math.PI):n)<o){const e=o;o=n,n=e}let h=n-o;if(h<=0&&(h=2*Math.PI),Math.abs(h)<2*Math.PI){const e=2*Math.PI/a;a=Math.floor(Math.abs(h)/e),Math.abs(h)>a*e&&a++}let i=geom2.toSides(t);if(0===i.length)throw new Error("the given geometry cannot be empty");const l=i.filter(e=>e[0][0]<0),g=i.filter(e=>e[0][0]>=0);l.length>0&&g.length>0&&"cap"===m&&(l.length>g.length?(i=i.map(e=>{let t=e[0],r=e[1];return[t=[Math.min(t[0],0),t[1]],r=[Math.min(r[0],0),r[1]]]}),t=geom2.reverse(geom2.create(i)),t=mirrorX(t)):g.length>=l.length&&(i=i.map(e=>{let t=e[0],r=e[1];return[t=[Math.max(t[0],0),t[1]],r=[Math.max(r[0],0),r[1]]]}),t=geom2.create(i)));const c=h/a,M=Math.abs(h)<2*Math.PI,u=slice.fromSides(geom2.toSides(t));slice.reverse(u,u);return extrudeFromSlices(e={numberOfSlices:a+1,isCapped:M,callback:(e,t,r)=>{const a=c*t+o,s=mat4.multiply(mat4.fromZRotation(a),mat4.fromXRotation(Math.PI/2));return slice.transform(s,r)}},u)};module.exports=extrudeRotate;

},{"../../geometries/geom2":22,"../../maths/mat4":133,"../transforms/mirror":322,"./extrudeFromSlices":282,"./slice":297}],289:[function(require,module,exports){
const{EPS:EPS}=require("../../maths/constants"),vec3=require("../../maths/vec3"),poly3=require("../../geometries/poly3"),slice=require("./slice"),gcd=(e,t)=>e===t?e:e<t?gcd(t,e):1===t?1:0===t?e:gcd(t,e%t),lcm=(e,t)=>e*t/gcd(e,t),repartitionEdges=(e,t)=>{const s=e/t.length;if(1===s)return t;const r=vec3.fromValues(s,s,s),o=[];return t.forEach(e=>{const t=vec3.divide(vec3.subtract(e[1],e[0]),r);let c=e[0];for(let e=1;e<=s;++e){const e=vec3.add(c,t);o.push([c,e]),c=e}}),o},EPSAREA=EPS*EPS/2*Math.sin(Math.PI/3),extrudeWalls=(e,t)=>{let s=slice.toEdges(e),r=slice.toEdges(t);if(s.length!==r.length){const e=lcm(s.length,r.length);e!==s.length&&(s=repartitionEdges(e,s)),e!==r.length&&(r=repartitionEdges(e,r))}const o=[];return s.forEach((e,t)=>{const s=r[t],c=poly3.fromPoints([e[0],e[1],s[1]]),n=poly3.measureArea(c);Number.isFinite(n)&&n>EPSAREA&&o.push(c);const i=poly3.fromPoints([e[0],s[1],s[0]]),l=poly3.measureArea(i);Number.isFinite(l)&&l>EPSAREA&&o.push(i)}),o};module.exports=extrudeWalls;

},{"../../geometries/poly3":73,"../../maths/constants":87,"../../maths/vec3":210,"./slice":297}],290:[function(require,module,exports){
module.exports={extrudeFromSlices:require("./extrudeFromSlices"),extrudeLinear:require("./extrudeLinear"),extrudeRectangular:require("./extrudeRectangular"),extrudeRotate:require("./extrudeRotate"),slice:require("./slice")};

},{"./extrudeFromSlices":282,"./extrudeLinear":283,"./extrudeRectangular":285,"./extrudeRotate":288,"./slice":297}],291:[function(require,module,exports){
const plane=require("../../../maths/plane"),vec3=require("../../../maths/vec3"),calculatePlane=e=>{const a=e.edges;if(a.length<3)throw new Error("slices must have 3 or more edges to calculate a plane");const c=a.reduce((e,a)=>vec3.add(e,a[0]),vec3.create());vec3.scale(c,1/a.length,c);let t=[[NaN,NaN,NaN],[NaN,NaN,NaN]],l=0;return a.forEach(e=>{const a=vec3.squaredDistance(c,e[0]);a>l&&(t=e,l=a)}),plane.fromPoints(c,t[0],t[1])};module.exports=calculatePlane;

},{"../../../maths/plane":150,"../../../maths/vec3":210}],292:[function(require,module,exports){
const create=require("./create"),vec3=require("../../../maths/vec3"),clone=(...e)=>{let c,r;return 1===e.length?(c=create(),r=e[0]):(c=e[0],r=e[1]),c.edges=r.edges.map(e=>[vec3.clone(e[0]),vec3.clone(e[1])]),c};module.exports=clone;

},{"../../../maths/vec3":210,"./create":293}],293:[function(require,module,exports){
const create=e=>(e||(e=[]),{edges:e});module.exports=create;

},{}],294:[function(require,module,exports){
const vec3=require("../../../maths/vec3"),equals=(e,s)=>{const r=e.edges,t=s.edges;return r.length===t.length&&r.reduce((e,s,r)=>{const u=t[r],c=vec3.squaredDistance(s[0],u[0]);return e&&c<Number.EPSILON},!0)};module.exports=equals;

},{"../../../maths/vec3":210}],295:[function(require,module,exports){
const vec3=require("../../../maths/vec3"),create=require("./create"),fromPoints=e=>{if(!Array.isArray(e))throw new Error("the given points must be an array");if(e.length<3)throw new Error("the given points must contain THREE or more points");const r=[];let t=e[e.length-1];return e.forEach(e=>{2===e.length&&r.push([vec3.fromVec2(t),vec3.fromVec2(e)]),3===e.length&&r.push([t,e]),t=e}),create(r)};module.exports=fromPoints;

},{"../../../maths/vec3":210,"./create":293}],296:[function(require,module,exports){
const vec3=require("../../../maths/vec3"),create=require("./create"),fromSides=e=>{if(!Array.isArray(e))throw new Error("the given sides must be an array");const r=[];return e.forEach(e=>{r.push([vec3.fromVec2(e[0]),vec3.fromVec2(e[1])])}),create(r)};module.exports=fromSides;

},{"../../../maths/vec3":210,"./create":293}],297:[function(require,module,exports){
module.exports={calculatePlane:require("./calculatePlane"),clone:require("./clone"),create:require("./create"),equals:require("./equals"),fromPoints:require("./fromPoints"),fromSides:require("./fromSides"),isA:require("./isA"),reverse:require("./reverse"),toEdges:require("./toEdges"),toPolygons:require("./toPolygons"),toString:require("./toString"),transform:require("./transform")};

},{"./calculatePlane":291,"./clone":292,"./create":293,"./equals":294,"./fromPoints":295,"./fromSides":296,"./isA":298,"./reverse":299,"./toEdges":300,"./toPolygons":301,"./toString":302,"./transform":303}],298:[function(require,module,exports){
const isA=e=>!!(e&&"object"==typeof e&&"edges"in e&&Array.isArray(e.edges));module.exports=isA;

},{}],299:[function(require,module,exports){
const create=require("./create"),reverse=(...e)=>{let r,t;return 1===e.length?(r=create(),t=e[0]):(r=e[0],t=e[1]),r.edges=t.edges.map(e=>[e[1],e[0]]),r};module.exports=reverse;

},{"./create":293}],300:[function(require,module,exports){
const toEdges=e=>e.edges;module.exports=toEdges;

},{}],301:[function(require,module,exports){
const vec3=require("../../../maths/vec3"),geom3=require("../../../geometries/geom3"),poly3=require("../../../geometries/poly3"),intersectGeom3Sub=require("../../booleans/intersectGeom3Sub"),calculatePlane=require("./calculatePlane"),toPolygon3D=(e,t)=>{const c=[vec3.subtract(t[0],e),vec3.subtract(t[1],e),vec3.add(t[1],e),vec3.add(t[0],e)];return poly3.fromPoints(c)},toPolygons=e=>{const t=calculatePlane(e),c=e.edges,o=c.reduce((e,t)=>vec3.add(e,t[0]),vec3.create());vec3.scale(o,1/c.length,o);let a=[[NaN,NaN,NaN],[NaN,NaN,NaN]],r=0;c.forEach(e=>{const t=vec3.squaredDistance(o,e[0]);t>r&&(a=e,r=t)});const s=vec3.subtract(a[0],o),n=vec3.cross(t,s),l=vec3.add(o,s);vec3.add(l,l,s);const u=vec3.add(o,n);vec3.add(u,u,n);const v=vec3.subtract(o,s);vec3.subtract(v,v,s);const d=vec3.subtract(o,n);vec3.subtract(d,d,n);const g=poly3.fromPoints([l,u,v,d]),m=geom3.create([g]),i=c.map(e=>toPolygon3D(t,e)),b=geom3.create(i),N=intersectGeom3Sub(m,b);let P=geom3.toPolygons(N);return P=P.filter(e=>{const c=vec3.angle(t,poly3.plane(e));return Math.abs(c)<Math.PI/90})};module.exports=toPolygons;

},{"../../../geometries/geom3":36,"../../../geometries/poly3":73,"../../../maths/vec3":210,"../../booleans/intersectGeom3Sub":252,"./calculatePlane":291}],302:[function(require,module,exports){
const vec3=require("../../../maths/vec3"),edgesToString=e=>e.reduce((e,t)=>e+=`[${vec3.toString(t[0])}, ${vec3.toString(t[1])}], `,""),toString=e=>`[${edgesToString(e.edges)}]`;module.exports=toString;

},{"../../../maths/vec3":210}],303:[function(require,module,exports){
const vec3=require("../../../maths/vec3"),create=require("./create"),transform=(e,r)=>{const t=r.edges.map(r=>[vec3.transform(e,r[0]),vec3.transform(e,r[1])]);return create(t)};module.exports=transform;

},{"../../../maths/vec3":210,"./create":293}],304:[function(require,module,exports){
const flatten=require("../../utils/flatten"),areAllShapesTheSameType=require("../../utils/areAllShapesTheSameType"),geom2=require("../../geometries/geom2"),geom3=require("../../geometries/geom3"),path2=require("../../geometries/path2"),hullPath2=require("./hullPath2"),hullGeom2=require("./hullGeom2"),hullGeom3=require("./hullGeom3"),hull=(...e)=>{if(0===(e=flatten(e)).length)throw new Error("wrong number of arguments");if(!areAllShapesTheSameType(e))throw new Error("only hulls of the same type are supported");const l=e[0];return path2.isA(l)?hullPath2(e):geom2.isA(l)?hullGeom2(e):geom3.isA(l)?hullGeom3(e):l};module.exports=hull;

},{"../../geometries/geom2":22,"../../geometries/geom3":36,"../../geometries/path2":57,"../../utils/areAllShapesTheSameType":354,"../../utils/flatten":356,"./hullGeom2":306,"./hullGeom3":307,"./hullPath2":308}],305:[function(require,module,exports){
const flatten=require("../../utils/flatten"),union=require("../booleans/union"),hull=require("./hull"),hullChain=(...n)=>{if((n=flatten(n)).length<2)throw new Error("wrong number of arguments");const e=[];for(let l=1;l<n.length;l++)e.push(hull(n[l-1],n[l]));return union(e)};module.exports=hullChain;

},{"../../utils/flatten":356,"../booleans/union":267,"./hull":304}],306:[function(require,module,exports){
const flatten=require("../../utils/flatten"),geom2=require("../../geometries/geom2"),hullPoints2=require("./hullPoints2"),hullGeom2=(...e)=>{e=flatten(e);const t=[],o=new Map;for(let l=0;l<e.length;l++){const n=geom2.toSides(e[l]);for(let e=0;e<n.length;e++){const l=n[e][0],s=`${l[0]},${l[1]}`;o.has(s)||(t.push(l),o.set(s,!0))}}o.clear();const l=hullPoints2(t);return l.length<3?geom2.create():geom2.fromPoints(l)};module.exports=hullGeom2;

},{"../../geometries/geom2":22,"../../utils/flatten":356,"./hullPoints2":309}],307:[function(require,module,exports){
const flatten=require("../../utils/flatten"),geom3=require("../../geometries/geom3"),poly3=require("../../geometries/poly3"),quickhull=require("./quickhull"),hullGeom3=(...e)=>{if(1===(e=flatten(e)).length)return e[0];const t=[],l=new Map;for(let o=0;o<e.length;++o){const r=geom3.toPolygons(e[o]);for(let e=0;e<r.length;++e){const o=r[e].vertices;for(let e=0;e<o.length;++e){const r=`${o[e]}`;l.has(r)||(t.push(o[e]),l.set(r,!0))}}}l.clear();const o=quickhull(t,{skipTriangulation:!0}).map(e=>{const l=e.map(e=>t[e]);return poly3.create(l)});return geom3.create(o)};module.exports=hullGeom3;

},{"../../geometries/geom3":36,"../../geometries/poly3":73,"../../utils/flatten":356,"./quickhull":317}],308:[function(require,module,exports){
const flatten=require("../../utils/flatten"),vec2=require("../../maths/vec2"),path2=require("../../geometries/path2"),hullPoints2=require("./hullPoints2"),hullPath2=(...t)=>{t=flatten(t);const e=[];t.forEach(t=>{path2.toPoints(t).forEach(t=>{e.findIndex(e=>vec2.equals(e,t))<0&&e.push(t)})});const l=hullPoints2(e);return path2.fromPoints({closed:!0},l)};module.exports=hullPath2;

},{"../../geometries/path2":57,"../../maths/vec2":179,"../../utils/flatten":356,"./hullPoints2":309}],309:[function(require,module,exports){
const vec2=require("../../maths/vec2"),angleBetweenPoints=(e,t)=>Math.atan2(t[1]-e[1],t[0]-e[0]),compareIndex=(e,t)=>e.angle<t.angle?-1:e.angle>t.angle?1:e.distance<t.distance?-1:e.distance>t.distance?1:0,compute=e=>{if(e.length<3)return e;let t=0;e.forEach((n,a)=>{const l=e[t];n[1]===l[1]?n[0]<l[0]&&(t=a):n[1]<l[1]&&(t=a)});const n=[];let a=0,l=0;for(let r=0;r<e.length;r++)r!==t&&((a=angleBetweenPoints(e[t],e[r]))<0&&(a+=Math.PI),l=vec2.squaredDistance(e[t],e[r]),n.push({index:r,angle:a,distance:l}));n.sort((e,t)=>compareIndex(e,t));const r=new Array(e.length+1);let o=2;for(let a=0;a<e.length;a++)a!==t&&(r[o]=n[o-2].index,o++);r[0]=r[e.length],r[1]=t;const s=(t,n,a)=>(e[n][0]-e[t][0])*(e[a][1]-e[t][1])-(e[n][1]-e[t][1])*(e[a][0]-e[t][0]);let c,i=2;for(let t=3;t<=e.length;t++){for(;s(r[i-1],r[i],r[t])<1e-5;)i--;i++,c=r[t],r[t]=r[i],r[i]=c}const g=new Array(i);for(let e=0;e<i;e++)g[e]=r[e+1];return g},hullPoints2=e=>{const t=compute(e);let n=[];return Array.isArray(t)&&(n=t.map(t=>e[t])),n};module.exports=hullPoints2;

},{"../../maths/vec2":179}],310:[function(require,module,exports){
module.exports={hull:require("./hull"),hullChain:require("./hullChain")};

},{"./hull":304,"./hullChain":305}],311:[function(require,module,exports){
const add=require("../../../maths/vec3/add"),clone=require("../../../maths/vec3/clone"),cross=require("../../../maths/vec3/cross"),dot=require("../../../maths/vec3/dot"),length=require("../../../maths/vec3/length"),normalize=require("../../../maths/vec3/normalize"),scale=require("../../../maths/vec3/scale"),subtract=require("../../../maths/vec3/subtract"),HalfEdge=require("./HalfEdge"),VISIBLE=0,NON_CONVEX=1,DELETED=2;class Face{constructor(){this.normal=[],this.centroid=[],this.offset=0,this.outside=null,this.mark=VISIBLE,this.edge=null,this.nVertices=0}getEdge(e){if("number"!=typeof e)throw Error("requires a number");let t=this.edge;for(;e>0;)t=t.next,e-=1;for(;e<0;)t=t.prev,e+=1;return t}computeNormal(){const e=this.edge,t=e.next;let r=t.next;const s=subtract([],t.head().point,e.head().point),o=[],i=[];for(this.nVertices=2,this.normal=[0,0,0];r!==e;)clone(i,s),subtract(s,r.head().point,e.head().point),add(this.normal,this.normal,cross(o,i,s)),r=r.next,this.nVertices+=1;this.area=length(this.normal),this.normal=scale(this.normal,1/this.area,this.normal)}computeNormalMinArea(e){if(this.computeNormal(),this.area<e){let e,t=0,r=this.edge;do{const s=r.lengthSquared();s>t&&(e=r,t=s),r=r.next}while(r!==this.edge);const s=e.tail().point,o=e.head().point,i=subtract([],o,s),n=Math.sqrt(t);scale(i,1/n,i);const a=dot(this.normal,i);scale(i,-a,i),add(this.normal,this.normal,i),normalize(this.normal,this.normal)}}computeCentroid(){this.centroid=[0,0,0];let e=this.edge;do{add(this.centroid,this.centroid,e.head().point),e=e.next}while(e!==this.edge);scale(this.centroid,1/this.nVertices,this.centroid)}computeNormalAndCentroid(e){void 0!==e?this.computeNormalMinArea(e):this.computeNormal(),this.computeCentroid(),this.offset=dot(this.normal,this.centroid)}distanceToPlane(e){return dot(this.normal,e)-this.offset}connectHalfEdges(e,t){let r;if(e.opposite.face===t.opposite.face){const s=t.opposite.face;let o;e===this.edge&&(this.edge=t),3===s.nVertices?(o=t.opposite.prev.opposite,s.mark=DELETED,r=s):(o=t.opposite.next,s.edge===o.prev&&(s.edge=o),o.prev=o.prev.prev,o.prev.next=o),t.prev=e.prev,t.prev.next=t,t.setOpposite(o),s.computeNormalAndCentroid()}else e.next=t,t.prev=e;return r}mergeAdjacentFaces(e,t){const r=e.opposite,s=r.face;t.push(s),s.mark=DELETED;let o,i,n=e.prev,a=e.next,c=r.prev,h=r.next;for(;n.opposite.face===s;)n=n.prev,h=h.next;for(;a.opposite.face===s;)a=a.next,c=c.prev;for(o=h;o!==c.next;o=o.next)o.face=this;return this.edge=a,(i=this.connectHalfEdges(c,a))&&t.push(i),(i=this.connectHalfEdges(n,h))&&t.push(i),this.computeNormalAndCentroid(),t}collectIndices(){const e=[];let t=this.edge;do{e.push(t.head().index),t=t.next}while(t!==this.edge);return e}static createTriangle(e,t,r,s=0){const o=new Face,i=new HalfEdge(e,o),n=new HalfEdge(t,o),a=new HalfEdge(r,o);return i.next=a.prev=n,n.next=i.prev=a,a.next=n.prev=i,o.edge=i,o.computeNormalAndCentroid(s),o}}module.exports={VISIBLE:VISIBLE,NON_CONVEX:1,DELETED:DELETED,Face:Face};

},{"../../../maths/vec3/add":196,"../../../maths/vec3/clone":199,"../../../maths/vec3/cross":201,"../../../maths/vec3/dot":204,"../../../maths/vec3/length":211,"../../../maths/vec3/normalize":217,"../../../maths/vec3/scale":222,"../../../maths/vec3/subtract":225,"./HalfEdge":312}],312:[function(require,module,exports){
const distance=require("../../../maths/vec3/distance"),squaredDistance=require("../../../maths/vec3/squaredDistance");class HalfEdge{constructor(t,e){this.vertex=t,this.face=e,this.next=null,this.prev=null,this.opposite=null}head(){return this.vertex}tail(){return this.prev?this.prev.vertex:null}length(){return this.tail()?distance(this.tail().point,this.head().point):-1}lengthSquared(){return this.tail()?squaredDistance(this.tail().point,this.head().point):-1}setOpposite(t){this.opposite=t,t.opposite=this}}module.exports=HalfEdge;

},{"../../../maths/vec3/distance":202,"../../../maths/vec3/squaredDistance":223}],313:[function(require,module,exports){
const dot=require("../../../maths/vec3/dot"),pointLineDistance=require("./point-line-distance"),getPlaneNormal=require("./get-plane-normal"),VertexList=require("./VertexList"),Vertex=require("./Vertex"),{Face:Face,VISIBLE:VISIBLE,NON_CONVEX:NON_CONVEX,DELETED:DELETED}=require("./Face"),MERGE_NON_CONVEX_WRT_LARGER_FACE=1,MERGE_NON_CONVEX=2;class QuickHull{constructor(e){if(!Array.isArray(e))throw TypeError("input is not a valid array");if(e.length<4)throw Error("cannot build a simplex out of <4 points");this.tolerance=-1,this.nFaces=0,this.nPoints=e.length,this.faces=[],this.newFaces=[],this.claimed=new VertexList,this.unclaimed=new VertexList,this.vertices=[];for(let t=0;t<e.length;t+=1)this.vertices.push(new Vertex(e[t],t));this.discardedFaces=[],this.vertexPointIndices=[]}addVertexToFace(e,t){e.face=t,t.outside?this.claimed.insertBefore(t.outside,e):this.claimed.add(e),t.outside=e}removeVertexFromFace(e,t){e===t.outside&&(e.next&&e.next.face===t?t.outside=e.next:t.outside=null),this.claimed.remove(e)}removeAllVerticesFromFace(e){if(e.outside){let t=e.outside;for(;t.next&&t.next.face===e;)t=t.next;return this.claimed.removeChain(e.outside,t),t.next=null,e.outside}}deleteFaceVertices(e,t){const i=this.removeAllVerticesFromFace(e);if(i)if(t){let e;for(let s=i;s;s=e){e=s.next,t.distanceToPlane(s.point)>this.tolerance?this.addVertexToFace(s,t):this.unclaimed.add(s)}}else this.unclaimed.addAll(i)}resolveUnclaimedPoints(e){let t=this.unclaimed.first();for(let i=t;i;i=t){t=i.next;let s,o=this.tolerance;for(let t=0;t<e.length;t+=1){const a=e[t];if(a.mark===VISIBLE){const e=a.distanceToPlane(i.point);if(e>o&&(o=e,s=a),o>1e3*this.tolerance)break}}s&&this.addVertexToFace(i,s)}}computeExtremes(){const e=[],t=[],i=[],s=[];let o,a;for(o=0;o<3;o+=1)i[o]=s[o]=this.vertices[0];for(o=0;o<3;o+=1)e[o]=t[o]=this.vertices[0].point[o];for(o=1;o<this.vertices.length;o+=1){const c=this.vertices[o],n=c.point;for(a=0;a<3;a+=1)n[a]<e[a]&&(e[a]=n[a],i[a]=c);for(a=0;a<3;a+=1)n[a]>t[a]&&(t[a]=n[a],s[a]=c)}return this.tolerance=3*Number.EPSILON*(Math.max(Math.abs(e[0]),Math.abs(t[0]))+Math.max(Math.abs(e[1]),Math.abs(t[1]))+Math.max(Math.abs(e[2]),Math.abs(t[2]))),[i,s]}createInitialSimplex(){const e=this.vertices,[t,i]=this.computeExtremes();let s,o,a,c,n=0,r=0;for(a=0;a<3;a+=1){const e=i[a].point[a]-t[a].point[a];e>n&&(n=e,r=a)}const l=t[r],h=i[r];for(n=0,a=0;a<this.vertices.length;a+=1){const e=this.vertices[a];if(e!==l&&e!==h){const t=pointLineDistance(e.point,l.point,h.point);t>n&&(n=t,s=e)}}const d=getPlaneNormal([],l.point,h.point,s.point),p=dot(l.point,d);for(n=-1,a=0;a<this.vertices.length;a+=1){const e=this.vertices[a];if(e!==l&&e!==h&&e!==s){const t=Math.abs(dot(d,e.point)-p);t>n&&(n=t,o=e)}}const f=[];if(dot(o.point,d)-p<0)for(f.push(Face.createTriangle(l,h,s),Face.createTriangle(o,h,l),Face.createTriangle(o,s,h),Face.createTriangle(o,l,s)),a=0;a<3;a+=1){const e=(a+1)%3;f[a+1].getEdge(2).setOpposite(f[0].getEdge(e)),f[a+1].getEdge(1).setOpposite(f[e+1].getEdge(0))}else for(f.push(Face.createTriangle(l,s,h),Face.createTriangle(o,l,h),Face.createTriangle(o,h,s),Face.createTriangle(o,s,l)),a=0;a<3;a+=1){const e=(a+1)%3;f[a+1].getEdge(2).setOpposite(f[0].getEdge((3-a)%3)),f[a+1].getEdge(0).setOpposite(f[e+1].getEdge(1))}for(a=0;a<4;a+=1)this.faces.push(f[a]);for(a=0;a<e.length;a+=1){const t=e[a];if(t!==l&&t!==h&&t!==s&&t!==o){let e;for(n=this.tolerance,c=0;c<4;c+=1){const i=f[c].distanceToPlane(t.point);i>n&&(n=i,e=f[c])}e&&this.addVertexToFace(t,e)}}}reindexFaceAndVertices(){const e=[];for(let t=0;t<this.faces.length;t+=1){const i=this.faces[t];i.mark===VISIBLE&&e.push(i)}this.faces=e}collectFaces(e){const t=[];for(let i=0;i<this.faces.length;i+=1){if(this.faces[i].mark!==VISIBLE)throw Error("attempt to include a destroyed face in the hull");const s=this.faces[i].collectIndices();if(e)t.push(s);else for(let e=0;e<s.length-2;e+=1)t.push([s[0],s[e+1],s[e+2]])}return t}nextVertexToAdd(){if(!this.claimed.isEmpty()){let e,t,i=0;const s=this.claimed.first().face;for(t=s.outside;t&&t.face===s;t=t.next){const o=s.distanceToPlane(t.point);o>i&&(i=o,e=t)}return e}}computeHorizon(e,t,i,s){let o;this.deleteFaceVertices(i),i.mark=DELETED,o=t?t.next:t=i.getEdge(0);do{const t=o.opposite,i=t.face;i.mark===VISIBLE&&(i.distanceToPlane(e)>this.tolerance?this.computeHorizon(e,t,i,s):s.push(o)),o=o.next}while(o!==t)}addAdjoiningFace(e,t){const i=Face.createTriangle(e,t.tail(),t.head());return this.faces.push(i),i.getEdge(-1).setOpposite(t.opposite),i.getEdge(0)}addNewFaces(e,t){let i,s;this.newFaces=[];for(let o=0;o<t.length;o+=1){const a=t[o],c=this.addAdjoiningFace(e,a);i?c.next.setOpposite(s):i=c,this.newFaces.push(c.face),s=c}i.next.setOpposite(s)}oppositeFaceDistance(e){return e.face.distanceToPlane(e.opposite.face.centroid)}doAdjacentMerge(e,t){let i=e.edge,s=!0,o=0;do{if(o>=e.nVertices)throw Error("merge recursion limit exceeded");const a=i.opposite.face;let c=!1;if(t===MERGE_NON_CONVEX?(this.oppositeFaceDistance(i)>-this.tolerance||this.oppositeFaceDistance(i.opposite)>-this.tolerance)&&(c=!0):e.area>a.area?this.oppositeFaceDistance(i)>-this.tolerance?c=!0:this.oppositeFaceDistance(i.opposite)>-this.tolerance&&(s=!1):this.oppositeFaceDistance(i.opposite)>-this.tolerance?c=!0:this.oppositeFaceDistance(i)>-this.tolerance&&(s=!1),c){const t=e.mergeAdjacentFaces(i,[]);for(let i=0;i<t.length;i+=1)this.deleteFaceVertices(t[i],e);return!0}i=i.next,o+=1}while(i!==e.edge);return s||(e.mark=NON_CONVEX),!1}addVertexToHull(e){const t=[];this.unclaimed.clear(),this.removeVertexFromFace(e,e.face),this.computeHorizon(e.point,null,e.face,t),this.addNewFaces(e,t);for(let e=0;e<this.newFaces.length;e+=1){const t=this.newFaces[e];if(t.mark===VISIBLE)for(;this.doAdjacentMerge(t,MERGE_NON_CONVEX_WRT_LARGER_FACE););}for(let e=0;e<this.newFaces.length;e+=1){const t=this.newFaces[e];if(t.mark===NON_CONVEX)for(t.mark=VISIBLE;this.doAdjacentMerge(t,MERGE_NON_CONVEX););}this.resolveUnclaimedPoints(this.newFaces)}build(){let e;for(this.createInitialSimplex();e=this.nextVertexToAdd();)this.addVertexToHull(e);this.reindexFaceAndVertices()}}module.exports=QuickHull;

},{"../../../maths/vec3/dot":204,"./Face":311,"./Vertex":314,"./VertexList":315,"./get-plane-normal":316,"./point-line-distance":318}],314:[function(require,module,exports){
class Vertex{constructor(t,e){this.point=t,this.index=e,this.next=null,this.prev=null,this.face=null}}module.exports=Vertex;

},{}],315:[function(require,module,exports){
class VertexList{constructor(){this.head=null,this.tail=null}clear(){this.head=this.tail=null}insertBefore(e,t){t.prev=e.prev,t.next=e,t.prev?t.prev.next=t:this.head=t,e.prev=t}insertAfter(e,t){t.prev=e,t.next=e.next,t.next?t.next.prev=t:this.tail=t,e.next=t}add(e){this.head?this.tail.next=e:this.head=e,e.prev=this.tail,e.next=null,this.tail=e}addAll(e){for(this.head?this.tail.next=e:this.head=e,e.prev=this.tail;e.next;)e=e.next;this.tail=e}remove(e){e.prev?e.prev.next=e.next:this.head=e.next,e.next?e.next.prev=e.prev:this.tail=e.prev}removeChain(e,t){e.prev?e.prev.next=t.next:this.head=t.next,t.next?t.next.prev=e.prev:this.tail=e.prev}first(){return this.head}isEmpty(){return!this.head}}module.exports=VertexList;

},{}],316:[function(require,module,exports){
const cross=require("../../../maths/vec3/cross"),normalize=require("../../../maths/vec3/normalize"),subtract=require("../../../maths/vec3/subtract"),planeNormal=(r,e,s,t)=>{const a=[0,0,0];return subtract(r,e,s),subtract(a,s,t),cross(r,r,a),normalize(r,r)};module.exports=planeNormal;

},{"../../../maths/vec3/cross":201,"../../../maths/vec3/normalize":217,"../../../maths/vec3/subtract":225}],317:[function(require,module,exports){
const QuickHull=require("./QuickHull"),runner=(u,l={})=>{const e=new QuickHull(u);return e.build(),e.collectFaces(l.skipTriangulation)};module.exports=runner;

},{"./QuickHull":313}],318:[function(require,module,exports){
const cross=require("../../../maths/vec3/cross"),subtract=require("../../../maths/vec3/subtract"),squaredLength=require("../../../maths/vec3/squaredLength"),distanceSquared=(e,t,r)=>{const s=[],a=[];subtract(s,r,t),subtract(a,e,t);const n=squaredLength(cross([],a,s)),c=squaredLength(s);if(0===c)throw Error("a and b are the same point");return n/c},pointLineDistance=(e,t,r)=>Math.sqrt(distanceSquared(e,t,r));module.exports=pointLineDistance;

},{"../../../maths/vec3/cross":201,"../../../maths/vec3/squaredLength":224,"../../../maths/vec3/subtract":225}],319:[function(require,module,exports){
const flatten=require("../../utils/flatten"),padArrayToLength=require("../../utils/padArrayToLength"),measureAggregateBoundingBox=require("../../measurements/measureAggregateBoundingBox"),{translate:translate}=require("./translate"),validateOptions=e=>{if(!Array.isArray(e.modes)||e.modes.length>3)throw new Error("align(): modes must be an array of length <= 3");if(e.modes=padArrayToLength(e.modes,"none",3),3!==e.modes.filter(e=>["center","max","min","none"].includes(e)).length)throw new Error('align(): all modes must be one of "center", "max" or "min"');if(!Array.isArray(e.alignTo)||e.alignTo.length>3)throw new Error("align(): alignTo must be an array of length <= 3");if(e.alignTo=padArrayToLength(e.alignTo,0,3),3!==e.alignTo.filter(e=>Number.isFinite(e)||null==e).length)throw new Error("align(): all alignTo values must be a number, or null.");if("boolean"!=typeof e.grouped)throw new Error("align(): grouped must be a boolean value.");return e},populateAlignToFromBounds=(e,r,n)=>{for(let o=0;o<3;o++)null==e[o]&&("center"===r[o]?e[o]=(n[0][o]+n[1][o])/2:"max"===r[o]?e[o]=n[1][o]:"min"===r[o]&&(e[o]=n[0][o]));return e},alignGeometries=(e,r,n)=>{const o=measureAggregateBoundingBox(e),t=[0,0,0];for(let e=0;e<3;e++)"center"===r[e]?t[e]=n[e]-(o[0][e]+o[1][e])/2:"max"===r[e]?t[e]=n[e]-o[1][e]:"min"===r[e]&&(t[e]=n[e]-o[0][e]);return translate(t,e)},align=(e,...r)=>{e=Object.assign({},{modes:["center","center","min"],alignTo:[0,0,0],grouped:!1},e),e=validateOptions(e);let{modes:n,alignTo:o,grouped:t}=e;if(0===(r=flatten(r)).length)throw new Error("align(): No geometries were provided to act upon");if(o.filter(e=>null==e).length){const e=measureAggregateBoundingBox(r);o=populateAlignToFromBounds(o,n,e)}return 1===(r=t?alignGeometries(r,n,o):r.map(e=>alignGeometries(e,n,o))).length?r[0]:r};module.exports=align;

},{"../../measurements/measureAggregateBoundingBox":240,"../../utils/flatten":356,"../../utils/padArrayToLength":360,"./translate":326}],320:[function(require,module,exports){
const flatten=require("../../utils/flatten"),geom2=require("../../geometries/geom2"),geom3=require("../../geometries/geom3"),path2=require("../../geometries/path2"),measureBoundingBox=require("../../measurements/measureBoundingBox"),{translate:translate}=require("./translate"),centerGeometry=(e,r)=>{const{axes:t,center:n}=Object.assign({},{axes:[!0,!0,!0],center:[0,0,0]},e),s=measureBoundingBox(r),a=[0,0,0];return t[0]&&(a[0]=n[0]-(s[0][0]+(s[1][0]-s[0][0])/2)),t[1]&&(a[1]=n[1]-(s[0][1]+(s[1][1]-s[0][1])/2)),t[2]&&(a[2]=n[2]-(s[0][2]+(s[1][2]-s[0][2])/2)),translate(a,r)},center=(e,...r)=>{const{axes:t,center:n}=Object.assign({},{axes:[!0,!0,!0],center:[0,0,0]},e);if(0===(r=flatten(r)).length)throw new Error("wrong number of arguments");if(3!==n.length)throw new Error("center must be an array of length 3");e={axes:t,center:n};const s=r.map(r=>path2.isA(r)?centerGeometry(e,r):geom2.isA(r)?centerGeometry(e,r):geom3.isA(r)?centerGeometry(e,r):r);return 1===s.length?s[0]:s},centerX=(...e)=>center({axes:[!0,!1,!1]},e),centerY=(...e)=>center({axes:[!1,!0,!1]},e),centerZ=(...e)=>center({axes:[!1,!1,!0]},e);module.exports={center:center,centerX:centerX,centerY:centerY,centerZ:centerZ};

},{"../../geometries/geom2":22,"../../geometries/geom3":36,"../../geometries/path2":57,"../../measurements/measureBoundingBox":244,"../../utils/flatten":356,"./translate":326}],321:[function(require,module,exports){
module.exports={align:require("./align"),center:require("./center").center,centerX:require("./center").centerX,centerY:require("./center").centerY,centerZ:require("./center").centerZ,mirror:require("./mirror").mirror,mirrorX:require("./mirror").mirrorX,mirrorY:require("./mirror").mirrorY,mirrorZ:require("./mirror").mirrorZ,rotate:require("./rotate").rotate,rotateX:require("./rotate").rotateX,rotateY:require("./rotate").rotateY,rotateZ:require("./rotate").rotateZ,scale:require("./scale").scale,scaleX:require("./scale").scaleX,scaleY:require("./scale").scaleY,scaleZ:require("./scale").scaleZ,transform:require("./transform"),translate:require("./translate").translate,translateX:require("./translate").translateX,translateY:require("./translate").translateY,translateZ:require("./translate").translateZ};

},{"./align":319,"./center":320,"./mirror":322,"./rotate":323,"./scale":324,"./transform":325,"./translate":326}],322:[function(require,module,exports){
const flatten=require("../../utils/flatten"),mat4=require("../../maths/mat4"),plane=require("../../maths/plane"),geom2=require("../../geometries/geom2"),geom3=require("../../geometries/geom3"),path2=require("../../geometries/path2"),mirror=(r,...o)=>{const{origin:e,normal:m}=Object.assign({},{origin:[0,0,0],normal:[0,0,1]},r);if(0===(o=flatten(o)).length)throw new Error("wrong number of arguments");const i=plane.fromNormalAndPoint(m,e);if(Number.isNaN(i[0]))throw new Error("the given origin and normal do not define a proper plane");const n=mat4.mirrorByPlane(i),t=o.map(r=>path2.isA(r)?path2.transform(n,r):geom2.isA(r)?geom2.transform(n,r):geom3.isA(r)?geom3.transform(n,r):r);return 1===t.length?t[0]:t},mirrorX=(...r)=>mirror({normal:[1,0,0]},r),mirrorY=(...r)=>mirror({normal:[0,1,0]},r),mirrorZ=(...r)=>mirror({normal:[0,0,1]},r);module.exports={mirror:mirror,mirrorX:mirrorX,mirrorY:mirrorY,mirrorZ:mirrorZ};

},{"../../geometries/geom2":22,"../../geometries/geom3":36,"../../geometries/path2":57,"../../maths/mat4":133,"../../maths/plane":150,"../../utils/flatten":356}],323:[function(require,module,exports){
const flatten=require("../../utils/flatten"),mat4=require("../../maths/mat4"),geom2=require("../../geometries/geom2"),geom3=require("../../geometries/geom3"),path2=require("../../geometries/path2"),rotate=(t,...e)=>{if(!Array.isArray(t))throw new Error("angles must be an array");if(0===(e=flatten(e)).length)throw new Error("wrong number of arguments");for(t=t.slice();t.length<3;)t.push(0);const r=t[2],o=t[1],a=t[0],m=mat4.fromTaitBryanRotation(r,o,a),n=e.map(t=>path2.isA(t)?path2.transform(m,t):geom2.isA(t)?geom2.transform(m,t):geom3.isA(t)?geom3.transform(m,t):t);return 1===n.length?n[0]:n},rotateX=(t,...e)=>rotate([t,0,0],e),rotateY=(t,...e)=>rotate([0,t,0],e),rotateZ=(t,...e)=>rotate([0,0,t],e);module.exports={rotate:rotate,rotateX:rotateX,rotateY:rotateY,rotateZ:rotateZ};

},{"../../geometries/geom2":22,"../../geometries/geom3":36,"../../geometries/path2":57,"../../maths/mat4":133,"../../utils/flatten":356}],324:[function(require,module,exports){
const flatten=require("../../utils/flatten"),mat4=require("../../maths/mat4"),geom2=require("../../geometries/geom2"),geom3=require("../../geometries/geom3"),path2=require("../../geometries/path2"),scale=(e,...r)=>{if(!Array.isArray(e))throw new Error("factors must be an array");if(0===(r=flatten(r)).length)throw new Error("wrong number of arguments");for(e=e.slice();e.length<3;)e.push(1);if(e[0]<=0||e[1]<=0||e[2]<=0)throw new Error("factors must be positive");const a=mat4.fromScaling(e),s=r.map(e=>path2.isA(e)?path2.transform(a,e):geom2.isA(e)?geom2.transform(a,e):geom3.isA(e)?geom3.transform(a,e):e);return 1===s.length?s[0]:s},scaleX=(e,...r)=>scale([e,1,1],r),scaleY=(e,...r)=>scale([1,e,1],r),scaleZ=(e,...r)=>scale([1,1,e],r);module.exports={scale:scale,scaleX:scaleX,scaleY:scaleY,scaleZ:scaleZ};

},{"../../geometries/geom2":22,"../../geometries/geom3":36,"../../geometries/path2":57,"../../maths/mat4":133,"../../utils/flatten":356}],325:[function(require,module,exports){
const flatten=require("../../utils/flatten"),geom2=require("../../geometries/geom2"),geom3=require("../../geometries/geom3"),path2=require("../../geometries/path2"),transform=(e,...r)=>{if(0===(r=flatten(r)).length)throw new Error("wrong number of arguments");const t=r.map(r=>path2.isA(r)?path2.transform(e,r):geom2.isA(r)?geom2.transform(e,r):geom3.isA(r)?geom3.transform(e,r):r);return 1===t.length?t[0]:t};module.exports=transform;

},{"../../geometries/geom2":22,"../../geometries/geom3":36,"../../geometries/path2":57,"../../utils/flatten":356}],326:[function(require,module,exports){
const flatten=require("../../utils/flatten"),mat4=require("../../maths/mat4"),geom2=require("../../geometries/geom2"),geom3=require("../../geometries/geom3"),path2=require("../../geometries/path2"),translate=(t,...e)=>{if(!Array.isArray(t))throw new Error("offset must be an array");if(0===(e=flatten(e)).length)throw new Error("wrong number of arguments");for(t=t.slice();t.length<3;)t.push(0);const r=mat4.fromTranslation(t),a=e.map(t=>path2.isA(t)?path2.transform(r,t):geom2.isA(t)?geom2.transform(r,t):geom3.isA(t)?geom3.transform(r,t):t);return 1===a.length?a[0]:a},translateX=(t,...e)=>translate([t,0,0],e),translateY=(t,...e)=>translate([0,t,0],e),translateZ=(t,...e)=>translate([0,0,t],e);module.exports={translate:translate,translateX:translateX,translateY:translateY,translateZ:translateZ};

},{"../../geometries/geom2":22,"../../geometries/geom3":36,"../../geometries/path2":57,"../../maths/mat4":133,"../../utils/flatten":356}],327:[function(require,module,exports){
const{EPS:EPS}=require("../maths/constants"),vec2=require("../maths/vec2"),path2=require("../geometries/path2"),{isGT:isGT,isGTE:isGTE,isNumberArray:isNumberArray}=require("./commonChecks"),arc=e=>{const r={center:[0,0],radius:1,startAngle:0,endAngle:2*Math.PI,makeTangent:!1,segments:32};let{center:t,radius:s,startAngle:a,endAngle:n,makeTangent:o,segments:i}=Object.assign({},r,e);if(!isNumberArray(t,2))throw new Error("center must be an array of X and Y values");if(!isGT(s,0))throw new Error("radius must be greater than zero");if(!isGTE(a,0))throw new Error("startAngle must be positive");if(!isGTE(n,0))throw new Error("endAngle must be positive");if(!isGTE(i,4))throw new Error("segments must be four or more");a%=2*Math.PI,n%=2*Math.PI;let c=2*Math.PI;a<n&&(c=n-a),a>n&&(c=n+(2*Math.PI-a));const m=Math.acos((s*s+s*s-EPS*EPS)/(2*s*s)),h=vec2.fromArray(t);let l;const u=[];if(c<m)l=vec2.scale(s,vec2.fromAngleRadians(a)),vec2.add(l,l,h),u.push(l);else{const e=Math.max(1,Math.floor(i*(c/(2*Math.PI))))+1;let r=.5*e/c;r>.25&&(r=.25);const t=o?e+2:e;for(let n=0;n<=t;n++){let t=n;o&&((t=(n-1)*(e-2*r)/e+r)<0&&(t=0),t>e&&(t=e));const i=a+t*(c/e);l=vec2.scale(s,vec2.fromAngleRadians(i)),vec2.add(l,l,h),u.push(l)}}return path2.fromPoints({close:!1},u)};module.exports=arc;

},{"../geometries/path2":57,"../maths/constants":87,"../maths/vec2":179,"./commonChecks":329}],328:[function(require,module,exports){
const ellipse=require("./ellipse"),{isGT:isGT}=require("./commonChecks"),circle=e=>{const r={center:[0,0],radius:1,startAngle:0,endAngle:2*Math.PI,segments:32};let{center:s,radius:t,startAngle:n,endAngle:i,segments:l}=Object.assign({},r,e);if(!isGT(t,0))throw new Error("radius must be greater than zero");return ellipse({center:s,radius:t=[t,t],startAngle:n,endAngle:i,segments:l})};module.exports=circle;

},{"./commonChecks":329,"./ellipse":334}],329:[function(require,module,exports){
const isNumberArray=(i,r)=>!!(Array.isArray(i)&&i.length>=r)&&i.every(i=>Number.isFinite(i)),isGT=(i,r)=>Number.isFinite(i)&&i>r,isGTE=(i,r)=>Number.isFinite(i)&&i>=r;module.exports={isNumberArray:isNumberArray,isGT:isGT,isGTE:isGTE};

},{}],330:[function(require,module,exports){
const cuboid=require("./cuboid"),{isGT:isGT}=require("./commonChecks"),cube=e=>{let{center:r,size:i}=Object.assign({},{center:[0,0,0],size:2},e);if(!isGT(i,0))throw new Error("size must be greater than zero");return cuboid({center:r,size:i=[i,i,i]})};module.exports=cube;

},{"./commonChecks":329,"./cuboid":331}],331:[function(require,module,exports){
const geom3=require("../geometries/geom3"),poly3=require("../geometries/poly3"),{isNumberArray:isNumberArray}=require("./commonChecks"),cuboid=e=>{const{center:r,size:o}=Object.assign({},{center:[0,0,0],size:[2,2,2]},e);if(!isNumberArray(r,3))throw new Error("center must be an array of X, Y and Z values");if(!isNumberArray(o,3))throw new Error("size must be an array of width, depth and height values");if(!o.every(e=>e>0))throw new Error("size values must be greater than zero");return geom3.create([[[0,4,6,2],[-1,0,0]],[[1,3,7,5],[1,0,0]],[[0,1,5,4],[0,-1,0]],[[2,6,7,3],[0,1,0]],[[0,2,3,1],[0,0,-1]],[[4,5,7,6],[0,0,1]]].map(e=>{const t=e[0].map(e=>{return[r[0]+o[0]/2*(2*!!(1&e)-1),r[1]+o[1]/2*(2*!!(2&e)-1),r[2]+o[2]/2*(2*!!(4&e)-1)]});return poly3.fromPoints(t)}))};module.exports=cuboid;

},{"../geometries/geom3":36,"../geometries/poly3":73,"./commonChecks":329}],332:[function(require,module,exports){
const cylinderElliptic=require("./cylinderElliptic"),{isGT:isGT}=require("./commonChecks"),cylinder=e=>{const{center:i,height:r,radius:t,segments:s}=Object.assign({},{center:[0,0,0],height:2,radius:1,segments:32},e);if(!isGT(t,0))throw new Error("radius must be greater than zero");return cylinderElliptic({center:i,height:r,startRadius:[t,t],endRadius:[t,t],segments:s})};module.exports=cylinder;

},{"./commonChecks":329,"./cylinderElliptic":333}],333:[function(require,module,exports){
const{EPS:EPS}=require("../maths/constants"),vec3=require("../maths/vec3"),geom3=require("../geometries/geom3"),poly3=require("../geometries/poly3"),{isGT:isGT,isGTE:isGTE,isNumberArray:isNumberArray}=require("./commonChecks"),cylinderElliptic=e=>{const r={center:[0,0,0],height:2,startRadius:[1,1],startAngle:0,endRadius:[1,1],endAngle:2*Math.PI,segments:32};let{center:t,height:s,startRadius:a,startAngle:n,endRadius:o,endAngle:i,segments:u}=Object.assign({},r,e);if(!isNumberArray(t,3))throw new Error("center must be an array of X, Y and Z values");if(!isGT(s,0))throw new Error("height must be greater then zero");if(!isNumberArray(a,2))throw new Error("startRadius must be an array of X and Y values");if(!a.every(e=>e>0))throw new Error("startRadius values must be greater than zero");if(!isNumberArray(o,2))throw new Error("endRadius must be an array of X and Y values");if(!o.every(e=>e>0))throw new Error("endRadius values must be greater than zero");if(!isGTE(n,0))throw new Error("startAngle must be positive");if(!isGTE(i,0))throw new Error("endAngle must be positive");if(!isGTE(u,4))throw new Error("segments must be four or more");n%=2*Math.PI,i%=2*Math.PI;let h=2*Math.PI;n<i&&(h=i-n),n>i&&(h=i+(2*Math.PI-n));const c=Math.min(a[0],a[1],o[0],o[1]),d=Math.acos((c*c+c*c-EPS*EPS)/(2*c*c));if(h<d)throw new Error("startAngle and endAngle do not define a significant rotation");const l=Math.floor(u*(h/(2*Math.PI))),m=vec3.fromValues(0,0,-s/2),v=vec3.fromValues(0,0,s/2),g=vec3.subtract(v,m),f=vec3.unit(g),E=vec3.unit(vec3.orthogonal(f)),p=vec3.unit(vec3.cross(f,E)),w=(e,r,t)=>{const s=r*h+n,a=vec3.add(vec3.scale(t[0]*Math.cos(s),E),vec3.scale(t[1]*Math.sin(s),p));return vec3.add(vec3.add(vec3.scale(e,g),m),a)},b=(...e)=>{const r=e.map(e=>vec3.add(e,t));return poly3.fromPoints(r)},y=[];for(let e=0;e<l;e++){const r=e/l,t=(e+1)/l;o[0]===a[0]&&o[1]===a[1]?(y.push(b(m,w(0,t,o),w(0,r,o))),y.push(b(w(0,t,o),w(1,t,o),w(1,r,o),w(0,r,o))),y.push(b(v,w(1,r,o),w(1,t,o)))):(a[0]>0&&(y.push(b(m,w(0,t,a),w(0,r,a))),y.push(b(w(0,r,a),w(0,t,a),w(1,r,o)))),o[0]>0&&(y.push(b(v,w(1,r,o),w(1,t,o))),y.push(b(w(1,r,o),w(0,t,a),w(1,t,o)))))}return h<2*Math.PI&&(y.push(b(m,w(0,0,a),v)),y.push(b(w(0,0,a),w(1,0,o),v)),y.push(b(m,v,w(0,1,a))),y.push(b(w(0,1,a),v,w(1,1,o)))),geom3.create(y)};module.exports=cylinderElliptic;

},{"../geometries/geom3":36,"../geometries/poly3":73,"../maths/constants":87,"../maths/vec3":210,"./commonChecks":329}],334:[function(require,module,exports){
const{EPS:EPS}=require("../maths/constants"),vec2=require("../maths/vec2"),geom2=require("../geometries/geom2"),{isGTE:isGTE,isNumberArray:isNumberArray}=require("./commonChecks"),ellipse=e=>{const r={center:[0,0],radius:[1,1],startAngle:0,endAngle:2*Math.PI,segments:32};let{center:t,radius:s,startAngle:a,endAngle:n,segments:o}=Object.assign({},r,e);if(!isNumberArray(t,2))throw new Error("center must be an array of X and Y values");if(!isNumberArray(s,2))throw new Error("radius must be an array of X and Y values");if(!s.every(e=>e>0))throw new Error("radius values must be greater than zero");if(!isGTE(a,0))throw new Error("startAngle must be positive");if(!isGTE(n,0))throw new Error("endAngle must be positive");if(!isGTE(o,3))throw new Error("segments must be three or more");a%=2*Math.PI,n%=2*Math.PI;let i=2*Math.PI;a<n&&(i=n-a),a>n&&(i=n+(2*Math.PI-a));const h=Math.min(s[0],s[1]);if(i<Math.acos((h*h+h*h-EPS*EPS)/(2*h*h)))throw new Error("startAngle and endAngle do not define a significant rotation");o=Math.floor(o*(i/(2*Math.PI)));const m=vec2.fromArray(t),u=i/o,l=[];o=i<2*Math.PI?o+1:o;for(let e=0;e<o;e++){const r=u*e+a,t=vec2.fromValues(s[0]*Math.cos(r),s[1]*Math.sin(r));vec2.add(t,m,t),l.push(t)}return i<2*Math.PI&&l.push(m),geom2.fromPoints(l)};module.exports=ellipse;

},{"../geometries/geom2":22,"../maths/constants":87,"../maths/vec2":179,"./commonChecks":329}],335:[function(require,module,exports){
const vec3=require("../maths/vec3"),geom3=require("../geometries/geom3"),poly3=require("../geometries/poly3"),{isGTE:isGTE,isNumberArray:isNumberArray}=require("./commonChecks"),ellipsoid=e=>{const{center:c,radius:s,segments:a,axes:r}=Object.assign({},{center:[0,0,0],radius:[1,1,1],segments:32,axes:[[1,0,0],[0,-1,0],[0,0,1]]},e);if(!isNumberArray(c,3))throw new Error("center must be an array of X, Y and Z values");if(!isNumberArray(s,3))throw new Error("radius must be an array of X, Y and Z values");if(!s.every(e=>e>0))throw new Error("radius values must be greater than zero");if(!isGTE(a,4))throw new Error("segments must be four or more");const t=vec3.scale(s[0],vec3.unit(r[0])),v=vec3.scale(s[1],vec3.unit(r[1])),o=vec3.scale(s[2],vec3.unit(r[2])),u=Math.round(a/4);let l;const d=[];for(let e=0;e<=a;e++){const s=2*Math.PI*e/a,r=vec3.add(vec3.scale(Math.cos(s),t),vec3.scale(Math.sin(s),v));if(e>0){let e,s;for(let a=0;a<=u;a++){const t=.5*Math.PI*a/u,v=Math.cos(t),i=Math.sin(t);if(a>0){let t,n=[];t=vec3.subtract(vec3.scale(e,l),vec3.scale(s,o)),n.push(vec3.add(c,t)),t=vec3.subtract(vec3.scale(e,r),vec3.scale(s,o)),n.push(vec3.add(c,t)),a<u&&(t=vec3.subtract(vec3.scale(v,r),vec3.scale(i,o)),n.push(vec3.add(c,t))),t=vec3.subtract(vec3.scale(v,l),vec3.scale(i,o)),n.push(vec3.add(c,t)),d.push(poly3.fromPoints(n)),n=[],t=vec3.add(vec3.scale(e,l),vec3.scale(s,o)),n.push(vec3.add(c,t)),t=vec3.add(vec3.scale(e,r),vec3.scale(s,o)),n.push(vec3.add(c,t)),a<u&&(t=vec3.add(vec3.scale(v,r),vec3.scale(i,o)),n.push(vec3.add(c,t))),t=vec3.add(vec3.scale(v,l),vec3.scale(i,o)),n.push(vec3.add(c,t)),n.reverse(),d.push(poly3.fromPoints(n))}e=v,s=i}}l=r}return geom3.create(d)};module.exports=ellipsoid;

},{"../geometries/geom3":36,"../geometries/poly3":73,"../maths/vec3":210,"./commonChecks":329}],336:[function(require,module,exports){
const mat4=require("../maths/mat4"),geom3=require("../geometries/geom3"),polyhedron=require("./polyhedron"),{isGT:isGT,isGTE:isGTE}=require("./commonChecks"),geodesicSphere=e=>{let{radius:r,frequency:t}=Object.assign({},{radius:1,frequency:6},e);if(!isGT(r,0))throw new Error("radius must be greater than zero");if(!isGTE(t,6))throw new Error("frequency must be six or more");t=Math.floor(t/6);const o=[[.850651,0,-.525731],[.850651,-0,.525731],[-.850651,-0,.525731],[-.850651,0,-.525731],[0,-.525731,.850651],[0,.525731,.850651],[0,.525731,-.850651],[0,-.525731,-.850651],[-.525731,-.850651,-0],[.525731,-.850651,-0],[.525731,.850651,0],[-.525731,.850651,0]],s=[[0,9,1],[1,10,0],[6,7,0],[10,6,0],[7,9,0],[5,1,4],[4,1,9],[5,10,1],[2,8,3],[3,11,2],[2,5,4],[4,8,2],[2,11,5],[3,7,6],[6,11,3],[8,7,3],[9,8,4],[11,10,5],[10,11,6],[8,9,7]],n=(e,r,t)=>{const o=e[0],s=e[1],n=e[2];let c=t;const a=[],f=[];for(let e=0;e<r;e++)for(let t=0;t<r-e;t++){const l=e/r,u=(e+1)/r,h=t/(r-e),m=(t+1)/(r-e),p=r-e-1?t/(r-e-1):1,g=[];g[0]=i(i(o,s,h),n,l),g[1]=i(i(o,s,m),n,l),g[2]=i(i(o,s,p),n,u);for(let e=0;e<3;e++){const r=Math.sqrt(g[e][0]*g[e][0]+g[e][1]*g[e][1]+g[e][2]*g[e][2]);for(let t=0;t<3;t++)g[e][t]/=r}if(a.push(g[0],g[1],g[2]),f.push([c,c+1,c+2]),c+=3,t<r-e-1){const h=r-e-1?(t+1)/(r-e-1):1;g[0]=i(i(o,s,m),n,l),g[1]=i(i(o,s,h),n,u),g[2]=i(i(o,s,p),n,u);for(let e=0;e<3;e++){const r=Math.sqrt(g[e][0]*g[e][0]+g[e][1]*g[e][1]+g[e][2]*g[e][2]);for(let t=0;t<3;t++)g[e][t]/=r}a.push(g[0],g[1],g[2]),f.push([c,c+1,c+2]),c+=3}}return{points:a,triangles:f,offset:c}},i=(e,r,t)=>{const o=1-t,s=[];for(let n=0;n<3;n++)s[n]=e[n]*o+r[n]*t;return s};let c=[],a=[],f=0;for(let e=0;e<s.length;e++){const r=n([o[s[e][0]],o[s[e][1]],o[s[e][2]]],t,f);c=c.concat(r.points),a=a.concat(r.triangles),f=r.offset}let l=polyhedron({points:c,faces:a,orientation:"inward"});return 1!==r&&(l=geom3.transform(mat4.fromScaling([r,r,r]),l)),l};module.exports=geodesicSphere;

},{"../geometries/geom3":36,"../maths/mat4":133,"./commonChecks":329,"./polyhedron":340}],337:[function(require,module,exports){
module.exports={arc:require("./arc"),circle:require("./circle"),cube:require("./cube"),cuboid:require("./cuboid"),cylinder:require("./cylinder"),cylinderElliptic:require("./cylinderElliptic"),ellipse:require("./ellipse"),ellipsoid:require("./ellipsoid"),geodesicSphere:require("./geodesicSphere"),line:require("./line"),polygon:require("./polygon"),polyhedron:require("./polyhedron"),rectangle:require("./rectangle"),roundedCuboid:require("./roundedCuboid"),roundedCylinder:require("./roundedCylinder"),roundedRectangle:require("./roundedRectangle"),sphere:require("./sphere"),square:require("./square"),star:require("./star"),torus:require("./torus")};

},{"./arc":327,"./circle":328,"./cube":330,"./cuboid":331,"./cylinder":332,"./cylinderElliptic":333,"./ellipse":334,"./ellipsoid":335,"./geodesicSphere":336,"./line":338,"./polygon":339,"./polyhedron":340,"./rectangle":341,"./roundedCuboid":342,"./roundedCylinder":343,"./roundedRectangle":344,"./sphere":345,"./square":346,"./star":347,"./torus":348}],338:[function(require,module,exports){
const path2=require("../geometries/path2"),line=r=>{if(!Array.isArray(r))throw new Error("points must be an array");return path2.fromPoints({},r)};module.exports=line;

},{"../geometries/path2":57}],339:[function(require,module,exports){
const geom2=require("../geometries/geom2"),polygon=r=>{const{points:o,paths:t}=Object.assign({},{points:[],paths:[]},r);if(!Array.isArray(o)||!Array.isArray(t))throw new Error("points and paths must be arrays");let a=o;Array.isArray(o[0])&&(Array.isArray(o[0][0])||(a=[o])),a.forEach((r,o)=>{if(!Array.isArray(r))throw new Error("list of points "+o+" must be an array");if(r.length<3)throw new Error("list of points "+o+" must contain three or more points");r.forEach((r,t)=>{if(!Array.isArray(r))throw new Error("list of points "+o+", point "+t+" must be an array");if(r.length<2)throw new Error("list of points "+o+", point "+t+" must contain by X and Y values")})});let s=t;if(0===t.length){let r=0;s=a.map(o=>o.map(o=>r++))}const e=[];a.forEach(r=>r.forEach(r=>e.push(r)));let n=[];return s.forEach(r=>{const o=r.map(r=>e[r]),t=geom2.fromPoints(o);n=n.concat(geom2.toSides(t))}),geom2.create(n)};module.exports=polygon;

},{"../geometries/geom2":22}],340:[function(require,module,exports){
const geom3=require("../geometries/geom3"),poly3=require("../geometries/poly3"),polyhedron=r=>{const e={points:[],faces:[],colors:void 0,orientation:"outward"},{points:o,faces:t,colors:n,orientation:s}=Object.assign({},e,r);if(!Array.isArray(o)||!Array.isArray(t))throw new Error("points and faces must be arrays");if(o.length<3)throw new Error("three or more points are required");if(t.length<1)throw new Error("one or more faces are required");if(n){if(!Array.isArray(n))throw new Error("colors must be an array");if(n.length!==t.length)throw new Error("faces and colors must have the same length")}"outward"!==s&&t.forEach(r=>r.reverse());const a=t.map((r,e)=>{const t=poly3.fromPoints(r.map(r=>o[r]));return n&&n[e]&&(t.color=n[e]),t});return geom3.create(a)};module.exports=polyhedron;

},{"../geometries/geom3":36,"../geometries/poly3":73}],341:[function(require,module,exports){
const vec2=require("../maths/vec2"),geom2=require("../geometries/geom2"),{isNumberArray:isNumberArray}=require("./commonChecks"),rectangle=e=>{const{center:r,size:s}=Object.assign({},{center:[0,0],size:[2,2]},e);if(!isNumberArray(r,2))throw new Error("center must be an array of X and Y values");if(!isNumberArray(s,2))throw new Error("size must be an array of X and Y values");if(!s.every(e=>e>0))throw new Error("size values must be greater than zero");const t=[s[0]/2,s[1]/2],a=[t[0],-t[1]],o=[vec2.subtract(r,t),vec2.add(r,a),vec2.add(r,t),vec2.subtract(r,a)];return geom2.fromPoints(o)};module.exports=rectangle;

},{"../geometries/geom2":22,"../maths/vec2":179,"./commonChecks":329}],342:[function(require,module,exports){
const{EPS:EPS}=require("../maths/constants"),vec2=require("../maths/vec2"),vec3=require("../maths/vec3"),geom3=require("../geometries/geom3"),poly3=require("../geometries/poly3"),{isGT:isGT,isGTE:isGTE,isNumberArray:isNumberArray}=require("./commonChecks"),createCorners=(e,r,t,s,o,n)=>{const a=Math.PI/2*o/s,c=Math.cos(a),i=Math.sin(a),h=s-o;let u=t*c,l=r[2]-(t-t*i);n||(l=t-t*i-r[2]),u=u>EPS?u:0;const m=vec3.add(e,[r[0]-t,r[1]-t,l]),d=vec3.add(e,[t-r[0],r[1]-t,l]),f=vec3.add(e,[t-r[0],t-r[1],l]),v=vec3.add(e,[r[0]-t,t-r[1],l]),p=[],g=[],E=[],P=[];for(let e=0;e<=h;e++){const r=h>0?Math.PI/2*e/h:0,t=vec2.fromAngleRadians(r),s=vec3.fromVec2(vec2.scale(u,t));p.push(vec3.add(m,s)),vec3.rotateZ(s,Math.PI/2,[0,0,0],s),g.push(vec3.add(d,s)),vec3.rotateZ(s,Math.PI/2,[0,0,0],s),E.push(vec3.add(f,s)),vec3.rotateZ(s,Math.PI/2,[0,0,0],s),P.push(vec3.add(v,s))}return n?[p,g,E,P]:(p.reverse(),g.reverse(),E.reverse(),P.reverse(),[P,E,g,p])},stitchCorners=(e,r)=>{const t=[];for(let s=0;s<e.length;s++){const o=e[s],n=r[s];for(let e=0;e<o.length-1;e++)t.push(poly3.fromPoints([o[e],o[e+1],n[e]])),e<n.length-1&&t.push(poly3.fromPoints([n[e],o[e+1],n[e+1]]))}return t},stitchWalls=(e,r)=>{const t=[];for(let s=0;s<e.length;s++){let o=e[s],n=r[s];const a=o[o.length-1],c=n[n.length-1],i=(s+1)%e.length;o=e[i],n=r[i];const h=o[0],u=n[0];t.push(poly3.fromPoints([a,h,u,c]))}return t},stitchSides=(e,r)=>{e=(e=[e[3],e[2],e[1],e[0]]).map(e=>e.slice().reverse());const t=[];e.forEach(e=>{e.forEach(e=>t.push(e))});const s=[];r.forEach(e=>{e.forEach(e=>s.push(e))});const o=[];for(let e=0;e<s.length;e++){const r=(e+1)%s.length;o.push(poly3.fromPoints([t[e],t[r],s[r],s[e]]))}return o},roundedCuboid=e=>{let{center:r,size:t,roundRadius:s,segments:o}=Object.assign({},{center:[0,0,0],size:[2,2,2],roundRadius:.2,segments:32},e);if(!isNumberArray(r,3))throw new Error("center must be an array of X, Y and Z values");if(!isNumberArray(t,3))throw new Error("size must be an array of X, Y and Z values");if(!t.every(e=>e>0))throw new Error("size values must be greater than zero");if(!isGT(s,0))throw new Error("roundRadius must be greater than zero");if(!isGTE(o,4))throw new Error("segments must be four or more");if(s>(t=t.map(e=>e/2))[0]-EPS||s>t[1]-EPS||s>t[2]-EPS)throw new Error("roundRadius must be smaller then the radius of all dimensions");o=Math.floor(o/4);let n=null,a=null,c=[];for(let e=0;e<=o;e++){const i=createCorners(r,t,s,o,e,!0),h=createCorners(r,t,s,o,e,!1);if(0===e&&(c=c.concat(stitchSides(h,i))),n&&(c=c.concat(stitchCorners(n,i),stitchWalls(n,i))),a&&(c=c.concat(stitchCorners(a,h),stitchWalls(a,h))),e===o){let e=i.map(e=>e[0]);c.push(poly3.fromPoints(e)),e=h.map(e=>e[0]),c.push(poly3.fromPoints(e))}n=i,a=h}return geom3.create(c)};module.exports=roundedCuboid;

},{"../geometries/geom3":36,"../geometries/poly3":73,"../maths/constants":87,"../maths/vec2":179,"../maths/vec3":210,"./commonChecks":329}],343:[function(require,module,exports){
const{EPS:EPS}=require("../maths/constants"),vec3=require("../maths/vec3"),geom3=require("../geometries/geom3"),poly3=require("../geometries/poly3"),{isGT:isGT,isGTE:isGTE,isNumberArray:isNumberArray}=require("./commonChecks"),roundedCylinder=e=>{const{center:s,height:c,radius:r,roundRadius:a,segments:t}=Object.assign({},{center:[0,0,0],height:2,radius:1,roundRadius:.2,segments:32},e);if(!isNumberArray(s,3))throw new Error("center must be an array of X, Y and Z values");if(!isGT(c,0))throw new Error("height must be greater then zero");if(!isGT(r,0))throw new Error("radius must be greater then zero");if(!isGT(a,0))throw new Error("roundRadius must be greater then zero");if(a>r-EPS)throw new Error("roundRadius must be smaller then the radius");if(!isGTE(t,4))throw new Error("segments must be four or more");const u=[0,0,-c/2],o=[0,0,c/2],d=vec3.subtract(o,u);if(2*a>vec3.length(d)-EPS)throw new Error("height must be larger than twice roundRadius");let v;v=Math.abs(d[0])>Math.abs(d[1])?vec3.fromValues(0,1,0):vec3.fromValues(1,0,0);const i=vec3.scale(a,vec3.unit(d)),n=vec3.scale(r,vec3.unit(vec3.cross(i,v))),h=vec3.scale(r,vec3.unit(vec3.cross(n,i)));vec3.add(u,u,i),vec3.subtract(o,o,i);const l=Math.floor(.25*t),m=e=>{const c=e.map(e=>vec3.add(e,s));return poly3.fromPoints(c)},p=[];let b;for(let e=0;e<=t;e++){const s=2*Math.PI*e/t,c=vec3.add(vec3.scale(Math.cos(s),n),vec3.scale(Math.sin(s),h));if(e>0){let e,s,r=[];r.push(vec3.add(u,c)),r.push(vec3.add(u,b)),r.push(vec3.add(o,b)),r.push(vec3.add(o,c)),p.push(m(r));for(let a=0;a<=l;a++){const t=.5*Math.PI*a/l,d=Math.cos(t),v=Math.sin(t);if(a>0){let t;r=[],t=vec3.add(u,vec3.subtract(vec3.scale(e,b),vec3.scale(s,i))),r.push(t),t=vec3.add(u,vec3.subtract(vec3.scale(e,c),vec3.scale(s,i))),r.push(t),a<l&&(t=vec3.add(u,vec3.subtract(vec3.scale(d,c),vec3.scale(v,i))),r.push(t)),t=vec3.add(u,vec3.subtract(vec3.scale(d,b),vec3.scale(v,i))),r.push(t),p.push(m(r)),r=[],t=vec3.add(o,vec3.add(vec3.scale(e,b),vec3.scale(s,i))),r.push(t),t=vec3.add(o,vec3.add(vec3.scale(e,c),vec3.scale(s,i))),r.push(t),a<l&&(t=vec3.add(o,vec3.add(vec3.scale(d,c),vec3.scale(v,i))),r.push(t)),t=vec3.add(o,vec3.add(vec3.scale(d,b),vec3.scale(v,i))),r.push(t),r.reverse(),p.push(m(r))}e=d,s=v}}b=c}return geom3.create(p)};module.exports=roundedCylinder;

},{"../geometries/geom3":36,"../geometries/poly3":73,"../maths/constants":87,"../maths/vec3":210,"./commonChecks":329}],344:[function(require,module,exports){
const{EPS:EPS}=require("../maths/constants"),vec2=require("../maths/vec2"),geom2=require("../geometries/geom2"),{isGT:isGT,isGTE:isGTE,isNumberArray:isNumberArray}=require("./commonChecks"),roundedRectangle=e=>{let{center:r,size:s,roundRadius:a,segments:t}=Object.assign({},{center:[0,0],size:[2,2],roundRadius:.2,segments:32},e);if(!isNumberArray(r,2))throw new Error("center must be an array of X and Y values");if(!isNumberArray(s,2))throw new Error("size must be an array of X and Y values");if(!s.every(e=>e>0))throw new Error("size values must be greater than zero");if(!isGT(a,0))throw new Error("roundRadius must be greater than zero");if(!isGTE(t,4))throw new Error("segments must be four or more");if(a>(s=s.map(e=>e/2))[0]-EPS||a>s[1]-EPS)throw new Error("roundRadius must be smaller then the radius of all dimensions");const o=Math.floor(t/4),n=vec2.add(r,[s[0]-a,s[1]-a]),i=vec2.add(r,[a-s[0],s[1]-a]),u=vec2.add(r,[a-s[0],a-s[1]]),d=vec2.add(r,[s[0]-a,a-s[1]]),c=[],m=[],h=[],v=[];for(let e=0;e<=o;e++){const r=Math.PI/2*e/o,s=vec2.fromAngleRadians(r);vec2.scale(s,a,s),c.push(vec2.add(n,s)),vec2.rotate(s,Math.PI/2,s),m.push(vec2.add(i,s)),vec2.rotate(s,Math.PI/2,s),h.push(vec2.add(u,s)),vec2.rotate(s,Math.PI/2,s),v.push(vec2.add(d,s))}return geom2.fromPoints(c.concat(m,h,v))};module.exports=roundedRectangle;

},{"../geometries/geom2":22,"../maths/constants":87,"../maths/vec2":179,"./commonChecks":329}],345:[function(require,module,exports){
const ellipsoid=require("./ellipsoid"),{isGT:isGT}=require("./commonChecks"),sphere=e=>{let{center:s,radius:r,segments:i,axes:t}=Object.assign({},{center:[0,0,0],radius:1,segments:32,axes:[[1,0,0],[0,-1,0],[0,0,1]]},e);if(!isGT(r,0))throw new Error("radius must be greater than zero");return ellipsoid({center:s,radius:r=[r,r,r],segments:i,axes:t})};module.exports=sphere;

},{"./commonChecks":329,"./ellipsoid":335}],346:[function(require,module,exports){
const rectangle=require("./rectangle"),{isGT:isGT}=require("./commonChecks"),square=e=>{let{center:r,size:s}=Object.assign({},{center:[0,0],size:2},e);if(!isGT(s,0))throw new Error("size must be greater than zero");return rectangle({center:r,size:s=[s,s]})};module.exports=square;

},{"./commonChecks":329,"./rectangle":341}],347:[function(require,module,exports){
const vec2=require("../maths/vec2"),geom2=require("../geometries/geom2"),{isGT:isGT,isGTE:isGTE,isNumberArray:isNumberArray}=require("./commonChecks"),getRadiusRatio=(r,e)=>r>0&&e>1&&e<r/2?Math.cos(Math.PI*e/r)/Math.cos(Math.PI*(e-1)/r):0,getPoints=(r,e,t,s)=>{const o=2*Math.PI/r,i=[];for(let a=0;a<r;a++){const r=vec2.fromAngleRadians(o*a+t);vec2.scale(r,e,r),vec2.add(r,s,r),i.push(r)}return i},star=r=>{let{center:e,vertices:t,outerRadius:s,innerRadius:o,density:i,startAngle:a}=Object.assign({},{center:[0,0],vertices:5,outerRadius:1,innerRadius:0,density:2,startAngle:0},r);if(!isNumberArray(e,2))throw new Error("center must be an array of X and Y values");if(!isGTE(t,2))throw new Error("vertices must be two or more");if(!isGT(s,0))throw new Error("outerRadius must be greater than zero");if(!isGTE(o,0))throw new Error("innerRadius must be greater than zero");if(!isGTE(a,0))throw new Error("startAngle must be greater than zero");if(t=Math.floor(t),i=Math.floor(i),a%=2*Math.PI,0===o){if(!isGTE(i,2))throw new Error("density must be two or more");o=s*getRadiusRatio(t,i)}const n=vec2.fromArray(e),u=getPoints(t,s,a,n),h=getPoints(t,o,a+Math.PI/t,n),c=[];for(let r=0;r<t;r++)c.push(u[r]),c.push(h[r]);return geom2.fromPoints(c)};module.exports=star;

},{"../geometries/geom2":22,"../maths/vec2":179,"./commonChecks":329}],348:[function(require,module,exports){
const extrudeRotate=require("../operations/extrusions/extrudeRotate"),{rotate:rotate}=require("../operations/transforms/rotate"),{translate:translate}=require("../operations/transforms/translate"),circle=require("./circle"),{isGT:isGT,isGTE:isGTE}=require("./commonChecks"),torus=e=>{const r={innerRadius:1,innerSegments:32,outerRadius:4,outerSegments:32,innerRotation:0,startAngle:0,outerRotation:2*Math.PI},{innerRadius:t,innerSegments:o,outerRadius:n,outerSegments:s,innerRotation:i,startAngle:a,outerRotation:u}=Object.assign({},r,e);if(!isGT(t,0))throw new Error("innerRadius must be greater than zero");if(!isGTE(o,3))throw new Error("innerSegments must be three or more");if(!isGT(n,0))throw new Error("outerRadius must be greater than zero");if(!isGTE(s,3))throw new Error("outerSegments must be three or more");if(!isGTE(a,0))throw new Error("startAngle must be positive");if(!isGT(u,0))throw new Error("outerRotation must be greater than zero");if(t>=n)throw new Error("inner circle is two large to rotate about the outer circle");let m=circle({radius:t,segments:o});return 0!==i&&(m=rotate([0,0,i],m)),m=translate([n,0],m),extrudeRotate({startAngle:a,angle:u,segments:s},m)};module.exports=torus;

},{"../operations/extrusions/extrudeRotate":288,"../operations/transforms/rotate":323,"../operations/transforms/translate":326,"./circle":328,"./commonChecks":329}],349:[function(require,module,exports){
module.exports={height:14,32:[16],33:[10,5,21,5,7,void 0,5,2,4,1,5,0,6,1,5,2],34:[16,4,21,4,14,void 0,12,21,12,14],35:[21,11,25,4,-7,void 0,17,25,10,-7,void 0,4,12,18,12,void 0,3,6,17,6],36:[20,8,25,8,-4,void 0,12,25,12,-4,void 0,17,18,15,20,12,21,8,21,5,20,3,18,3,16,4,14,5,13,7,12,13,10,15,9,16,8,17,6,17,3,15,1,12,0,8,0,5,1,3,3],37:[24,21,21,3,0,void 0,8,21,10,19,10,17,9,15,7,14,5,14,3,16,3,18,4,20,6,21,8,21,10,20,13,19,16,19,19,20,21,21,void 0,17,7,15,6,14,4,14,2,16,0,18,0,20,1,21,3,21,5,19,7,17,7],38:[26,23,12,23,13,22,14,21,14,20,13,19,11,17,6,15,3,13,1,11,0,7,0,5,1,4,2,3,4,3,6,4,8,5,9,12,13,13,14,14,16,14,18,13,20,11,21,9,20,8,18,8,16,9,13,11,10,16,3,18,1,20,0,22,0,23,1,23,2],39:[10,5,19,4,20,5,21,6,20,6,18,5,16,4,15],40:[14,11,25,9,23,7,20,5,16,4,11,4,7,5,2,7,-2,9,-5,11,-7],41:[14,3,25,5,23,7,20,9,16,10,11,10,7,9,2,7,-2,5,-5,3,-7],42:[16,8,21,8,9,void 0,3,18,13,12,void 0,13,18,3,12],43:[26,13,18,13,0,void 0,4,9,22,9],44:[10,6,1,5,0,4,1,5,2,6,1,6,-1,5,-3,4,-4],45:[26,4,9,22,9],46:[10,5,2,4,1,5,0,6,1,5,2],47:[22,20,25,2,-7],48:[20,9,21,6,20,4,17,3,12,3,9,4,4,6,1,9,0,11,0,14,1,16,4,17,9,17,12,16,17,14,20,11,21,9,21],49:[20,6,17,8,18,11,21,11,0],50:[20,4,16,4,17,5,19,6,20,8,21,12,21,14,20,15,19,16,17,16,15,15,13,13,10,3,0,17,0],51:[20,5,21,16,21,10,13,13,13,15,12,16,11,17,8,17,6,16,3,14,1,11,0,8,0,5,1,4,2,3,4],52:[20,13,21,3,7,18,7,void 0,13,21,13,0],53:[20,15,21,5,21,4,12,5,13,8,14,11,14,14,13,16,11,17,8,17,6,16,3,14,1,11,0,8,0,5,1,4,2,3,4],54:[20,16,18,15,20,12,21,10,21,7,20,5,17,4,12,4,7,5,3,7,1,10,0,11,0,14,1,16,3,17,6,17,7,16,10,14,12,11,13,10,13,7,12,5,10,4,7],55:[20,17,21,7,0,void 0,3,21,17,21],56:[20,8,21,5,20,4,18,4,16,5,14,7,13,11,12,14,11,16,9,17,7,17,4,16,2,15,1,12,0,8,0,5,1,4,2,3,4,3,7,4,9,6,11,9,12,13,13,15,14,16,16,16,18,15,20,12,21,8,21],57:[20,16,14,15,11,13,9,10,8,9,8,6,9,4,11,3,14,3,15,4,18,6,20,9,21,10,21,13,20,15,18,16,14,16,9,15,4,13,1,10,0,8,0,5,1,4,3],58:[10,5,14,4,13,5,12,6,13,5,14,void 0,5,2,4,1,5,0,6,1,5,2],59:[10,5,14,4,13,5,12,6,13,5,14,void 0,6,1,5,0,4,1,5,2,6,1,6,-1,5,-3,4,-4],60:[24,20,18,4,9,20,0],61:[26,4,12,22,12,void 0,4,6,22,6],62:[24,4,18,20,9,4,0],63:[18,3,16,3,17,4,19,5,20,7,21,11,21,13,20,14,19,15,17,15,15,14,13,13,12,9,10,9,7,void 0,9,2,8,1,9,0,10,1,9,2],64:[27,18,13,17,15,15,16,12,16,10,15,9,14,8,11,8,8,9,6,11,5,14,5,16,6,17,8,void 0,12,16,10,14,9,11,9,8,10,6,11,5,void 0,18,16,17,8,17,6,19,5,21,5,23,7,24,10,24,12,23,15,22,17,20,19,18,20,15,21,12,21,9,20,7,19,5,17,4,15,3,12,3,9,4,6,5,4,7,2,9,1,12,0,15,0,18,1,20,2,21,3,void 0,19,16,18,8,18,6,19,5],65:[18,9,21,1,0,void 0,9,21,17,0,void 0,4,7,14,7],66:[21,4,21,4,0,void 0,4,21,13,21,16,20,17,19,18,17,18,15,17,13,16,12,13,11,void 0,4,11,13,11,16,10,17,9,18,7,18,4,17,2,16,1,13,0,4,0],67:[21,18,16,17,18,15,20,13,21,9,21,7,20,5,18,4,16,3,13,3,8,4,5,5,3,7,1,9,0,13,0,15,1,17,3,18,5],68:[21,4,21,4,0,void 0,4,21,11,21,14,20,16,18,17,16,18,13,18,8,17,5,16,3,14,1,11,0,4,0],69:[19,4,21,4,0,void 0,4,21,17,21,void 0,4,11,12,11,void 0,4,0,17,0],70:[18,4,21,4,0,void 0,4,21,17,21,void 0,4,11,12,11],71:[21,18,16,17,18,15,20,13,21,9,21,7,20,5,18,4,16,3,13,3,8,4,5,5,3,7,1,9,0,13,0,15,1,17,3,18,5,18,8,void 0,13,8,18,8],72:[22,4,21,4,0,void 0,18,21,18,0,void 0,4,11,18,11],73:[8,4,21,4,0],74:[16,12,21,12,5,11,2,10,1,8,0,6,0,4,1,3,2,2,5,2,7],75:[21,4,21,4,0,void 0,18,21,4,7,void 0,9,12,18,0],76:[17,4,21,4,0,void 0,4,0,16,0],77:[24,4,21,4,0,void 0,4,21,12,0,void 0,20,21,12,0,void 0,20,21,20,0],78:[22,4,21,4,0,void 0,4,21,18,0,void 0,18,21,18,0],79:[22,9,21,7,20,5,18,4,16,3,13,3,8,4,5,5,3,7,1,9,0,13,0,15,1,17,3,18,5,19,8,19,13,18,16,17,18,15,20,13,21,9,21],80:[21,4,21,4,0,void 0,4,21,13,21,16,20,17,19,18,17,18,14,17,12,16,11,13,10,4,10],81:[22,9,21,7,20,5,18,4,16,3,13,3,8,4,5,5,3,7,1,9,0,13,0,15,1,17,3,18,5,19,8,19,13,18,16,17,18,15,20,13,21,9,21,void 0,12,4,18,-2],82:[21,4,21,4,0,void 0,4,21,13,21,16,20,17,19,18,17,18,15,17,13,16,12,13,11,4,11,void 0,11,11,18,0],83:[20,17,18,15,20,12,21,8,21,5,20,3,18,3,16,4,14,5,13,7,12,13,10,15,9,16,8,17,6,17,3,15,1,12,0,8,0,5,1,3,3],84:[16,8,21,8,0,void 0,1,21,15,21],85:[22,4,21,4,6,5,3,7,1,10,0,12,0,15,1,17,3,18,6,18,21],86:[18,1,21,9,0,void 0,17,21,9,0],87:[24,2,21,7,0,void 0,12,21,7,0,void 0,12,21,17,0,void 0,22,21,17,0],88:[20,3,21,17,0,void 0,17,21,3,0],89:[18,1,21,9,11,9,0,void 0,17,21,9,11],90:[20,17,21,3,0,void 0,3,21,17,21,void 0,3,0,17,0],91:[14,4,25,4,-7,void 0,5,25,5,-7,void 0,4,25,11,25,void 0,4,-7,11,-7],92:[14,0,21,14,-3],93:[14,9,25,9,-7,void 0,10,25,10,-7,void 0,3,25,10,25,void 0,3,-7,10,-7],94:[16,6,15,8,18,10,15,void 0,3,12,8,17,13,12,void 0,8,17,8,0],95:[16,0,-2,16,-2],96:[10,6,21,5,20,4,18,4,16,5,15,6,16,5,17],97:[19,15,14,15,0,void 0,15,11,13,13,11,14,8,14,6,13,4,11,3,8,3,6,4,3,6,1,8,0,11,0,13,1,15,3],98:[19,4,21,4,0,void 0,4,11,6,13,8,14,11,14,13,13,15,11,16,8,16,6,15,3,13,1,11,0,8,0,6,1,4,3],99:[18,15,11,13,13,11,14,8,14,6,13,4,11,3,8,3,6,4,3,6,1,8,0,11,0,13,1,15,3],100:[19,15,21,15,0,void 0,15,11,13,13,11,14,8,14,6,13,4,11,3,8,3,6,4,3,6,1,8,0,11,0,13,1,15,3],101:[18,3,8,15,8,15,10,14,12,13,13,11,14,8,14,6,13,4,11,3,8,3,6,4,3,6,1,8,0,11,0,13,1,15,3],102:[12,10,21,8,21,6,20,5,17,5,0,void 0,2,14,9,14],103:[19,15,14,15,-2,14,-5,13,-6,11,-7,8,-7,6,-6,void 0,15,11,13,13,11,14,8,14,6,13,4,11,3,8,3,6,4,3,6,1,8,0,11,0,13,1,15,3],104:[19,4,21,4,0,void 0,4,10,7,13,9,14,12,14,14,13,15,10,15,0],105:[8,3,21,4,20,5,21,4,22,3,21,void 0,4,14,4,0],106:[10,5,21,6,20,7,21,6,22,5,21,void 0,6,14,6,-3,5,-6,3,-7,1,-7],107:[17,4,21,4,0,void 0,14,14,4,4,void 0,8,8,15,0],108:[8,4,21,4,0],109:[30,4,14,4,0,void 0,4,10,7,13,9,14,12,14,14,13,15,10,15,0,void 0,15,10,18,13,20,14,23,14,25,13,26,10,26,0],110:[19,4,14,4,0,void 0,4,10,7,13,9,14,12,14,14,13,15,10,15,0],111:[19,8,14,6,13,4,11,3,8,3,6,4,3,6,1,8,0,11,0,13,1,15,3,16,6,16,8,15,11,13,13,11,14,8,14],112:[19,4,14,4,-7,void 0,4,11,6,13,8,14,11,14,13,13,15,11,16,8,16,6,15,3,13,1,11,0,8,0,6,1,4,3],113:[19,15,14,15,-7,void 0,15,11,13,13,11,14,8,14,6,13,4,11,3,8,3,6,4,3,6,1,8,0,11,0,13,1,15,3],114:[13,4,14,4,0,void 0,4,8,5,11,7,13,9,14,12,14],115:[17,14,11,13,13,10,14,7,14,4,13,3,11,4,9,6,8,11,7,13,6,14,4,14,3,13,1,10,0,7,0,4,1,3,3],116:[12,5,21,5,4,6,1,8,0,10,0,void 0,2,14,9,14],117:[19,4,14,4,4,5,1,7,0,10,0,12,1,15,4,void 0,15,14,15,0],118:[16,2,14,8,0,void 0,14,14,8,0],119:[22,3,14,7,0,void 0,11,14,7,0,void 0,11,14,15,0,void 0,19,14,15,0],120:[17,3,14,14,0,void 0,14,14,3,0],121:[16,2,14,8,0,void 0,14,14,8,0,6,-4,4,-6,2,-7,1,-7],122:[17,14,14,3,0,void 0,3,14,14,14,void 0,3,0,14,0],123:[14,9,25,7,24,6,23,5,21,5,19,6,17,7,16,8,14,8,12,6,10,void 0,7,24,6,22,6,20,7,18,8,17,9,15,9,13,8,11,4,9,8,7,9,5,9,3,8,1,7,0,6,-2,6,-4,7,-6,void 0,6,8,8,6,8,4,7,2,6,1,5,-1,5,-3,6,-5,7,-6,9,-7],124:[8,4,25,4,-7],125:[14,5,25,7,24,8,23,9,21,9,19,8,17,7,16,6,14,6,12,8,10,void 0,7,24,8,22,8,20,7,18,6,17,5,15,5,13,6,11,10,9,6,7,5,5,5,3,6,1,7,0,8,-2,8,-4,7,-6,void 0,8,8,6,6,6,4,7,2,8,1,9,-1,9,-3,8,-5,7,-6,5,-7],126:[24,3,6,3,8,4,11,6,12,8,12,10,11,14,8,16,7,18,7,20,8,21,10,void 0,3,8,4,10,6,11,8,11,10,10,14,7,16,6,18,6,20,7,21,10,21,12]};

},{}],350:[function(require,module,exports){
module.exports={vectorChar:require("./vectorChar"),vectorText:require("./vectorText")};

},{"./vectorChar":351,"./vectorText":353}],351:[function(require,module,exports){
const vectorParams=require("./vectorParams"),vectorChar=(t,e)=>{const{xOffset:r,yOffset:s,input:h,font:o,height:c,extrudeOffset:n}=vectorParams(t,e);let a=h.charCodeAt(0);a&&o[a]||(a=63);const f=[].concat(o[a]),i=(c-n)/o.height,u=n/2,g=f.shift()*i,l=[];let v=[];for(let t=0,e=f.length;t<e;t+=2){const e=i*f[t]+r,h=i*f[t+1]+s+u;void 0===f[t]?(l.push(v),v=[],t--):v.push([e,h])}return v.length&&l.push(v),{width:g,height:c,segments:l}};module.exports=vectorChar;

},{"./vectorParams":352}],352:[function(require,module,exports){
const defaultFont=require("./fonts/single-line/hershey/simplex.js"),defaultsVectorParams={xOffset:0,yOffset:0,input:"?",align:"left",font:defaultFont,height:14,lineSpacing:2.142857142857143,letterSpacing:1,extrudeOffset:0},vectorParams=(t,e)=>{e||"string"!=typeof t||(t={input:t}),t=t||{};const s=Object.assign({},defaultsVectorParams,t);return s.input=e||s.input,s};module.exports=vectorParams;

},{"./fonts/single-line/hershey/simplex.js":349}],353:[function(require,module,exports){
const vectorChar=require("./vectorChar"),vectorParams=require("./vectorParams"),translateLine=(t,e)=>{const{x:n,y:s}=Object.assign({x:0,y:0},t||{}),r=e.segments;let h=null,a=null;for(let t=0,e=r.length;t<e;t++)for(let e=0,o=(h=r[t]).length;e<o;e++)a=h[e],h[e]=[a[0]+n,a[1]+s];return e},vectorText=(t,e)=>{const{xOffset:n,yOffset:s,input:r,font:h,height:a,align:o,extrudeOffset:i,lineSpacing:c,letterSpacing:g}=vectorParams(t,e);let[l,f]=[n,s],[m,x,u,d,v,w]=[],O={width:0,segments:[]};const p=[];let y=[],C=0;const L=l,P=()=>{p.push(O),C=Math.max(C,O.width),O={width:0,segments:[]}};for(m=0,x=r.length;m<x;m++)u=r[m],d=vectorChar({xOffset:l,yOffset:f,font:h,height:a,extrudeOffset:i},u),"\n"!==u?(v=d.width*g,O.width+=v,l+=v," "!==u&&(O.segments=O.segments.concat(d.segments))):(l=L,f-=d.height*c,P());for(O.segments.length&&P(),m=0,x=p.length;m<x;m++)O=p[m],C>O.width&&(w=C-O.width,"right"===o?O=translateLine({x:w},O):"center"===o&&(O=translateLine({x:w/2},O))),y=y.concat(O.segments);return y};module.exports=vectorText;

},{"./vectorChar":351,"./vectorParams":352}],354:[function(require,module,exports){
const geom2=require("../geometries/geom2"),geom3=require("../geometries/geom3"),path2=require("../geometries/path2"),areAllShapesTheSameType=e=>{let r;return e.forEach(e=>{let o=0;if(geom2.isA(e)&&(o=1),geom3.isA(e)&&(o=2),path2.isA(e)&&(o=3),r&&o!==r)return!1;r=o}),!0};module.exports=areAllShapesTheSameType;

},{"../geometries/geom2":22,"../geometries/geom3":36,"../geometries/path2":57}],355:[function(require,module,exports){
const degToRad=d=>.017453292519943295*d;module.exports=degToRad;

},{}],356:[function(require,module,exports){
const flatten=t=>t.reduce((t,a)=>Array.isArray(a)?t.concat(flatten(a)):t.concat(a),[]);module.exports=flatten;

},{}],357:[function(require,module,exports){
const fnNumberSort=(o,r)=>o-r;module.exports=fnNumberSort;

},{}],358:[function(require,module,exports){
module.exports={areAllShapesTheSameType:require("./areAllShapesTheSameType"),degToRad:require("./degToRad"),flatten:require("./flatten"),fnNumberSort:require("./fnNumberSort"),insertSorted:require("./insertSorted"),radiusToSegments:require("./radiusToSegments"),radToDeg:require("./radToDeg")};

},{"./areAllShapesTheSameType":354,"./degToRad":355,"./flatten":356,"./fnNumberSort":357,"./insertSorted":359,"./radToDeg":361,"./radiusToSegments":362}],359:[function(require,module,exports){
const insertSorted=(t,e,o)=>{let r=0,s=t.length;for(;s>r;){const l=Math.floor((r+s)/2);o(e,t[l])>0?r=l+1:s=l}t.splice(r,0,e)};module.exports=insertSorted;

},{}],360:[function(require,module,exports){
const padArrayToLength=(r,e,o)=>{for(r=r.slice();r.length<o;)r.push(e);return r};module.exports=padArrayToLength;

},{}],361:[function(require,module,exports){
const radToDeg=o=>57.29577951308232*o;module.exports=radToDeg;

},{}],362:[function(require,module,exports){
const radiusToSegments=(t,e,a)=>{const s=e>0?2*t*Math.PI/e:0,o=a>0?2*Math.PI/a:0;return Math.ceil(Math.max(s,o,4))};module.exports=radiusToSegments;

},{}]},{},[85])(85)
});
