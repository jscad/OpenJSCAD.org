{
  "name": "@jscad/openjscad",
  "version": "2.0.0",
  "description": "",
  "repository": "https://github.com/jscad/OpenJSCAD.org",
  "scripts": {
    "docs": "jsdoc --configure jsdoc.json",
    "coverage": "npm run bootstrap && lerna run --concurrency 1 --stream coverage",
    "test": "npm run bootstrap && lerna run --stream test",
    "test:tsd": "lerna run test:tsd",
    "lint": "standardx 'packages/**/*.js'",
    "bootstrap": "lerna bootstrap --hoist nyc --hoist ava --ignore-prepublish --no-ci",
    "changed": "lerna changed",
    "clean": "lerna clean",
    "graph": "lerna list --graph",
    "list": "lerna ls",
    "cli": "npm run bootstrap && cd ./packages/cli",
    "web": "npm run bootstrap && cd ./packages/web && npm run dev",
    "desktop": "npm run bootstrap && cd ./packages/desktop && npm run dev",
    "preversion": "npm run test && npm run docs",
    "publish": "lerna publish --include-merged-tags --no-private --no-push --conventional-commits",
    "publish-dryrun": "lerna version --include-merged-tags --no-private --no-push --conventional-commits"
  },
  "contributors": [
    {
      "name": "Rene K. Mueller",
      "url": "http://renekmueller.com"
    },
    {
      "name": "z3dev",
      "url": "http://www.z3d.jp"
    },
    {
      "name": "Mark 'kaosat-dev' Moissette",
      "url": "http://kaosat.net"
    }
  ],
  "license": "MIT",
  "dependencies": {},
  "devDependencies": {
    "@jscad/sample-files": "github:jscad/sample-files#master",
    "ava": "3.15.0",
    "docdash": "1.2.0",
    "jsdoc": "3.6.6",
    "lerna": "3.22.1",
    "nyc": "15.1.0",
    "standardx": "7.0.0",
    "tsd": "^0.13.1"
  },
  "collective": {
    "type": "opencollective",
    "url": "https://opencollective.com/openjscad",
    "logo": "https://opencollective.com/openjscad/logo.txt"
  },
  "standardx": {
    "ignore": [
      "**/dist/",
      "**/old/",
      "**/examples/",
      "**/ui/csg-viewer",
      "**/io/scad-deserializer",
      "**/io/gcode-deserializer"
    ],
    "env": {
      "browser": true,
      "node": true
    }
  },
  "eslintConfig": {
    "rules": {
      "func-style": [
        "error",
        "expression"
      ],
      "arrow-body-style": [
        "error",
        "as-needed"
      ],
      "arrow-parens": [
        "error",
        "always"
      ],
      "arrow-spacing": "error",
      "prefer-arrow-callback": "error",
      "no-var": "error"
    }
  }
}
